// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple
{
    /// <summary>
    /// All Operations related to Backup
    /// </summary>
    public partial interface IBackupOperations
    {
        /// <summary>
        /// Begin a backup operation for the policyId and backupRequest
        /// specified.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The policy id for which the call will be made.
        /// </param>
        /// <param name='backupRequest'>
        /// Parameters supplied to the Begin Backup operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginCreatingBackupAsync(string deviceId, string policyId, BackupNowRequest backupRequest, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// Begin deleting a backup set represented by the backSetId provided.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupSetId'>
        /// The backup set ID to delete.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginDeletingAsync(string deviceId, string backupSetId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// Begin restoring a backup set.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupDetailsForRestore'>
        /// The details of the backup to be restored.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginRestoringAsync(string deviceId, RestoreBackupRequest backupDetailsForRestore, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The policy id for which the call will be made.
        /// </param>
        /// <param name='backupRequest'>
        /// Parameters supplied to the Begin Backup operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> CreateAsync(string deviceId, string policyId, BackupNowRequest backupRequest, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupSetId'>
        /// The backup set ID to delete.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> DeleteAsync(string deviceId, string backupSetId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='filterType'>
        /// If isAllSelected = true, then specify Volume or BackupPolicy here
        /// </param>
        /// <param name='isAllSelected'>
        /// To retrieve Volume or BackupPolicy or both
        /// </param>
        /// <param name='filterValue'>
        /// If isAllSelected = true then specify VolumeId or BackupPolicy here
        /// </param>
        /// <param name='startTime'>
        /// StartTime for filtering BackupSets
        /// </param>
        /// <param name='endTime'>
        /// EndTime for filtering BackupSets
        /// </param>
        /// <param name='skip'>
        /// Number of elements to be skipped as part of pagination
        /// </param>
        /// <param name='top'>
        /// Number of elements to retrieve in the current page
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list of BackupSets.
        /// </returns>
        Task<GetBackupResponse> GetAsync(string deviceId, string filterType, string isAllSelected, string filterValue, string startTime, string endTime, string skip, string top, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// Restore a backup set.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupDetailsForRestore'>
        /// The details of the backup to be restored.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> RestoreAsync(string deviceId, RestoreBackupRequest backupDetailsForRestore, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
    }
}
