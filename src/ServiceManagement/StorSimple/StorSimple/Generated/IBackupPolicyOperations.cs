// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.StorSimple.Models;

namespace Microsoft.WindowsAzure.Management.StorSimple
{
    /// <summary>
    /// All Operations related to Backup policies
    /// </summary>
    public partial interface IBackupPolicyOperations
    {
        /// <summary>
        /// The BeginCreatingBackupPolicy operation creates a new backup policy
        /// for this given volume with the given schedules.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupPolicy'>
        /// Parameters supplied to the Create Backup Policy operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginCreatingBackupPolicyAsync(string deviceId, NewBackupPolicyConfig backupPolicy, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// Begin deleting a backup policy represented by the policyId provided.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The backup policy ID to delete.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginDeletingAsync(string deviceId, string policyId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <summary>
        /// The BeginUpdatingBackupPolicy operation updates a backup policy
        /// represented by policyId for this given volume with the given
        /// schedules.
        /// </summary>
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The backup policy ID to update.
        /// </param>
        /// <param name='policyInfo'>
        /// Parameters supplied to the Update Backup Policy operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// This is the Task Response for all Async Calls
        /// </returns>
        Task<TaskResponse> BeginUpdatingBackupPolicyAsync(string deviceId, string policyId, UpdateBackupPolicyConfig policyInfo, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='backupPolicy'>
        /// Parameters supplied to the Create Backup Policy operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> CreateAsync(string deviceId, NewBackupPolicyConfig backupPolicy, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The backup policy ID to delete.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> DeleteAsync(string deviceId, string policyId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyName'>
        /// The name of the policy to fetch backup policy details by.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list of backup policies.
        /// </returns>
        Task<GetBackupPolicyDetailsResponse> GetBackupPolicyDetailsByNameAsync(string deviceId, string policyName, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response model for the list of backup policies.
        /// </returns>
        Task<BackupPolicyListResponse> ListAsync(string deviceId, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
        
        /// <param name='deviceId'>
        /// The device id for which the call will be made.
        /// </param>
        /// <param name='policyId'>
        /// The backup policy ID to update.
        /// </param>
        /// <param name='policyInfo'>
        /// Parameters supplied to the Create Backup Policy operation.
        /// </param>
        /// <param name='customRequestHeaders'>
        /// The Custom Request Headers which client must use.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Info about the async task
        /// </returns>
        Task<TaskStatusInfo> UpdateAsync(string deviceId, string policyId, UpdateBackupPolicyConfig policyInfo, CustomRequestHeaders customRequestHeaders, CancellationToken cancellationToken);
    }
}
