// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql.Models
{
    /// <summary>
    /// Represents a database in the Azure SQL Database service.
    /// </summary>
    public partial class Database : SqlModelCommon
    {
        private string _assignedServiceObjectiveId;
        
        /// <summary>
        /// Optional. Gets the ID of the assigned service objective for this
        /// database.  This is the ID of the service objective being applied.
        /// </summary>
        public string AssignedServiceObjectiveId
        {
            get { return this._assignedServiceObjectiveId; }
            set { this._assignedServiceObjectiveId = value; }
        }
        
        private string _collationName;
        
        /// <summary>
        /// Optional. Gets the name of the collation for this database.
        /// </summary>
        public string CollationName
        {
            get { return this._collationName; }
            set { this._collationName = value; }
        }
        
        private DateTime _creationDate;
        
        /// <summary>
        /// Optional. Gets the date this database was created.
        /// </summary>
        public DateTime CreationDate
        {
            get { return this._creationDate; }
            set { this._creationDate = value; }
        }
        
        private string _edition;
        
        /// <summary>
        /// Optional. Gets the edition of the Azure SQL Database.  The
        /// DatabaseEditions enumeration contains all the valid editions.
        /// </summary>
        public string Edition
        {
            get { return this._edition; }
            set { this._edition = value; }
        }
        
        private int _id;
        
        /// <summary>
        /// Optional. Gets the ID of the database.  This ID is unique within
        /// the server that contains the database.
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private bool _isFederationRoot;
        
        /// <summary>
        /// Optional. Gets whether or not the database is a federation root.
        /// </summary>
        public bool IsFederationRoot
        {
            get { return this._isFederationRoot; }
            set { this._isFederationRoot = value; }
        }
        
        private bool _isSystemObject;
        
        /// <summary>
        /// Optional. Gets whether or not the database is a system object.
        /// </summary>
        public bool IsSystemObject
        {
            get { return this._isSystemObject; }
            set { this._isSystemObject = value; }
        }
        
        private long _maximumDatabaseSizeInBytes;
        
        /// <summary>
        /// Optional. Gets the maximum size of this database expressed in bytes.
        /// </summary>
        public long MaximumDatabaseSizeInBytes
        {
            get { return this._maximumDatabaseSizeInBytes; }
            set { this._maximumDatabaseSizeInBytes = value; }
        }
        
        private int _maximumDatabaseSizeInGB;
        
        /// <summary>
        /// Optional. Gets the maximum size of this database expressed in
        /// gigabytes.
        /// </summary>
        public int MaximumDatabaseSizeInGB
        {
            get { return this._maximumDatabaseSizeInGB; }
            set { this._maximumDatabaseSizeInGB = value; }
        }
        
        private System.DateTime? _recoveryPeriodStartDate;
        
        /// <summary>
        /// Optional. Gets the starting date of the restorable period for this
        /// database.
        /// </summary>
        public System.DateTime? RecoveryPeriodStartDate
        {
            get { return this._recoveryPeriodStartDate; }
            set { this._recoveryPeriodStartDate = value; }
        }
        
        private string _serviceObjectiveAssignmentErrorCode;
        
        /// <summary>
        /// Optional. Gets the error code raised when assigning a new service
        /// objective if there was one.
        /// </summary>
        public string ServiceObjectiveAssignmentErrorCode
        {
            get { return this._serviceObjectiveAssignmentErrorCode; }
            set { this._serviceObjectiveAssignmentErrorCode = value; }
        }
        
        private string _serviceObjectiveAssignmentErrorDescription;
        
        /// <summary>
        /// Optional. Gets the description of the error if an error occured
        /// while applying a new service objective.
        /// </summary>
        public string ServiceObjectiveAssignmentErrorDescription
        {
            get { return this._serviceObjectiveAssignmentErrorDescription; }
            set { this._serviceObjectiveAssignmentErrorDescription = value; }
        }
        
        private string _serviceObjectiveAssignmentState;
        
        /// <summary>
        /// Optional. Gets the state of the current service objective
        /// assignment in numerical format.
        /// </summary>
        public string ServiceObjectiveAssignmentState
        {
            get { return this._serviceObjectiveAssignmentState; }
            set { this._serviceObjectiveAssignmentState = value; }
        }
        
        private string _serviceObjectiveAssignmentStateDescription;
        
        /// <summary>
        /// Optional. Gets the description of the state of the current service
        /// objective assignment.
        /// </summary>
        public string ServiceObjectiveAssignmentStateDescription
        {
            get { return this._serviceObjectiveAssignmentStateDescription; }
            set { this._serviceObjectiveAssignmentStateDescription = value; }
        }
        
        private string _serviceObjectiveAssignmentSuccessDate;
        
        /// <summary>
        /// Optional. Gets the date the service objective assignment succeeded.
        /// </summary>
        public string ServiceObjectiveAssignmentSuccessDate
        {
            get { return this._serviceObjectiveAssignmentSuccessDate; }
            set { this._serviceObjectiveAssignmentSuccessDate = value; }
        }
        
        private string _serviceObjectiveId;
        
        /// <summary>
        /// Optional. Gets the ID of the current service objective.
        /// </summary>
        public string ServiceObjectiveId
        {
            get { return this._serviceObjectiveId; }
            set { this._serviceObjectiveId = value; }
        }
        
        private string _sizeMB;
        
        /// <summary>
        /// Optional. Gets the current usage of the database in megabytes.
        /// </summary>
        public string SizeMB
        {
            get { return this._sizeMB; }
            set { this._sizeMB = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Database class.
        /// </summary>
        public Database()
        {
        }
    }
}
