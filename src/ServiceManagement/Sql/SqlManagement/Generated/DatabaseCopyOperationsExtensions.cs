// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Sql;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql
{
    /// <summary>
    /// This is the main client class for interacting with the Azure SQL
    /// Database REST APIs.
    /// </summary>
    public static partial class DatabaseCopyOperationsExtensions
    {
        /// <summary>
        /// Starts a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the SQL Server where the source database
        /// resides.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the source database.
        /// </param>
        /// <param name='parameters'>
        /// Required. The additional parameters for the create database copy
        /// operation.
        /// </param>
        /// <returns>
        /// Represents a response to the create request.
        /// </returns>
        public static DatabaseCopyCreateResponse Create(this IDatabaseCopyOperations operations, string serverName, string databaseName, DatabaseCopyCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseCopyOperations)s).CreateAsync(serverName, databaseName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Starts a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the SQL Server where the source database
        /// resides.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the source database.
        /// </param>
        /// <param name='parameters'>
        /// Required. The additional parameters for the create database copy
        /// operation.
        /// </param>
        /// <returns>
        /// Represents a response to the create request.
        /// </returns>
        public static Task<DatabaseCopyCreateResponse> CreateAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, DatabaseCopyCreateParameters parameters)
        {
            return operations.CreateAsync(serverName, databaseName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Stops a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to stop.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseCopyOperations)s).DeleteAsync(serverName, databaseName, databaseCopyName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Stops a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to stop.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName)
        {
            return operations.DeleteAsync(serverName, databaseName, databaseCopyName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieves information about a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to retrieve.
        /// </param>
        /// <returns>
        /// Represents a response to the get request.
        /// </returns>
        public static DatabaseCopyGetResponse Get(this IDatabaseCopyOperations operations, string serverName, string databaseName, string databaseCopyName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseCopyOperations)s).GetAsync(serverName, databaseName, databaseCopyName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieves information about a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to retrieve.
        /// </param>
        /// <returns>
        /// Represents a response to the get request.
        /// </returns>
        public static Task<DatabaseCopyGetResponse> GetAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, string databaseCopyName)
        {
            return operations.GetAsync(serverName, databaseName, databaseCopyName, CancellationToken.None);
        }
        
        /// <summary>
        /// Retrieves the list of SQL Server database copies for a database.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the database server to be queried.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database to be queried.
        /// </param>
        /// <returns>
        /// Represents the response containing the list of database copies for
        /// a given database.
        /// </returns>
        public static DatabaseCopyListResponse List(this IDatabaseCopyOperations operations, string serverName, string databaseName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseCopyOperations)s).ListAsync(serverName, databaseName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Retrieves the list of SQL Server database copies for a database.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the database server to be queried.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database to be queried.
        /// </param>
        /// <returns>
        /// Represents the response containing the list of database copies for
        /// a given database.
        /// </returns>
        public static Task<DatabaseCopyListResponse> ListAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName)
        {
            return operations.ListAsync(serverName, databaseName, CancellationToken.None);
        }
        
        /// <summary>
        /// Updates a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to update.
        /// </param>
        /// <param name='parameters'>
        /// Required. The additional parameters for the update database copy
        /// operation.
        /// </param>
        /// <returns>
        /// Represents a response to the update request.
        /// </returns>
        public static DatabaseCopyUpdateResponse Update(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName, DatabaseCopyUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IDatabaseCopyOperations)s).UpdateAsync(serverName, databaseName, databaseCopyName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Updates a SQL Server database copy.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IDatabaseCopyOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the source or destination SQL Server instance.
        /// </param>
        /// <param name='databaseName'>
        /// Required. The name of the database.
        /// </param>
        /// <param name='databaseCopyName'>
        /// Required. The unique identifier for the database copy to update.
        /// </param>
        /// <param name='parameters'>
        /// Required. The additional parameters for the update database copy
        /// operation.
        /// </param>
        /// <returns>
        /// Represents a response to the update request.
        /// </returns>
        public static Task<DatabaseCopyUpdateResponse> UpdateAsync(this IDatabaseCopyOperations operations, string serverName, string databaseName, Guid databaseCopyName, DatabaseCopyUpdateParameters parameters)
        {
            return operations.UpdateAsync(serverName, databaseName, databaseCopyName, parameters, CancellationToken.None);
        }
    }
}
