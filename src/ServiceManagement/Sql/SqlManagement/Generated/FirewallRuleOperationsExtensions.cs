// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Sql;
using Microsoft.WindowsAzure.Management.Sql.Models;

namespace Microsoft.WindowsAzure.Management.Sql
{
    /// <summary>
    /// This is the main client class for interacting with the Azure SQL
    /// Database REST APIs.
    /// </summary>
    public static partial class FirewallRuleOperationsExtensions
    {
        /// <summary>
        /// Adds a new server-level Firewall Rule for an Azure SQL Database
        /// Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to which this
        /// rule will be applied.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters for the Create Firewall Rule operation.
        /// </param>
        /// <returns>
        /// Contains the response to a Create Firewall Rule operation.
        /// </returns>
        public static FirewallRuleCreateResponse Create(this IFirewallRuleOperations operations, string serverName, FirewallRuleCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFirewallRuleOperations)s).CreateAsync(serverName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Adds a new server-level Firewall Rule for an Azure SQL Database
        /// Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to which this
        /// rule will be applied.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters for the Create Firewall Rule operation.
        /// </param>
        /// <returns>
        /// Contains the response to a Create Firewall Rule operation.
        /// </returns>
        public static Task<FirewallRuleCreateResponse> CreateAsync(this IFirewallRuleOperations operations, string serverName, FirewallRuleCreateParameters parameters)
        {
            return operations.CreateAsync(serverName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes a server-level Firewall Rule from an Azure SQL Database
        /// Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server that will have
        /// the Firewall Fule removed from it.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the Firewall Fule to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IFirewallRuleOperations operations, string serverName, string ruleName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFirewallRuleOperations)s).DeleteAsync(serverName, ruleName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes a server-level Firewall Rule from an Azure SQL Database
        /// Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server that will have
        /// the Firewall Fule removed from it.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the Firewall Fule to delete.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IFirewallRuleOperations operations, string serverName, string ruleName)
        {
            return operations.DeleteAsync(serverName, ruleName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns the Firewall rule for an Azure SQL Database Server with a
        /// matching name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to query for
        /// the Firewall Rule.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the rule to retrieve.
        /// </param>
        /// <returns>
        /// Contains the response from a request to Get Firewall Rule.
        /// </returns>
        public static FirewallRuleGetResponse Get(this IFirewallRuleOperations operations, string serverName, string ruleName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFirewallRuleOperations)s).GetAsync(serverName, ruleName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns the Firewall rule for an Azure SQL Database Server with a
        /// matching name.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server to query for
        /// the Firewall Rule.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the rule to retrieve.
        /// </param>
        /// <returns>
        /// Contains the response from a request to Get Firewall Rule.
        /// </returns>
        public static Task<FirewallRuleGetResponse> GetAsync(this IFirewallRuleOperations operations, string serverName, string ruleName)
        {
            return operations.GetAsync(serverName, ruleName, CancellationToken.None);
        }
        
        /// <summary>
        /// Returns a list of server-level Firewall Rules for an Azure SQL
        /// Database Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server from which to
        /// list the Firewall Rules.
        /// </param>
        /// <returns>
        /// Contains the response from a request to List Firewall Rules.
        /// </returns>
        public static FirewallRuleListResponse List(this IFirewallRuleOperations operations, string serverName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFirewallRuleOperations)s).ListAsync(serverName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Returns a list of server-level Firewall Rules for an Azure SQL
        /// Database Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server from which to
        /// list the Firewall Rules.
        /// </param>
        /// <returns>
        /// Contains the response from a request to List Firewall Rules.
        /// </returns>
        public static Task<FirewallRuleListResponse> ListAsync(this IFirewallRuleOperations operations, string serverName)
        {
            return operations.ListAsync(serverName, CancellationToken.None);
        }
        
        /// <summary>
        /// Updates an existing server-level Firewall Rule for an Azure SQL
        /// Database Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server that has the
        /// Firewall Rule to be updated.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the Firewall Rule to be updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters for the Update Firewall Rule operation.
        /// </param>
        /// <returns>
        /// Represents the firewall rule update response.
        /// </returns>
        public static FirewallRuleUpdateResponse Update(this IFirewallRuleOperations operations, string serverName, string ruleName, FirewallRuleUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IFirewallRuleOperations)s).UpdateAsync(serverName, ruleName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Updates an existing server-level Firewall Rule for an Azure SQL
        /// Database Server.
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.Sql.IFirewallRuleOperations.
        /// </param>
        /// <param name='serverName'>
        /// Required. The name of the Azure SQL Database Server that has the
        /// Firewall Rule to be updated.
        /// </param>
        /// <param name='ruleName'>
        /// Required. The name of the Firewall Rule to be updated.
        /// </param>
        /// <param name='parameters'>
        /// Required. The parameters for the Update Firewall Rule operation.
        /// </param>
        /// <returns>
        /// Represents the firewall rule update response.
        /// </returns>
        public static Task<FirewallRuleUpdateResponse> UpdateAsync(this IFirewallRuleOperations operations, string serverName, string ruleName, FirewallRuleUpdateParameters parameters)
        {
            return operations.UpdateAsync(serverName, ruleName, parameters, CancellationToken.None);
        }
    }
}
