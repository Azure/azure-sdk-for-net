// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Models;

namespace Microsoft.WindowsAzure.Management
{
    /// <summary>
    /// Operations for managing service principals for your subscription.
    /// </summary>
    public partial interface ISubscriptionServicePrincipalOperations
    {
        /// <summary>
        /// The Create Service principal operation adds a new service principal
        /// in the subscription.
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Service Principal operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> CreateAsync(SubscriptionServicePrincipalCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Service Principal operation deletes the service
        /// principalwith specified servicePrincipalId, if it exists in the
        /// subscription.
        /// </summary>
        /// <param name='servicePrincipalId'>
        /// The Id of the service principal.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteAsync(string servicePrincipalId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Service Principal operation retrieves the service
        /// principalwith the specified servicePrincipalId, if it exists in
        /// the subscription.
        /// </summary>
        /// <param name='servicePrincipalId'>
        /// The Id of the service principal.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The Get Service Principal operation response.
        /// </returns>
        Task<SubscriptionServicePrincipalGetResponse> GetAsync(string servicePrincipalId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Service Principal operation retrieves all the service
        /// principalsexisting in the current subscription.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The List Service Principal operation response.
        /// </returns>
        Task<SubscriptionServicePrincipalListResponse> ListAsync(CancellationToken cancellationToken);
    }
}
