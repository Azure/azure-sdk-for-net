// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.SiteRecovery.Models
{
    /// <summary>
    /// Certificate to be uploaded to the vault
    /// </summary>
    public partial class CertificateArgs
    {
        private string _certificate;
        
        /// <summary>
        /// Required. Certificate  as Base64 string
        /// </summary>
        public string Certificate
        {
            get { return this._certificate; }
            set { this._certificate = value; }
        }
        
        private string _contractVersion;
        
        /// <summary>
        /// Required. Contract version for the entity.
        /// </summary>
        public string ContractVersion
        {
            get { return this._contractVersion; }
            set { this._contractVersion = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the CertificateArgs class.
        /// </summary>
        public CertificateArgs()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the CertificateArgs class with
        /// required arguments.
        /// </summary>
        public CertificateArgs(string contractVersion, string certificate)
            : this()
        {
            if (contractVersion == null)
            {
                throw new ArgumentNullException("contractVersion");
            }
            if (certificate == null)
            {
                throw new ArgumentNullException("certificate");
            }
            this.ContractVersion = contractVersion;
            this.Certificate = certificate;
        }
    }
}
