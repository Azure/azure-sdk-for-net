// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.SiteRecovery.Models;

namespace Microsoft.WindowsAzure.Management.SiteRecovery.Models
{
    /// <summary>
    /// The Test failover request object.
    /// </summary>
    public partial class TestFailoverRequest : FailoverRequest
    {
        private string _networkID;
        
        /// <summary>
        /// Required. Network ID for TestFailover.
        /// </summary>
        public string NetworkID
        {
            get { return this._networkID; }
            set { this._networkID = value; }
        }
        
        private string _networkType;
        
        /// <summary>
        /// Required. Network type for TestFailover.
        /// </summary>
        public string NetworkType
        {
            get { return this._networkType; }
            set { this._networkType = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the TestFailoverRequest class.
        /// </summary>
        public TestFailoverRequest()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the TestFailoverRequest class with
        /// required arguments.
        /// </summary>
        public TestFailoverRequest(string networkType, string networkID)
            : this()
        {
            if (networkType == null)
            {
                throw new ArgumentNullException("networkType");
            }
            if (networkID == null)
            {
                throw new ArgumentNullException("networkID");
            }
            this.NetworkType = networkType;
            this.NetworkID = networkID;
        }
    }
}
