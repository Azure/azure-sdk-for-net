// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Storage.Models;

namespace Microsoft.WindowsAzure.Management.Storage
{
    /// <summary>
    /// The Service Management API includes operations for managing the storage
    /// accounts beneath your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460790.aspx for
    /// more information)
    /// </summary>
    public partial interface IStorageAccountOperations
    {
        /// <summary>
        /// Abort storage account migration api validates and aborts the given
        /// storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> AbortMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Abort storage account migration api validates and aborts the given
        /// storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginAbortMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Commit storage account migration api validates and commits the
        /// given storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCommitMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Storage Account operation creates a new storage
        /// account in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Storage Account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginCreatingAsync(StorageAccountCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Prepare storage account migration api validates and prepares the
        /// given storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> BeginPrepareMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Check Name Availability operation checks if a storage account
        /// name is available for use in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154125.aspx
        /// for more information)
        /// </summary>
        /// <param name='accountName'>
        /// The desired storage account name to check for availability.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a storage account check name availability request.
        /// </returns>
        Task<CheckNameAvailabilityResponse> CheckNameAvailabilityAsync(string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Commit storage account migration api validates and commits the
        /// given storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CommitMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Storage Account operation creates a new storage account
        /// in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264518.aspx
        /// for more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Storage Account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> CreateAsync(StorageAccountCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Storage Account operation deletes the specified storage
        /// account from Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264517.aspx
        /// for more information)
        /// </summary>
        /// <param name='accountName'>
        /// The name of the storage account to be deleted.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteAsync(string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Storage Account Properties operation returns system
        /// properties for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460802.aspx
        /// for more information)
        /// </summary>
        /// <param name='accountName'>
        /// Name of the storage account to get properties for.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The Get Storage Account Properties operation response.
        /// </returns>
        Task<StorageAccountGetResponse> GetAsync(string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Storage Keys operation returns the primary and secondary
        /// access keys for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460785.aspx
        /// for more information)
        /// </summary>
        /// <param name='accountName'>
        /// The name of the desired storage account.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        Task<StorageAccountGetKeysResponse> GetKeysAsync(string accountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Storage Accounts operation lists the storage accounts
        /// available under the current subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460787.aspx
        /// for more information)
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The List Storage Accounts operation response.
        /// </returns>
        Task<StorageAccountListResponse> ListAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// Prepare storage account migration api validates and prepares the
        /// given storage account for IaaS Classic to ARM migration.
        /// </summary>
        /// <param name='storageAccountName'>
        /// Name of storage account to be migrated.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request and error information regarding
        /// the failure.
        /// </returns>
        Task<OperationStatusResponse> PrepareMigrationAsync(string storageAccountName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Regenerate Keys operation regenerates the primary or secondary
        /// access key for the specified storage account.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460795.aspx
        /// for more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Regenerate Keys operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The primary and secondary access keys for a storage account.
        /// </returns>
        Task<StorageAccountRegenerateKeysResponse> RegenerateKeysAsync(StorageAccountRegenerateKeysParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update Storage Account operation updates the label and the
        /// description, and enables or disables the geo-replication status
        /// for a storage account in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/hh264516.aspx
        /// for more information)
        /// </summary>
        /// <param name='accountName'>
        /// Name of the storage account to update.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Update Storage Account operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> UpdateAsync(string accountName, StorageAccountUpdateParameters parameters, CancellationToken cancellationToken);
    }
}
