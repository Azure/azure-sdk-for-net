// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.TrafficManager.Models;

namespace Microsoft.WindowsAzure.Management.TrafficManager.Models
{
    /// <summary>
    /// Describes a monitoring configuration
    /// </summary>
    public partial class DefinitionMonitor
    {
        private DefinitionMonitorHTTPOptions _httpOptions;
        
        /// <summary>
        /// Required. The option to use when making an HTTP request to monitor
        /// endpoint health.
        /// </summary>
        public DefinitionMonitorHTTPOptions HttpOptions
        {
            get { return this._httpOptions; }
            set { this._httpOptions = value; }
        }
        
        private int _intervalInSeconds;
        
        /// <summary>
        /// Required. The number of seconds between consecutive attempts to
        /// check the status of a monitoring endpoint. The value must be set
        /// to 30.
        /// </summary>
        public int IntervalInSeconds
        {
            get { return this._intervalInSeconds; }
            set { this._intervalInSeconds = value; }
        }
        
        private int _port;
        
        /// <summary>
        /// Required. The port used to monitor endpoint health. Accepted values
        /// are integer values greater than 0 and less or equal to 65,535.
        /// </summary>
        public int Port
        {
            get { return this._port; }
            set { this._port = value; }
        }
        
        private DefinitionMonitorProtocol _protocol;
        
        /// <summary>
        /// Required. The protocol to use to monitor endpoint health.
        /// </summary>
        public DefinitionMonitorProtocol Protocol
        {
            get { return this._protocol; }
            set { this._protocol = value; }
        }
        
        private int _timeoutInSeconds;
        
        /// <summary>
        /// Required. The time to wait for a response from the monitoring
        /// endpoint. The value must be set to 10.
        /// </summary>
        public int TimeoutInSeconds
        {
            get { return this._timeoutInSeconds; }
            set { this._timeoutInSeconds = value; }
        }
        
        private int _toleratedNumberOfFailures;
        
        /// <summary>
        /// Required. The number of consecutive failures to allow on an
        /// endpoint before taking the endpoint out of the rotation in the
        /// load balancer. The value must be set to 3.
        /// </summary>
        public int ToleratedNumberOfFailures
        {
            get { return this._toleratedNumberOfFailures; }
            set { this._toleratedNumberOfFailures = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DefinitionMonitor class.
        /// </summary>
        public DefinitionMonitor()
        {
        }
    }
}
