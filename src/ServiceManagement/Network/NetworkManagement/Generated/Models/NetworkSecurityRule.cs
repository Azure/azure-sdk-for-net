// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;

namespace Microsoft.WindowsAzure.Management.Network.Models
{
    /// <summary>
    /// A Network Security Rule within a Network Security Group.
    /// </summary>
    public partial class NetworkSecurityRule
    {
        private string _action;
        
        /// <summary>
        /// Required. Allow/Deny. Whether to allow or deny traffic.
        /// </summary>
        public string Action
        {
            get { return this._action; }
            set { this._action = value; }
        }
        
        private string _destinationAddressPrefix;
        
        /// <summary>
        /// Required. CIDR value of Destination IP from which traffic is
        /// coming. You can specify star (*) to map all traffic or one of
        /// pre-defined TAGs.
        /// </summary>
        public string DestinationAddressPrefix
        {
            get { return this._destinationAddressPrefix; }
            set { this._destinationAddressPrefix = value; }
        }
        
        private string _destinationPortRange;
        
        /// <summary>
        /// Required. Destination Port (single port) or Destination Port Range
        /// (separated by “-“) or star (*) for all ports. All numbers are
        /// inclusive. Example: 80, 80-80, 80-81, *
        /// </summary>
        public string DestinationPortRange
        {
            get { return this._destinationPortRange; }
            set { this._destinationPortRange = value; }
        }
        
        private bool _isDefault;
        
        /// <summary>
        /// Required. Specified if this is a default Network Security Rule.
        /// </summary>
        public bool IsDefault
        {
            get { return this._isDefault; }
            set { this._isDefault = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required. Name of Rule.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private int _priority;
        
        /// <summary>
        /// Required. Priority of the Rule.
        /// </summary>
        public int Priority
        {
            get { return this._priority; }
            set { this._priority = value; }
        }
        
        private string _protocol;
        
        /// <summary>
        /// Required. TCP, UDP, *.
        /// </summary>
        public string Protocol
        {
            get { return this._protocol; }
            set { this._protocol = value; }
        }
        
        private string _sourceAddressPrefix;
        
        /// <summary>
        /// Required. CIDR value of Source IP from which traffic is coming. You
        /// can specify star (*) to map all traffic or one of pre-defined TAGs
        /// </summary>
        public string SourceAddressPrefix
        {
            get { return this._sourceAddressPrefix; }
            set { this._sourceAddressPrefix = value; }
        }
        
        private string _sourcePortRange;
        
        /// <summary>
        /// Required. Source Port (single port) or Source Port Range (separated
        /// by “-“) or star (*) for all ports. All numbers are inclusive.
        /// Example: 80, 80-80, 80-81, *
        /// </summary>
        public string SourcePortRange
        {
            get { return this._sourcePortRange; }
            set { this._sourcePortRange = value; }
        }
        
        private string _state;
        
        /// <summary>
        /// Required. The state of the Network Security Rule
        /// </summary>
        public string State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private string _type;
        
        /// <summary>
        /// Required. Type of Rule. Possible values: Inbound (to be evaluated
        /// against ingress traffic), Outbound (to be evaluated against egress
        /// traffic).
        /// </summary>
        public string Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the NetworkSecurityRule class.
        /// </summary>
        public NetworkSecurityRule()
        {
        }
    }
}
