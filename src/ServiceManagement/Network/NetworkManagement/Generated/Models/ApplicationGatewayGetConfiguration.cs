// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Network.Models;

namespace Microsoft.WindowsAzure.Management.Network.Models
{
    /// <summary>
    /// The response to a GetApplicationGatewayConfiguation  request.
    /// </summary>
    public partial class ApplicationGatewayGetConfiguration : AzureOperationResponse
    {
        private IList<BackendAddressPool> _backendAddressPools;
        
        /// <summary>
        /// Optional. Backend Address Pool
        /// </summary>
        public IList<BackendAddressPool> BackendAddressPools
        {
            get { return this._backendAddressPools; }
            set { this._backendAddressPools = value; }
        }
        
        private IList<BackendHttpSettings> _backendHttpSettingsList;
        
        /// <summary>
        /// Optional. Backend Http Setting
        /// </summary>
        public IList<BackendHttpSettings> BackendHttpSettingsList
        {
            get { return this._backendHttpSettingsList; }
            set { this._backendHttpSettingsList = value; }
        }
        
        private IList<FrontendIPConfiguration> _frontendIPConfigurations;
        
        /// <summary>
        /// Optional. Frontend IPs of application gateway.
        /// </summary>
        public IList<FrontendIPConfiguration> FrontendIPConfigurations
        {
            get { return this._frontendIPConfigurations; }
            set { this._frontendIPConfigurations = value; }
        }
        
        private IList<FrontendPort> _frontendPorts;
        
        /// <summary>
        /// Optional. Front end ports on the application gateway.
        /// </summary>
        public IList<FrontendPort> FrontendPorts
        {
            get { return this._frontendPorts; }
            set { this._frontendPorts = value; }
        }
        
        private IList<AGHttpListener> _httpListeners;
        
        /// <summary>
        /// Optional. Backend Http Setting
        /// </summary>
        public IList<AGHttpListener> HttpListeners
        {
            get { return this._httpListeners; }
            set { this._httpListeners = value; }
        }
        
        private IList<HttpLoadBalancingRule> _httpLoadBalancingRules;
        
        /// <summary>
        /// Optional. Backend Http Setting
        /// </summary>
        public IList<HttpLoadBalancingRule> HttpLoadBalancingRules
        {
            get { return this._httpLoadBalancingRules; }
            set { this._httpLoadBalancingRules = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the
        /// ApplicationGatewayGetConfiguration class.
        /// </summary>
        public ApplicationGatewayGetConfiguration()
        {
            this.BackendAddressPools = new LazyList<BackendAddressPool>();
            this.BackendHttpSettingsList = new LazyList<BackendHttpSettings>();
            this.FrontendIPConfigurations = new LazyList<FrontendIPConfiguration>();
            this.FrontendPorts = new LazyList<FrontendPort>();
            this.HttpListeners = new LazyList<AGHttpListener>();
            this.HttpLoadBalancingRules = new LazyList<HttpLoadBalancingRule>();
        }
    }
}
