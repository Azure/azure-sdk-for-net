// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.Network.Models;

namespace Microsoft.WindowsAzure.Management.Network
{
    /// <summary>
    /// The Network Management API includes operations for managing the
    /// gateways for your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154113.aspx for
    /// more information)
    /// </summary>
    public partial interface IGatewayOperations
    {
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Connect Disconnect Or Testing
        /// Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginConnectDisconnectOrTestingAsync(string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Virtual network Gateway operation creates a new
        /// network gateway for the specified virtual network in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginCreatingAsync(string networkName, GatewayCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Virtual network Gateway connection operation
        /// creates a new network gateway connection.
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Gateway Connection
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginCreatingGatewayConnectionAsync(GatewayConnectionCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Creating Virtual network Gateway operation creates a new
        /// network gateway.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginCreatingVirtualNetworkGatewayAsync(string networkName, VirtualNetworkGatewayCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Deleting Virtual Network Gateway operation deletes a
        /// network gateway for the specified virtual network in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginDeletingAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Deleting Virtual Network Gateway connection deletes a
        /// network gateway connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginDeletingGatewayConnectionAsync(string gatewayId, string connectedentityId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Deleting Virtual Network Gateway operation deletes a
        /// network gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginDeletingVirtualNetworkGatewayAsync(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Failover Virtual Network Gateway operation causes a
        /// network gateway failover for the specified virtual network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginFailoverAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Generate VPN Client Package operation creates a VPN client
        /// package for the specified virtual network and gateway in Azure.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn205126.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Generate VPN Client Package operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginGenerateVpnClientPackageAsync(string networkName, GatewayGenerateVpnClientPackageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Remove Virtual Network Gateway Shared Key operation
        /// removes the default sites on the virtual network gateway for the
        /// specified virtual network.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginRemoveDefaultSitesAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual network Gateway operation resets an
        /// existing gateway.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Reset Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResetAsync(string networkName, ResetGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual Network Gateway Shared Key operation resets
        /// the shared key on the virtual network gateway for the specified
        /// virtual network connection to the specified local network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Reset
        /// Shared Key request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResetSharedKeyAsync(string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual Network Gateway Shared Key V2 operation
        /// resets the shared key used between the gateway and customer vpn.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Reset
        /// Shared Key V2 request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResetSharedKeyV2Async(string gatewayId, string connectedentityId, GatewayResetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual network Gateway operation resets an
        /// existing gateway.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Reset Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResetVirtualNetworkGatewayAsync(string gatewayId, ResetGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Resize Virtual network Gateway operation resizes an
        /// existing gateway to a different GatewaySKU.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Resize Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResizeAsync(string networkName, ResizeGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Resize Virtual network Gateway operation resizes an
        /// existing gateway to a different GatewaySKU.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Resize Virtual Network Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginResizeVirtualNetworkGatewayAsync(string gatewayId, ResizeGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway Shared Key operation sets the
        /// default sites on the virtual network gateway for the specified
        /// virtual network.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set
        /// Default Sites request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetDefaultSitesAsync(string networkName, GatewaySetDefaultSiteListParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway IPsec Parameters operation
        /// sets the IPsec parameters on the virtual network gateway for the
        /// specified connection to the specified local network in Azure.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set IPsec
        /// Parameters request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetIPsecParametersAsync(string networkName, string localNetworkName, GatewaySetIPsecParametersParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway IPsec Parameters V2 operation
        /// sets the IPsec parameters on the virtual network gateway
        /// connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set IPsec
        /// Parameters V2 request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetIPsecParametersV2Async(string gatewayId, string connectedentityId, GatewaySetIPsecParametersParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway Shared Key operation sets the
        /// shared key on the virtual network gateway for the specified
        /// virtual network connection to the specified local network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set Shared
        /// Key request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetSharedKeyAsync(string networkName, string localNetworkName, GatewaySetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway Shared Key V2 operation sets
        /// the shared key used between the gateway and customer vpn for the
        /// specified site.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set Shared
        /// Key V2 request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetSharedKeyV2Async(string gatewayId, string connectedentityId, GatewaySetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Start Diagnostics operation begins an asynchronous
        /// operation to starta diagnostics session for the specified virtual
        /// network gateway in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Start Diagnostics operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginStartDiagnosticsAsync(string networkName, StartGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Start Diagnostics V2 operation begins an asynchronous
        /// operation to starta diagnostics session for the specified virtual
        /// network gateway.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Start Diagnostics V2 operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginStartDiagnosticsV2Async(string gatewayId, StartGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Operation to update existing gateway connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Update gateway conneciton
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginUpdateGatewayConnectionAsync(string gatewayId, string connectedentityId, UpdateGatewayConnectionParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// To connect to, disconnect from, or test your connection to a local
        /// network site, access the connection resource representing the
        /// local network and specify Connect, Disconnect or Test to perform
        /// the desired operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154107.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkSiteName'>
        /// The name of the site to connect to.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Connect Disconnect Or Testing Gateway
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ConnectDisconnectOrTestAsync(string networkName, string localNetworkSiteName, GatewayConnectDisconnectOrTestParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateway for the specified virtual network in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> CreateAsync(string networkName, GatewayCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Virtual network Gateway Connection operation creates a
        /// new network gateway.
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Creating Gateway Connection
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> CreateGatewayConnectionAsync(GatewayConnectionCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Local network Gateway operation creates a new local
        /// network gateway.
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to Create Local Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The Create Local Network Gateway operation response.
        /// </returns>
        Task<LocalNetworkGatewayCreateResponse> CreateLocalNetworkGatewayAsync(LocalNetworkGatewayCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Virtual network Gateway operation creates a new network
        /// gateway.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Create Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> CreateVirtualNetworkGatewayAsync(string networkName, VirtualNetworkGatewayCreateParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Virtual Network Gateway operation deletes a network
        /// gateway for the specified virtual network in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154129.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> DeleteAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Virtual network Gateway Connection operation deletes a
        /// network gateway connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> DeleteGatewayConnectionAsync(string gatewayId, string connectedentityId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Local Network Gateway operation deletes a local network
        /// gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The local network gateway id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteLocalNetworkGatewayAsync(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Virtual Network Gateway operation deletes a network
        /// gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> DeleteVirtualNetworkGatewayAsync(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Failover Virtual Network Gateway operation causes a network
        /// gateway failover for the specified virtual network in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154118.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network in Azure.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> FailoverAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Generate VPN Client Package operation creates a VPN client
        /// package for the specified virtual network and gateway in Azure.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Generate VPN Client Package operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> GenerateVpnClientPackageAsync(string networkName, GatewayGenerateVpnClientPackageParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway operation gets information about
        /// the network gateway for the specified virtual network in Azure.
        /// (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154109.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayGetResponse> GetAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Device Configuration Script operation returns a script that
        /// you can use to configure local VPN devices to connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154115.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// The parameters for the Get Device Configuration Script operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The configuration script returned from the get device configuration
        /// script operation.
        /// </returns>
        Task<GatewayGetDeviceConfigurationScriptResponse> GetDeviceConfigurationScriptAsync(string networkName, GatewayGetDeviceConfigurationScriptParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Diagnostics operation gets information about the current
        /// gateway diagnostics session for the specified virtual network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The status of a gateway diagnostics operation.
        /// </returns>
        Task<GatewayDiagnosticsStatus> GetDiagnosticsAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Diagnostics V2 operation gets information about the current
        /// virtual network gateway diagnostics session
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The status of a gateway diagnostics operation.
        /// </returns>
        Task<GatewayDiagnosticsStatus> GetDiagnosticsV2Async(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway Connection operation gets
        /// information about the virtual network gateway connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The virtual network gateway connected entity Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayConnectionGetResponse> GetGatewayConnectionAsync(string gatewayId, string connectedentityId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get IPsec Parameters operation gets the IPsec parameters that
        /// have been set for the connection between the provided virtual
        /// network gateway and the provided local network site.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response that will be returned from a GetIPsecParameters
        /// request. This contains the IPsec parameters for the specified
        /// connection.
        /// </returns>
        Task<GatewayGetIPsecParametersResponse> GetIPsecParametersAsync(string networkName, string localNetworkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get IPsec Parameters V2 operation gets the IPsec parameters
        /// that have been set for the virtual network gateway  connection
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response that will be returned from a GetIPsecParameters
        /// request. This contains the IPsec parameters for the specified
        /// connection.
        /// </returns>
        Task<GatewayGetIPsecParametersResponse> GetIPsecParametersV2Async(string gatewayId, string connectedentityId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Local Network Gateway operation gets information about the
        /// local network gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The local network gateway id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<LocalNetworkGatewayGetResponse> GetLocalNetworkGatewayAsync(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway Operation Status gets information
        /// on the status of network gateway operations in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154112.aspx
        /// for more information)
        /// </summary>
        /// <param name='operationId'>
        /// The ID of the network operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> GetOperationStatusAsync(string operationId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway Shared Key operation gets the
        /// shared key on the virtual network gateway for the specified
        /// virtual network connection to the specified local network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154122.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to the get shared key request.
        /// </returns>
        Task<GatewayGetSharedKeyResponse> GetSharedKeyAsync(string networkName, string localNetworkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway Shared Key V2 operation gets the
        /// shared key used between the gateway and customer vpn.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to the get shared key request.
        /// </returns>
        Task<GatewayGetSharedKeyResponse> GetSharedKeyV2Async(string gatewayId, string connectedentityId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Virtual Network Gateway operation gets information about
        /// the virtual network gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway id.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<VirtualNetworkGatewayGetResponse> GetVirtualNetworkGatewayAsync(string gatewayId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Connections operation returns a list of the local network
        /// connections that can be accessed through the gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154120.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a ListConnections request to a Virtual Network
        /// Gateway.
        /// </returns>
        Task<GatewayListConnectionsResponse> ListConnectionsAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Connections operation Lists all GatewayConnections.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a ListGatewayConnections request to a Virtual
        /// Network Gateway.
        /// </returns>
        Task<GatewayListGatewayConnectionsResponse> ListGatewayConnectionsAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Local network gateways operation returns a list of the
        /// local network gateways.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a ListLocalNetworkGateways request.
        /// </returns>
        Task<ListLocalNetworkGatewaysResponse> ListLocalNetworkGatewaysAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Virtual Network Gateway Supported Devices operation lists
        /// the supported, on-premise network devices that can connect to the
        /// gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154102.aspx
        /// for more information)
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to the list supported devices request.
        /// </returns>
        Task<GatewayListSupportedDevicesResponse> ListSupportedDevicesAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Virtual network gateways operation returns a list of the
        /// virtual network gateways.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a ListVirtualNetworkGateways request.
        /// </returns>
        Task<ListVirtualNetworkGatewaysResponse> ListVirtualNetworkGatewaysAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The Remove Virtual Network Gateway Shared Key operation sets the
        /// default sites on the virtual network gateway for the specified
        /// virtual network.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> RemoveDefaultSitesAsync(string networkName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual network Gateway operation resets an
        /// existing gateway.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Reset Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResetAsync(string networkName, ResetGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Reset Virtual Network Gateway Shared Key operation resets the
        /// shared key on the virtual network gateway for the specified
        /// virtual network connection to the specified local network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Reset Shared Key
        /// request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResetSharedKeyAsync(string networkName, string localNetworkName, GatewayResetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Reset Virtual Network Gateway Shared Key V2 operation resets
        /// the shared key used between the gateway and customer vpn.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Reset
        /// Shared Key request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResetSharedKeyV2Async(string gatewayId, string connectedentityId, GatewayResetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Reset Virtual network Gateway operation resets an
        /// existing gateway.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Reset Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResetVirtualNetworkGatewayAsync(string gatewayId, ResetGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Resize Virtual network Gateway operation resizes an
        /// existing gateway to a different GatewaySKU.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Resize Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResizeAsync(string networkName, ResizeGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Resize Virtual network Gateway operation resizes an
        /// existing gateway to a different GatewaySKU.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Resize Virtual Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> ResizeVirtualNetworkGatewayAsync(string gatewayId, ResizeGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Set Virtual Network Gateway Shared Key operation sets the
        /// default sites on the virtual network gateway for the specified
        /// virtual network.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set
        /// Default Sites request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> SetDefaultSitesAsync(string networkName, GatewaySetDefaultSiteListParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway IPsec Parameters operation
        /// sets the IPsec parameters on the virtual network gateway for the
        /// specified connection to the specified local network in Azure.
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set IPsec
        /// Parameters request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> SetIPsecParametersAsync(string networkName, string localNetworkName, GatewaySetIPsecParametersParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Virtual Network Gateway IPsec Parameters V2 operation
        /// sets the IPsec parameters on the virtual network gateway
        /// connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Virtual Network Gateway Set IPsec
        /// Parameters V2 request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> SetIPsecParametersV2Async(string gatewayId, string connectedentityId, GatewaySetIPsecParametersParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Set Virtual Network Gateway Shared Key operation sets the
        /// shared key on the virtual network gateway for the specified
        /// virtual network connection to the specified local network in
        /// Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='localNetworkName'>
        /// The name of the local network.
        /// </param>
        /// <param name='parameters'>
        /// The parameters to the Virtual Network Gateway Set Shared Key
        /// request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> SetSharedKeyAsync(string networkName, string localNetworkName, GatewaySetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Set Virtual Network Gateway Shared Key V2 operation sets the
        /// shared key used between the gateway and customer vpn for the
        /// specified site.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to Virtual Network Gateway Set Shared Key V2
        /// request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> SetSharedKeyV2Async(string gatewayId, string connectedentityId, GatewaySetSharedKeyParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Start Diagnostics operation starts a diagnostics session for
        /// the specified virtual network gateway in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Start Diagnostics operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> StartDiagnosticsAsync(string networkName, StartGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Start Diagnostics V2 operation starts a diagnostics session for
        /// the specified virtual network gateway.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Start Diagnostics V2 operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> StartDiagnosticsV2Async(string gatewayId, StartGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Stop Diagnostics operation begins an asynchronous operation to
        /// stopa diagnostics session for the specified virtual network
        /// gateway in Azure.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154119.aspx
        /// for more information)
        /// </summary>
        /// <param name='networkName'>
        /// The name of the virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to Stop Diagnostics operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> StopDiagnosticsAsync(string networkName, StopGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Stop Diagnostics V2 operation begins an asynchronous operation
        /// to stopa diagnostics session for the specified virtual network
        /// gateway.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to Stop Diagnostics V2 operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> StopDiagnosticsV2Async(string gatewayId, StopGatewayPublicDiagnosticsParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// Operation to update existing gateway connection.
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network gateway Id.
        /// </param>
        /// <param name='connectedentityId'>
        /// The connected entity Id.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Update gateway conneciton
        /// operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is in progress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself. If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request. If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<GatewayGetOperationStatusResponse> UpdateGatewayConnectionAsync(string gatewayId, string connectedentityId, UpdateGatewayConnectionParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update Local Network Gateway operation updates a local network
        /// gateway
        /// </summary>
        /// <param name='gatewayId'>
        /// The virtual network for this gateway.
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to update the Local Network Gateway operation.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> UpdateLocalNetworkGatewayAsync(string gatewayId, UpdateLocalNetworkGatewayParameters parameters, CancellationToken cancellationToken);
    }
}
