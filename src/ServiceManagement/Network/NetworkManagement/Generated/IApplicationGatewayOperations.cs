// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.WindowsAzure.Management.Network.Models;

namespace Microsoft.WindowsAzure.Management.Network
{
    /// <summary>
    /// The Application Gateway Management API includes operations for managing
    /// application gateways in your subscription.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154113.aspx for
    /// more information)
    /// </summary>
    public partial interface IApplicationGatewayOperations
    {
        /// <summary>
        /// The Add certificate operation adds the ssl certificate to the
        /// application gateway  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='certificateName'>
        /// Certificate name
        /// </param>
        /// <param name='certificate'>
        /// The application gateway ssl certificate
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> AddCertificateAsync(string gatewayName, string certificateName, ApplicationGatewayCertificate certificate, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Add certificate operation adds the ssl certificate to the
        /// application gateway  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='certificateName'>
        /// Certificate name
        /// </param>
        /// <param name='certificate'>
        /// The application gateway ssl certificate
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginAddCertificateAsync(string gatewayName, string certificateName, ApplicationGatewayCertificate certificate, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Create Application Gateway operation  creates Application
        /// Gateway with the specified  parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin CreateApplication Gateway request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginCreateApplicationGatewayAsync(CreateApplicationGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Delete Application Gateway operation  deletes Application
        /// Gateway with the specified  parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginDeleteApplicationGatewayAsync(string gatewayName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Delete Application Gateway certificate.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='certificateName'>
        /// The name of the certificate.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginDeleteApplicationGatewayCertificateAsync(string gatewayName, string certificateName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Execute Application Gateway Operation executes specified
        /// operation on Application Gateway .  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Name of the gateway
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to the Begin Execute Operation request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginExecuteOperationAsync(string gatewayName, ApplicationGatewayOperation parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Set Application Gateway config operation  sets the
        /// specified config on the application gateway  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='config'>
        /// The Begin Set Application Gateway Config operation  sets the
        /// specified config on the application gateway
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginSetConfigAsync(string gatewayName, ApplicationGatewaySetConfiguration config, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Begin Update Application Gateway operation  updates Application
        /// Gateway with the specified  parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='updateParameters'>
        /// Parameters supplied to the Begin UpdateApplication Gateway request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<GatewayOperationResponse> BeginUpdateApplicationGatewayAsync(string gatewayName, UpdateApplicationGatewayParameters updateParameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Create Application Gateway operation  creates Application
        /// Gateway with the specified parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='parameters'>
        /// Parameters supplied to CreateApplication Gateway request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> CreateAsync(CreateApplicationGatewayParameters parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Application Gateway operation  deletes Application
        /// Gateway with the specified  parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> DeleteAsync(string gatewayName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Delete Application Gateway certificate operation.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='certificateName'>
        /// The name of the certificate.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> DeleteCertificateAsync(string gatewayName, string certificateName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Execute Application Gateway Operation executes specofoed
        /// operation in the Application Gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Name of the gateway
        /// </param>
        /// <param name='parameters'>
        /// Parameters supplied to Execute Operation request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> ExecuteOperationAsync(string gatewayName, ApplicationGatewayOperation parameters, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Application Gateway operation retrieves the application
        /// gateway provisioned for the given subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157196.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains details of the application gateway.
        /// </returns>
        Task<ApplicationGatewayGetResponse> GetAsync(string gatewayName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Application Gateway certificate operation retrieves the ssl
        /// certificate provisioned for the given gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157196.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The name of the gateway.
        /// </param>
        /// <param name='certificateName'>
        /// The name of the certificate.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// Response of GetApplicationGatewayCertificate request.
        /// </returns>
        Task<ApplicationGatewayGetCertificate> GetCertificateAsync(string gatewayName, string certificateName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Application Gateway Configuration operation retrieves the
        /// configuration of the gateway.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157196.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// The id  of the gateway.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a GetApplicationGatewayConfiguation  request.
        /// </returns>
        Task<ApplicationGatewayGetConfiguration> GetConfigAsync(string gatewayName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Get Operation Status operation returns the status of the
        /// specified operation. After calling an asynchronous operation, you
        /// can call Get Operation Status to determine whether the operation
        /// has succeeded, failed, or is still in progress.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/ee460783.aspx
        /// for more information)
        /// </summary>
        /// <param name='requestId'>
        /// The request ID for the request you wish to track. The request ID is
        /// returned in the x-ms-request-id response header for every request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> GetOperationStatusAsync(string requestId, CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Application Gateway operation retrieves all application
        /// gateays for the given subscription.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157196.aspx
        /// for more information)
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response of ListApplicationGateways request.
        /// </returns>
        Task<ApplicationGatewayListResponse> ListAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// The List Application Gateway certificates.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj157196.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response to a ListApplicationGatewayCertificate request.
        /// </returns>
        Task<ApplicationGatewayListCertificate> ListCertificateAsync(string gatewayName, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Set Application Gateway Config operation  sets the specified
        /// config on the application gateway  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='config'>
        /// Parameters supplied to Set Application Gateway config request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> SetConfigAsync(string gatewayName, ApplicationGatewaySetConfiguration config, CancellationToken cancellationToken);
        
        /// <summary>
        /// The Update Application Gateway operation  updates Application
        /// Gateway with the specified  parameters.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/jj154114.aspx
        /// for more information)
        /// </summary>
        /// <param name='gatewayName'>
        /// Gateway name
        /// </param>
        /// <param name='updateParameters'>
        /// Parameters supplied to UpdateApplication Gateway request.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The response body contains the status of the specified asynchronous
        /// operation, indicating whether it has succeeded, is inprogress, or
        /// has failed. Note that this status is distinct from the HTTP status
        /// code returned for the Get Operation Status operation itself.  If
        /// the asynchronous operation succeeded, the response body includes
        /// the HTTP status code for the successful request.  If the
        /// asynchronous operation failed, the response body includes the HTTP
        /// status code for the failed request, and also includes error
        /// information regarding the failure.
        /// </returns>
        Task<ApplicationGatewayOperationResponse> UpdateAsync(string gatewayName, UpdateApplicationGatewayParameters updateParameters, CancellationToken cancellationToken);
    }
}
