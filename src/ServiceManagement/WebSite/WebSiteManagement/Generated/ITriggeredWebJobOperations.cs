// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.WebSitesExtensions.Models;

namespace Microsoft.WindowsAzure.WebSitesExtensions
{
    /// <summary>
    /// Operations for managing Triggered WebJobs.
    /// </summary>
    public partial interface ITriggeredWebJobOperations
    {
        /// <summary>
        /// Delete a triggered WebJob.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> DeleteAsync(string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get a triggered web job.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The get triggered WebJob Operation Response.
        /// </returns>
        Task<TriggeredWebJobGetResponse> GetAsync(string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get a web job run.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='jobRunId'>
        /// The triggered WebJob run identifier.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The get triggered WebJob Run operation response.
        /// </returns>
        Task<TriggeredWebJobGetRunResponse> GetRunAsync(string jobName, string jobRunId, CancellationToken cancellationToken);
        
        /// <summary>
        /// Get the settings of a triggered WebJob.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The triggered WebJob settings operation response.
        /// </returns>
        Task<TriggeredWebJobSettingsResponse> GetSettingsAsync(string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// List the triggered WebJobs.
        /// </summary>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The list of triggered WebJobs operation response.
        /// </returns>
        Task<TriggeredWebJobListResponse> ListAsync(CancellationToken cancellationToken);
        
        /// <summary>
        /// List the triggered WebJob runs.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// The triggered WebJob run list operation response.
        /// </returns>
        Task<TriggeredWebJobRunListResponse> ListRunsAsync(string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Run a triggered WebJob.
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> RunAsync(string jobName, CancellationToken cancellationToken);
        
        /// <summary>
        /// Set the settings of a triggered WebJob (will replace the current
        /// settings of the WebJob).
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='settings'>
        /// The triggered WebJob settings.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> SetSettingsAsync(string jobName, TriggeredWebJobSettingsUpdateParameters settings, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or replace a triggered WebJob with a script file (.exe,
        /// .bat, .php, .js...).
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='fileName'>
        /// The file name.
        /// </param>
        /// <param name='jobContent'>
        /// The file content.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> UploadFileAsync(string jobName, string fileName, Stream jobContent, CancellationToken cancellationToken);
        
        /// <summary>
        /// Create or replace a triggered WebJob with a zip file (containing
        /// the WebJob binaries).
        /// </summary>
        /// <param name='jobName'>
        /// The triggered WebJob name.
        /// </param>
        /// <param name='fileName'>
        /// The zip file name.
        /// </param>
        /// <param name='jobContent'>
        /// The zip file content.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        Task<AzureOperationResponse> UploadZipAsync(string jobName, string fileName, Stream jobContent, CancellationToken cancellationToken);
    }
}
