// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.WebSites;
using Microsoft.WindowsAzure.Management.WebSites.Models;

namespace Microsoft.WindowsAzure.Management.WebSites
{
    /// <summary>
    /// The Web Sites Management API provides a RESTful set of web services
    /// that interact with the Windows Azure Web Sites service to manage your
    /// web sites. The API has entities that capture the relationship between
    /// an end user and Windows Azure Web Sites service.  (see
    /// http://msdn.microsoft.com/en-us/library/windowsazure/dn166981.aspx for
    /// more information)
    /// </summary>
    public static partial class WebHostingPlanOperationsExtensions
    {
        /// <summary>
        /// Creates a new Web Hosting Plan.  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='parameters'>
        /// Required. Web Hosting Plan Parameters.
        /// </param>
        /// <returns>
        /// The Create Web Web Hosting Plan operation response.
        /// </returns>
        public static WebHostingPlanCreateResponse Create(this IWebHostingPlanOperations operations, string webSpaceName, WebHostingPlanCreateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).CreateAsync(webSpaceName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Creates a new Web Hosting Plan.  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='parameters'>
        /// Required. Web Hosting Plan Parameters.
        /// </param>
        /// <returns>
        /// The Create Web Web Hosting Plan operation response.
        /// </returns>
        public static Task<WebHostingPlanCreateResponse> CreateAsync(this IWebHostingPlanOperations operations, string webSpaceName, WebHostingPlanCreateParameters parameters)
        {
            return operations.CreateAsync(webSpaceName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// Deletes a Web Hosting Plan  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static AzureOperationResponse Delete(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).DeleteAsync(webSpaceName, webHostingPlanName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Deletes a Web Hosting Plan  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <returns>
        /// A standard service response including an HTTP status code and
        /// request ID.
        /// </returns>
        public static Task<AzureOperationResponse> DeleteAsync(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName)
        {
            return operations.DeleteAsync(webSpaceName, webHostingPlanName, CancellationToken.None);
        }
        
        /// <summary>
        /// Gets details of an existing Web Hosting Plan  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <returns>
        /// The Get Web Hosting Plan operation response.
        /// </returns>
        public static WebHostingPlanGetResponse Get(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).GetAsync(webSpaceName, webHostingPlanName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Gets details of an existing Web Hosting Plan  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <returns>
        /// The Get Web Hosting Plan operation response.
        /// </returns>
        public static Task<WebHostingPlanGetResponse> GetAsync(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName)
        {
            return operations.GetAsync(webSpaceName, webHostingPlanName, CancellationToken.None);
        }
        
        /// <summary>
        /// You can retrieve historical usage metrics for a site by issuing an
        /// HTTP GET request.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn166964.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Get Historical Usage Metrics
        /// Web hosting plan operation.
        /// </param>
        /// <returns>
        /// The Get Historical Usage Metrics Web hosting plan operation
        /// response.
        /// </returns>
        public static WebHostingPlanGetHistoricalUsageMetricsResponse GetHistoricalUsageMetrics(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName, WebHostingPlanGetHistoricalUsageMetricsParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).GetHistoricalUsageMetricsAsync(webSpaceName, webHostingPlanName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// You can retrieve historical usage metrics for a site by issuing an
        /// HTTP GET request.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn166964.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Get Historical Usage Metrics
        /// Web hosting plan operation.
        /// </param>
        /// <returns>
        /// The Get Historical Usage Metrics Web hosting plan operation
        /// response.
        /// </returns>
        public static Task<WebHostingPlanGetHistoricalUsageMetricsResponse> GetHistoricalUsageMetricsAsync(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName, WebHostingPlanGetHistoricalUsageMetricsParameters parameters)
        {
            return operations.GetHistoricalUsageMetricsAsync(webSpaceName, webHostingPlanName, parameters, CancellationToken.None);
        }
        
        /// <summary>
        /// You can list the web spaces under the current subscription by
        /// issuing a GET request.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn166961.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <returns>
        /// The List Web Hosting Plans operation response.
        /// </returns>
        public static WebHostingPlanListResponse List(this IWebHostingPlanOperations operations, string webSpaceName)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).ListAsync(webSpaceName);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// You can list the web spaces under the current subscription by
        /// issuing a GET request.  (see
        /// http://msdn.microsoft.com/en-us/library/windowsazure/dn166961.aspx
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <returns>
        /// The List Web Hosting Plans operation response.
        /// </returns>
        public static Task<WebHostingPlanListResponse> ListAsync(this IWebHostingPlanOperations operations, string webSpaceName)
        {
            return operations.ListAsync(webSpaceName, CancellationToken.None);
        }
        
        /// <summary>
        /// Updates an existing Web Hosting Plan.  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Web Hosting Plan
        /// operation.
        /// </param>
        /// <returns>
        /// The Create Web Hosting Plan operation response.
        /// </returns>
        public static WebHostingPlanUpdateResponse Update(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName, WebHostingPlanUpdateParameters parameters)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IWebHostingPlanOperations)s).UpdateAsync(webSpaceName, webHostingPlanName, parameters);
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <summary>
        /// Updates an existing Web Hosting Plan.  (see
        /// http://azure.microsoft.com/en-us/documentation/articles/azure-web-sites-web-hosting-plans-in-depth-overview/
        /// for more information)
        /// </summary>
        /// <param name='operations'>
        /// Reference to the
        /// Microsoft.WindowsAzure.Management.WebSites.IWebHostingPlanOperations.
        /// </param>
        /// <param name='webSpaceName'>
        /// Required. The name of the web space.
        /// </param>
        /// <param name='webHostingPlanName'>
        /// Required. The name of the web hosting plan.
        /// </param>
        /// <param name='parameters'>
        /// Required. Parameters supplied to the Update Web Hosting Plan
        /// operation.
        /// </param>
        /// <returns>
        /// The Create Web Hosting Plan operation response.
        /// </returns>
        public static Task<WebHostingPlanUpdateResponse> UpdateAsync(this IWebHostingPlanOperations operations, string webSpaceName, string webHostingPlanName, WebHostingPlanUpdateParameters parameters)
        {
            return operations.UpdateAsync(webSpaceName, webHostingPlanName, parameters, CancellationToken.None);
        }
    }
}
