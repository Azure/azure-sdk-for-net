// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.WindowsAzure.Management.WebSites.Models;

namespace Microsoft.WindowsAzure.Management.WebSites.Models
{
    /// <summary>
    /// Describes a web site.
    /// </summary>
    public partial class WebSite
    {
        private bool? _adminEnabled;
        
        /// <summary>
        /// Optional. Read-only. This value is always true.
        /// </summary>
        public bool? AdminEnabled
        {
            get { return this._adminEnabled; }
            set { this._adminEnabled = value; }
        }
        
        private Microsoft.WindowsAzure.Management.WebSites.Models.WebSpaceAvailabilityState? _availabilityState;
        
        /// <summary>
        /// Optional. The state of the availability of management information
        /// for the web site. Possible values are Normal or Limited. Normal
        /// means that the web site is running correctly and that management
        /// information for the web site is available. Limited means that only
        /// partial management information for the web site is available and
        /// that detailed web site information is unavailable.
        /// </summary>
        public Microsoft.WindowsAzure.Management.WebSites.Models.WebSpaceAvailabilityState? AvailabilityState
        {
            get { return this._availabilityState; }
            set { this._availabilityState = value; }
        }
        
        private bool? _enabled;
        
        /// <summary>
        /// Optional. The current state of the web site. This is true if the
        /// site is enabled and false otherwise. Setting this value to false
        /// disables the site (takes the site offline).
        /// </summary>
        public bool? Enabled
        {
            get { return this._enabled; }
            set { this._enabled = value; }
        }
        
        private IList<string> _enabledHostNames;
        
        /// <summary>
        /// Optional. An array of strings that contains enabled host names for
        /// the web site. By default, these are [SiteName].azurewebsites.net
        /// and [SiteName].scm.azurewebsites.net.
        /// </summary>
        public IList<string> EnabledHostNames
        {
            get { return this._enabledHostNames; }
            set { this._enabledHostNames = value; }
        }
        
        private IList<string> _hostNames;
        
        /// <summary>
        /// Optional. An array of strings that contains the public host names
        /// for the web site, including custom domains. Important: When you
        /// add a custom domain in a PUT operation, be sure to include every
        /// host name that you want for the web site. To delete a custom
        /// domain name in a PUT operation, include all of the host names for
        /// the web site that you want to keep, but leave out the one that you
        /// want to delete.
        /// </summary>
        public IList<string> HostNames
        {
            get { return this._hostNames; }
            set { this._hostNames = value; }
        }
        
        private IList<WebSite.WebSiteHostNameSslState> _hostNameSslStates;
        
        /// <summary>
        /// Optional. SSL states bound to the web site.
        /// </summary>
        public IList<WebSite.WebSiteHostNameSslState> HostNameSslStates
        {
            get { return this._hostNameSslStates; }
            set { this._hostNameSslStates = value; }
        }
        
        private System.DateTime? _lastModifiedTimeUtc;
        
        /// <summary>
        /// Optional. A dateTime value that contains, in Coordinated Universal
        /// Time, the last time the web site was modified.
        /// </summary>
        public System.DateTime? LastModifiedTimeUtc
        {
            get { return this._lastModifiedTimeUtc; }
            set { this._lastModifiedTimeUtc = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. The name of the web site.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _repositorySiteName;
        
        /// <summary>
        /// Optional. The name of the web site repository.
        /// </summary>
        public string RepositorySiteName
        {
            get { return this._repositorySiteName; }
            set { this._repositorySiteName = value; }
        }
        
        private Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteRuntimeAvailabilityState? _runtimeAvailabilityState;
        
        /// <summary>
        /// Optional. The current availability state for the web site. Possible
        /// values are Normal, Degraded, or NotAvailable: Normal: the web site
        /// is running correctly; Degraded: the web site is running
        /// temporarily in a degraded mode (typically with less memory and a
        /// shared instance); Not Available: due to an unexpected issue, the
        /// site has been excluded from provisioning. This typically occurs
        /// only for free sites.
        /// </summary>
        public Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteRuntimeAvailabilityState? RuntimeAvailabilityState
        {
            get { return this._runtimeAvailabilityState; }
            set { this._runtimeAvailabilityState = value; }
        }
        
        private string _serverFarm;
        
        /// <summary>
        /// Optional. Name of a Server Farm (Web Hosting Plan) that this site
        /// belongs to.
        /// </summary>
        public string ServerFarm
        {
            get { return this._serverFarm; }
            set { this._serverFarm = value; }
        }
        
        private WebSite.WebSiteProperties _siteProperties;
        
        /// <summary>
        /// Optional. The web site properties of the web site. Contains
        /// AppSettings, Metadata, and Properties.
        /// </summary>
        public WebSite.WebSiteProperties SiteProperties
        {
            get { return this._siteProperties; }
            set { this._siteProperties = value; }
        }
        
        private SkuOptions _sku;
        
        /// <summary>
        /// Optional. The SKU of a Server Farm (Web Hosting Plan) where site
        /// belongs to.
        /// </summary>
        public SkuOptions Sku
        {
            get { return this._sku; }
            set { this._sku = value; }
        }
        
        private string _state;
        
        /// <summary>
        /// Optional. A string that describes the state of the web site.
        /// Possible values are Stopped or Running.
        /// </summary>
        public string State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private Uri _uri;
        
        /// <summary>
        /// Optional. Direct URL to the web site endpoint on Azure Web Sites,
        /// including the subscription ID, web space name, and web site name.
        /// </summary>
        public Uri Uri
        {
            get { return this._uri; }
            set { this._uri = value; }
        }
        
        private Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUsageState? _usageState;
        
        /// <summary>
        /// Optional. The usage state of the web site. Possible values are
        /// Normal or Exceeded. If any quota is exceeded, the UsageState value
        /// changes to Exceeded and the site goes offline.
        /// </summary>
        public Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteUsageState? UsageState
        {
            get { return this._usageState; }
            set { this._usageState = value; }
        }
        
        private string _webSpace;
        
        /// <summary>
        /// Optional. The name of the web space in which the web site is
        /// located. This property is read-only.
        /// </summary>
        public string WebSpace
        {
            get { return this._webSpace; }
            set { this._webSpace = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the WebSite class.
        /// </summary>
        public WebSite()
        {
            this.EnabledHostNames = new LazyList<string>();
            this.HostNames = new LazyList<string>();
            this.HostNameSslStates = new LazyList<WebSite.WebSiteHostNameSslState>();
        }
        
        /// <summary>
        /// SSL state bound to a web site.
        /// </summary>
        public partial class WebSiteHostNameSslState
        {
            private string _name;
            
            /// <summary>
            /// Optional. The URL of the web site.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteSslState? _sslState;
            
            /// <summary>
            /// Optional. The SSL state. Possible values are Disabled,
            /// SniEnabled, or IpBasedEnabled.
            /// </summary>
            public Microsoft.WindowsAzure.Management.WebSites.Models.WebSiteSslState? SslState
            {
                get { return this._sslState; }
                set { this._sslState = value; }
            }
            
            private string _thumbprint;
            
            /// <summary>
            /// Optional. A string containing the thumbprint of the SSL
            /// certificate.
            /// </summary>
            public string Thumbprint
            {
                get { return this._thumbprint; }
                set { this._thumbprint = value; }
            }
            
            private string _virtualIP;
            
            /// <summary>
            /// Optional. A string containing the IP address assigned to the
            /// hostname if the hostname uses IP SSL.
            /// </summary>
            public string VirtualIP
            {
                get { return this._virtualIP; }
                set { this._virtualIP = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the WebSiteHostNameSslState class.
            /// </summary>
            public WebSiteHostNameSslState()
            {
            }
        }
        
        public partial class WebSiteProperties
        {
            private IDictionary<string, string> _appSettings;
            
            /// <summary>
            /// Optional. A set of name/value pairs that contain application
            /// settings for a web site.
            /// </summary>
            public IDictionary<string, string> AppSettings
            {
                get { return this._appSettings; }
                set { this._appSettings = value; }
            }
            
            private IDictionary<string, string> _metadata;
            
            /// <summary>
            /// Optional. A set of name/value pairs that contain metadata
            /// information for a web site.
            /// </summary>
            public IDictionary<string, string> Metadata
            {
                get { return this._metadata; }
                set { this._metadata = value; }
            }
            
            private IDictionary<string, string> _properties;
            
            /// <summary>
            /// Optional. A set of name/value pairs that contain properties for
            /// a web site.
            /// </summary>
            public IDictionary<string, string> Properties
            {
                get { return this._properties; }
                set { this._properties = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the WebSiteProperties class.
            /// </summary>
            public WebSiteProperties()
            {
                this.AppSettings = new LazyDictionary<string, string>();
                this.Metadata = new LazyDictionary<string, string>();
                this.Properties = new LazyDictionary<string, string>();
            }
        }
    }
}
