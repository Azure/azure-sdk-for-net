// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;
using Microsoft.Azure;
using Microsoft.WindowsAzure.Management.WebSites.Models;

namespace Microsoft.WindowsAzure.Management.WebSites.Models
{
    /// <summary>
    /// The Get Usage Metrics Web Site operation response.
    /// </summary>
    public partial class WebSiteGetUsageMetricsResponse : AzureOperationResponse, IEnumerable<WebSiteGetUsageMetricsResponse.UsageMetric>
    {
        private IList<WebSiteGetUsageMetricsResponse.UsageMetric> _usageMetrics;
        
        /// <summary>
        /// Optional. The usage metrics for the web site.
        /// </summary>
        public IList<WebSiteGetUsageMetricsResponse.UsageMetric> UsageMetrics
        {
            get { return this._usageMetrics; }
            set { this._usageMetrics = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the WebSiteGetUsageMetricsResponse
        /// class.
        /// </summary>
        public WebSiteGetUsageMetricsResponse()
        {
            this.UsageMetrics = new LazyList<WebSiteGetUsageMetricsResponse.UsageMetric>();
        }
        
        /// <summary>
        /// Gets the sequence of UsageMetrics.
        /// </summary>
        public IEnumerator<WebSiteGetUsageMetricsResponse.UsageMetric> GetEnumerator()
        {
            return this.UsageMetrics.GetEnumerator();
        }
        
        /// <summary>
        /// Gets the sequence of UsageMetrics.
        /// </summary>
        System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()
        {
            return this.GetEnumerator();
        }
        
        /// <summary>
        /// A specific usage metric.
        /// </summary>
        public partial class UsageMetric
        {
            private WebSiteComputeMode _computeMode;
            
            /// <summary>
            /// Optional. The compute mode of the web site. For web sites in
            /// Standard Mode, the return value is Dedicated. For web sites in
            /// Free or Shared mode, the return value is Shared.
            /// </summary>
            public WebSiteComputeMode ComputeMode
            {
                get { return this._computeMode; }
                set { this._computeMode = value; }
            }
            
            private string _currentValue;
            
            /// <summary>
            /// Optional. The current value of the metric specified, expressed
            /// in terms of the measurement specified by the Unit element.
            /// </summary>
            public string CurrentValue
            {
                get { return this._currentValue; }
                set { this._currentValue = value; }
            }
            
            private string _displayName;
            
            /// <summary>
            /// Optional. The display name of the metric (includes spaces).
            /// </summary>
            public string DisplayName
            {
                get { return this._displayName; }
                set { this._displayName = value; }
            }
            
            private string _limit;
            
            /// <summary>
            /// Optional. The maximum point that the given metric can reach.
            /// The limit resets at the time specified by the NextResetTime
            /// element. If the limit is reached before the reset time, the
            /// site will be stopped. A value of -1 means unlimited. Resources
            /// with limits typically include CPU Time, Memory Usage, and File
            /// System Storage. Important: Site level Limits information is
            /// only meaningful for Shared and Standard web sites. For free
            /// web sites, limits are enforced at the web space level.
            /// </summary>
            public string Limit
            {
                get { return this._limit; }
                set { this._limit = value; }
            }
            
            private string _name;
            
            /// <summary>
            /// Optional. The name of the metric, without spaces. The value is
            /// usually the same as that of the ResourceName element.
            /// </summary>
            public string Name
            {
                get { return this._name; }
                set { this._name = value; }
            }
            
            private DateTime _nextResetTime;
            
            /// <summary>
            /// Optional. The time at which the metric will be reset.
            /// </summary>
            public DateTime NextResetTime
            {
                get { return this._nextResetTime; }
                set { this._nextResetTime = value; }
            }
            
            private string _resourceName;
            
            /// <summary>
            /// Optional. The name of the resource being measured.
            /// </summary>
            public string ResourceName
            {
                get { return this._resourceName; }
                set { this._resourceName = value; }
            }
            
            private WebSiteMode _siteMode;
            
            /// <summary>
            /// Optional. The scaling for the web site. Web sites in Free Mode
            /// return a value of Limited. Web sites in Shared Mode return a
            /// value of Basic. Sites in Standard Mode return null.
            /// </summary>
            public WebSiteMode SiteMode
            {
                get { return this._siteMode; }
                set { this._siteMode = value; }
            }
            
            private string _unit;
            
            /// <summary>
            /// Optional. The unit of measure for the given metric.
            /// </summary>
            public string Unit
            {
                get { return this._unit; }
                set { this._unit = value; }
            }
            
            /// <summary>
            /// Initializes a new instance of the UsageMetric class.
            /// </summary>
            public UsageMetric()
            {
            }
        }
    }
}
