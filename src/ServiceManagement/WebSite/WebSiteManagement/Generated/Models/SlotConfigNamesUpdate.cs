// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Hyak.Common;

namespace Microsoft.WindowsAzure.Management.WebSites.Models
{
    /// <summary>
    /// The parameters supplied to update slot config names.
    /// </summary>
    public partial class SlotConfigNamesUpdate
    {
        private IList<string> _appSettingNames;
        
        /// <summary>
        /// Optional. One or more string elements that list the name of the app
        /// setting that will not be moved durig site swap. For example, if
        /// slot named staging has setting EnableVerboseLogging=1, it
        /// shouldn't be moved when swapped with production slot but should
        /// take the current value from production.
        /// </summary>
        public IList<string> AppSettingNames
        {
            get { return this._appSettingNames; }
            set { this._appSettingNames = value; }
        }
        
        private IList<string> _connectionStringNames;
        
        /// <summary>
        /// Optional. One or more string elements that list the name of the
        /// connection string setting that will not be moved durig site swap.
        /// For example, if slot named staging has connection UsersDatabase
        /// that points to staging test database, it shouldn't be moved when
        /// swapped with production slot but should take the current value
        /// from production.
        /// </summary>
        public IList<string> ConnectionStringNames
        {
            get { return this._connectionStringNames; }
            set { this._connectionStringNames = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SlotConfigNamesUpdate class.
        /// </summary>
        public SlotConfigNamesUpdate()
        {
            this.AppSettingNames = new LazyList<string>();
            this.ConnectionStringNames = new LazyList<string>();
        }
    }
}
