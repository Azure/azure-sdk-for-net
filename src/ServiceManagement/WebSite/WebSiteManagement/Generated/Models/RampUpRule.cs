// 
// Copyright (c) Microsoft and contributors.  All rights reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// 
// See the License for the specific language governing permissions and
// limitations under the License.
// 

// Warning: This code was generated by a tool.
// 
// Changes to this file may cause incorrect behavior and will be lost if the
// code is regenerated.

using System;
using System.Linq;
using Microsoft.WindowsAzure.Management.WebSites.Models;

namespace Microsoft.WindowsAzure.Management.WebSites.Models
{
    /// <summary>
    /// Specifies a routing rule which can divert traffic to different site
    /// based on re-route percentage and host name.and can ramp up/down
    /// traffic based on metrics based algorithm or based on custom logic
    /// exposed as REST API
    /// </summary>
    public partial class RampUpRule : RoutingRule
    {
        private string _actionHostName;
        
        /// <summary>
        /// Optional. A string that contains host name of the other site which
        /// will take part of the re-reouted traffic
        /// </summary>
        public string ActionHostName
        {
            get { return this._actionHostName; }
            set { this._actionHostName = value; }
        }
        
        private string _changeDecisionCallbackUrl;
        
        /// <summary>
        /// Optional. A string that contains callback REST API method to
        /// determine change direction and step.This property is optional
        /// </summary>
        public string ChangeDecisionCallbackUrl
        {
            get { return this._changeDecisionCallbackUrl; }
            set { this._changeDecisionCallbackUrl = value; }
        }
        
        private int? _changeIntervalInMinutes;
        
        /// <summary>
        /// Optional. A number that contains interval in minutes to evaluate
        /// health of the re-reouted site and change reoute percentage with
        /// the step. This property is optional
        /// </summary>
        public int? ChangeIntervalInMinutes
        {
            get { return this._changeIntervalInMinutes; }
            set { this._changeIntervalInMinutes = value; }
        }
        
        private double? _changeStep;
        
        /// <summary>
        /// Optional. A number that contains reroute percentage change that
        /// would occur on each interval. This property is optional
        /// </summary>
        public double? ChangeStep
        {
            get { return this._changeStep; }
            set { this._changeStep = value; }
        }
        
        private double? _maxReroutePercentage;
        
        /// <summary>
        /// Optional. A number that contains maximum reeoute percentage.
        /// Default is 1000. This property is optional
        /// </summary>
        public double? MaxReroutePercentage
        {
            get { return this._maxReroutePercentage; }
            set { this._maxReroutePercentage = value; }
        }
        
        private double? _minReroutePercentage;
        
        /// <summary>
        /// Optional. A number that contains minimum reeoute percentage.
        /// Default is 0. This property is optional
        /// </summary>
        public double? MinReroutePercentage
        {
            get { return this._minReroutePercentage; }
            set { this._minReroutePercentage = value; }
        }
        
        private double _reroutePercentage;
        
        /// <summary>
        /// Optional. A number that contains percentage of the traffic to be
        /// re-reouted.
        /// </summary>
        public double ReroutePercentage
        {
            get { return this._reroutePercentage; }
            set { this._reroutePercentage = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RampUpRule class.
        /// </summary>
        public RampUpRule()
        {
        }
    }
}
