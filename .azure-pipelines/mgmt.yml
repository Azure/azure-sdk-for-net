# pr:
#   branches:
#     include:
#     - master
#     - search-preview
#     - BuildToolsForSdk

# variables:
#   DotNetCoreVersion: '2.2.202'
#   #DotNetCoreVersion: '2.1.503'

# jobs:
#   - job: Windows_Build
#     pool:
#       vmImage: 'VS2017-Win2016'
#     variables:
#       LoggingArgs: '/clp:ShowtimeStamp /flp:LogFile=msbuild.normal;Verbosity=normal /flp1:Summary;Verbosity=minimal;LogFile=msbuild.sum /flp2:warningsonly;logfile=msbuild.wrn /flp3:errorsonly;logfile=msbuild.err'
#       RPScopeArgs: '/p:PullRequestNumber=$(System.PullRequest.PullRequestNumber) /p:RepoHtmlUrl=$(Build.Repository.Uri) /p:RepoId=$(Build.Repository.ID)'

#     steps:
#       - task: MSBuild@1
#         inputs:
#           solution: mgmt.proj
#           msbuildArguments: /t:RunTests $(LoggingArgs) $(RPScopeArgs) /v:n
#         displayName: 'Build and Run tests'
#       - task: PublishTestResults@2
#         condition: succeededOrFailed()
#         inputs:
#           testResultsFiles: 'TestResults/**/*.trx'
#           testRunTitle: 'Windows Test Results'
#           testResultsFormat: 'VSTest'
#           mergeTestResults: true

#   - job: Ubuntu_Build
#     pool:
#       vmImage: 'ubuntu-16.04'

#     steps:
#       - task: DotNetCoreInstaller@0
#         displayName: 'Use .NET Core sdk $(DotNetCoreVersion)'
#         inputs:
#           version: '$(DotNetCoreVersion)'

#       - script: dotnet msbuild mgmt.proj /t:RunTests $(LoggingArgs) $(RPScopeArgs) /v:n
#         displayName: 'Ubuntu Build and Run tests'
#       - task: PublishTestResults@2
#         condition: succeededOrFailed()
#         inputs:
#           testResultsFiles: '**/*.trx'
#           testRunTitle: 'Ubuntu Test Results'
#           testResultsFormat: 'VSTest'
#           mergeTestResults: true

