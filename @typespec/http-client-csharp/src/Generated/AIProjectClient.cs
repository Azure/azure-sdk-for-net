// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Threading;

namespace Azure.AI.Projects
{
    /// <summary> The AIProjectClient. </summary>
    public partial class AIProjectClient
    {
        private readonly Uri _endpoint;
        /// <summary> A credential provider used to authenticate to the service. </summary>
        private readonly AuthenticationTokenProvider _tokenProvider;
        /// <summary> The OAuth2 flows supported by the service. </summary>
        private readonly Dictionary<string, object>[] _flows = new Dictionary<string, object>[] 
        {
            new Dictionary<string, object>
            {
                { GetTokenOptions.ScopesPropertyName, new string[] { "https://ai.azure.com/.default" } },
                { GetTokenOptions.AuthorizationUrlPropertyName, "https://login.microsoftonline.com/common/oauth2/v2.0/authorize" }
            }
        };
        private readonly string _apiVersion;
        private ConnectionsOperations _cachedConnectionsOperations;
        private Evaluations _cachedEvaluations;
        private DatasetsOperations _cachedDatasetsOperations;
        private IndexesOperations _cachedIndexesOperations;
        private DeploymentsOperations _cachedDeploymentsOperations;
        private RedTeams _cachedRedTeams;

        /// <summary> Initializes a new instance of AIProjectClient for mocking. </summary>
        protected AIProjectClient()
        {
        }

        /// <summary> Initializes a new instance of AIProjectClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <param name="tokenProvider"> A credential provider used to authenticate to the service. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="tokenProvider"/> is null. </exception>
        public AIProjectClient(Uri endpoint, AuthenticationTokenProvider tokenProvider) : this(endpoint, tokenProvider, new AIProjectClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AIProjectClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <param name="tokenProvider"> A credential provider used to authenticate to the service. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> or <paramref name="tokenProvider"/> is null. </exception>
        public AIProjectClient(Uri endpoint, AuthenticationTokenProvider tokenProvider, AIProjectClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            Argument.AssertNotNull(tokenProvider, nameof(tokenProvider));

            options ??= new AIProjectClientOptions();

            _endpoint = endpoint;
            _tokenProvider = tokenProvider;
            Pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), new PipelinePolicy[] { new BearerTokenPolicy(_tokenProvider, _flows) }, Array.Empty<PipelinePolicy>());
            _apiVersion = options.Version;
        }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public ClientPipeline Pipeline { get; }

        /// <summary> Initializes a new instance of ConnectionsOperations. </summary>
        public virtual ConnectionsOperations GetConnectionsOperationsClient()
        {
            return Volatile.Read(ref _cachedConnectionsOperations) ?? Interlocked.CompareExchange(ref _cachedConnectionsOperations, new ConnectionsOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedConnectionsOperations;
        }

        /// <summary> Initializes a new instance of Evaluations. </summary>
        public virtual Evaluations GetEvaluationsClient()
        {
            return Volatile.Read(ref _cachedEvaluations) ?? Interlocked.CompareExchange(ref _cachedEvaluations, new Evaluations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedEvaluations;
        }

        /// <summary> Initializes a new instance of DatasetsOperations. </summary>
        public virtual DatasetsOperations GetDatasetsOperationsClient()
        {
            return Volatile.Read(ref _cachedDatasetsOperations) ?? Interlocked.CompareExchange(ref _cachedDatasetsOperations, new DatasetsOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedDatasetsOperations;
        }

        /// <summary> Initializes a new instance of IndexesOperations. </summary>
        public virtual IndexesOperations GetIndexesOperationsClient()
        {
            return Volatile.Read(ref _cachedIndexesOperations) ?? Interlocked.CompareExchange(ref _cachedIndexesOperations, new IndexesOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedIndexesOperations;
        }

        /// <summary> Initializes a new instance of DeploymentsOperations. </summary>
        public virtual DeploymentsOperations GetDeploymentsOperationsClient()
        {
            return Volatile.Read(ref _cachedDeploymentsOperations) ?? Interlocked.CompareExchange(ref _cachedDeploymentsOperations, new DeploymentsOperations(Pipeline, _endpoint, _apiVersion), null) ?? _cachedDeploymentsOperations;
        }

        /// <summary> Initializes a new instance of RedTeams. </summary>
        public virtual RedTeams GetRedTeamsClient()
        {
            return Volatile.Read(ref _cachedRedTeams) ?? Interlocked.CompareExchange(ref _cachedRedTeams, new RedTeams(Pipeline, _endpoint, _apiVersion), null) ?? _cachedRedTeams;
        }
    }
}
