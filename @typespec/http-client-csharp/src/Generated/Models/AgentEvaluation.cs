// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Azure.AI.Projects
{
    /// <summary> Evaluation response for agent evaluation run. </summary>
    public partial class AgentEvaluation
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="AgentEvaluation"/>. </summary>
        /// <param name="id"> Identifier of the agent evaluation run. </param>
        /// <param name="status"> Status of the agent evaluation. Options: Running, Completed, Failed. </param>
        internal AgentEvaluation(string id, string status)
        {
            Id = id;
            Status = status;
            Result = new ChangeTrackingList<AgentEvaluationResult>();
        }

        /// <summary> Initializes a new instance of <see cref="AgentEvaluation"/>. </summary>
        /// <param name="id"> Identifier of the agent evaluation run. </param>
        /// <param name="status"> Status of the agent evaluation. Options: Running, Completed, Failed. </param>
        /// <param name="error"> The reason of the request failure for the long running process, if applicable. </param>
        /// <param name="result"> The agent evaluation result. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal AgentEvaluation(string id, string status, string error, IList<AgentEvaluationResult> result, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Id = id;
            Status = status;
            Error = error;
            Result = result;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Identifier of the agent evaluation run. </summary>
        public string Id { get; }

        /// <summary> Status of the agent evaluation. Options: Running, Completed, Failed. </summary>
        public string Status { get; }

        /// <summary> The reason of the request failure for the long running process, if applicable. </summary>
        public string Error { get; }

        /// <summary> The agent evaluation result. </summary>
        public IList<AgentEvaluationResult> Result { get; }
    }
}
