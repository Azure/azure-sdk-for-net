// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Security.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class JitNetworkAccessPolicyVirtualMachine
    {
        /// <summary>
        /// Initializes a new instance of the
        /// JitNetworkAccessPolicyVirtualMachine class.
        /// </summary>
        public JitNetworkAccessPolicyVirtualMachine()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// JitNetworkAccessPolicyVirtualMachine class.
        /// </summary>
        /// <param name="id">Resource ID of the virtual machine that is linked
        /// to this policy</param>
        /// <param name="ports">Port configurations for the virtual
        /// machine</param>
        /// <param name="publicIpAddress">Public IP address of the Azure
        /// Firewall that is linked to this policy, if applicable</param>
        public JitNetworkAccessPolicyVirtualMachine(string id, IList<JitNetworkAccessPortRule> ports, string publicIpAddress = default(string))
        {
            Id = id;
            Ports = ports;
            PublicIpAddress = publicIpAddress;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets resource ID of the virtual machine that is linked to
        /// this policy
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets port configurations for the virtual machine
        /// </summary>
        [JsonProperty(PropertyName = "ports")]
        public IList<JitNetworkAccessPortRule> Ports { get; set; }

        /// <summary>
        /// Gets or sets public IP address of the Azure Firewall that is linked
        /// to this policy, if applicable
        /// </summary>
        [JsonProperty(PropertyName = "publicIpAddress")]
        public string PublicIpAddress { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Ports == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Ports");
            }
            if (Ports != null)
            {
                foreach (var element in Ports)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
