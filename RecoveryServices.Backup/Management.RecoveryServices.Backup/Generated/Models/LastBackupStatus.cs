// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.RecoveryServices.Backup.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for LastBackupStatus.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(LastBackupStatusConverter))]
    public struct LastBackupStatus : System.IEquatable<LastBackupStatus>
    {
        private LastBackupStatus(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly LastBackupStatus Invalid = "Invalid";

        public static readonly LastBackupStatus Healthy = "Healthy";

        public static readonly LastBackupStatus Unhealthy = "Unhealthy";

        public static readonly LastBackupStatus IRPending = "IRPending";


        /// <summary>
        /// Underlying value of enum LastBackupStatus
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for LastBackupStatus
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type LastBackupStatus
        /// </summary>
        public bool Equals(LastBackupStatus e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to LastBackupStatus
        /// </summary>
        public static implicit operator LastBackupStatus(string value)
        {
            return new LastBackupStatus(value);
        }

        /// <summary>
        /// Implicit operator to convert LastBackupStatus to string
        /// </summary>
        public static implicit operator string(LastBackupStatus e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum LastBackupStatus
        /// </summary>
        public static bool operator == (LastBackupStatus e1, LastBackupStatus e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum LastBackupStatus
        /// </summary>
        public static bool operator != (LastBackupStatus e1, LastBackupStatus e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for LastBackupStatus
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is LastBackupStatus && Equals((LastBackupStatus)obj);
        }

        /// <summary>
        /// Returns for hashCode LastBackupStatus
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
