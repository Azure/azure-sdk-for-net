//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WindowsAzure.ManagementClient {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WindowsAzure.ManagementClient.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument {0} exceeds the maximum length of {1} characters..
        /// </summary>
        internal static string ArgStringTooLong {
            get {
                return ResourceManager.GetString("ArgStringTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All of the parameters are null. At least one parameter must have a value..
        /// </summary>
        internal static string AtLeastOneThingMustBeSet {
            get {
                return ResourceManager.GetString("AtLeastOneThingMustBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \nAdditional Information:\n\tError Code: {0}\n\tError Message: {1}.
        /// </summary>
        internal static string AzureRequestExceptionAdditionalInfo {
            get {
                return ResourceManager.GetString("AzureRequestExceptionAdditionalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request against Uri {0} returned an error: {1} ({2}).
        /// </summary>
        internal static string AzureRequestExceptionBaseMessage {
            get {
                return ResourceManager.GetString("AzureRequestExceptionBaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one of the label or description must be set..
        /// </summary>
        internal static string BothLabelAndDescriptionAreNull {
            get {
                return ResourceManager.GetString("BothLabelAndDescriptionAreNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location and AffinityGroup arguments are both empty. One must be set..
        /// </summary>
        internal static string BothLocationAndAffinityGroupAreNull {
            get {
                return ResourceManager.GetString("BothLocationAndAffinityGroupAreNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location and AffinityGroup arguments are both set, only one may be set..
        /// </summary>
        internal static string BothLocationAndAffinityGroupAreSet {
            get {
                return ResourceManager.GetString("BothLocationAndAffinityGroupAreSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Certificate must contain private key to upload.&quot;.
        /// </summary>
        internal static string CertificateNoPrivateKey {
            get {
                return ResourceManager.GetString("CertificateNoPrivateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file at path {0} was not found..
        /// </summary>
        internal static string ConfigFileNotFound {
            get {
                return ResourceManager.GetString("ConfigFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended property name {0} is invalid. It must contain only alphanumeric characters or the underscore, and must start with a letter..
        /// </summary>
        internal static string ExtendedPropertyKeyInvalid {
            get {
                return ResourceManager.GetString("ExtendedPropertyKeyInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended property name {0} is too long. It cannot be more than 64 characters..
        /// </summary>
        internal static string ExtendedPropertyKeyTooLong {
            get {
                return ResourceManager.GetString("ExtendedPropertyKeyTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended property value {0} is too long. It cannot be more than 255 characters..
        /// </summary>
        internal static string ExtendedPropertyValueTooLong {
            get {
                return ResourceManager.GetString("ExtendedPropertyValueTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Staging deployment is empty. Staging deployment must be filled to perform a Vip Swap..
        /// </summary>
        internal static string StagingIsEmptyForVipSwap {
            get {
                return ResourceManager.GetString("StagingIsEmptyForVipSwap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only..
        /// </summary>
        internal static string StorageAccountNameProblem {
            get {
                return ResourceManager.GetString("StorageAccountNameProblem", resourceCulture);
            }
        }
    }
}
