// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using MgmtTypeSpec;

namespace MgmtTypeSpec.Models
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class MgmtTypeSpecModelFactory
    {
        /// <summary> Concrete tracked resource types can be created by aliasing this type using a specific property type. </summary>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="extendedLocation"></param>
        /// <returns> A new <see cref="Models.Foo"/> instance for mocking. </returns>
        public static Foo Foo(FooProperties properties = default, MgmtTypeSpec.ExtendedLocation extendedLocation = default)
        {

            return new Foo(properties, extendedLocation, additionalBinaryDataProperties: null);
        }

        /// <summary> The FooProperties. </summary>
        /// <param name="serviceUrl"> the service url. </param>
        /// <param name="something"> something. </param>
        /// <param name="boolValue"> boolean value. </param>
        /// <param name="floatValue"> float value. </param>
        /// <param name="doubleValue"> double value. </param>
        /// <returns> A new <see cref="Models.FooProperties"/> instance for mocking. </returns>
        public static FooProperties FooProperties(Uri serviceUrl = default, string something = default, bool? boolValue = default, float? floatValue = default, double? doubleValue = default)
        {

            return new FooProperties(
                serviceUrl,
                something,
                boolValue,
                floatValue,
                doubleValue,
                additionalBinaryDataProperties: null);
        }

        /// <summary> The response of a Foo list operation. </summary>
        /// <param name="value"> The Foo items on this page. </param>
        /// <param name="nextLink"> The link to the next page of items. </param>
        /// <returns> A new <see cref="Models.FooListResult"/> instance for mocking. </returns>
        public static FooListResult FooListResult(IEnumerable<Foo> value = default, Uri nextLink = default)
        {
            value ??= new ChangeTrackingList<Foo>();

            return new FooListResult(value?.ToList(), nextLink, additionalBinaryDataProperties: null);
        }

        /// <summary> The response of a PrivateLinkResource list operation. </summary>
        /// <param name="value"> The PrivateLinkResource items on this page. </param>
        /// <param name="nextLink"> The link to the next page of items. </param>
        /// <returns> A new <see cref="Models.PrivateLinkResourceListResult"/> instance for mocking. </returns>
        public static PrivateLinkResourceListResult PrivateLinkResourceListResult(IEnumerable<PrivateLinkResource> value = default, Uri nextLink = default)
        {
            value ??= new ChangeTrackingList<PrivateLinkResource>();

            return new PrivateLinkResourceListResult(value?.ToList(), nextLink, additionalBinaryDataProperties: null);
        }

        /// <summary> Concrete proxy resource types can be created by aliasing this type using a specific property type. </summary>
        /// <param name="properties"> The resource-specific properties for this resource. </param>
        /// <param name="identity"> The managed service identities assigned to this resource. </param>
        /// <returns> A new <see cref="Models.PrivateLinkResource"/> instance for mocking. </returns>
        public static PrivateLinkResource PrivateLinkResource(PrivateLinkResourceProperties properties = default, MgmtTypeSpec.ManagedServiceIdentity identity = default)
        {

            return new PrivateLinkResource(additionalBinaryDataProperties: null, properties, identity);
        }

        /// <summary> Properties of a private link resource. </summary>
        /// <param name="groupId"> The private link resource group id. </param>
        /// <param name="requiredMembers"> The private link resource required member names. </param>
        /// <param name="requiredZoneNames"> The private link resource private link DNS zone name. </param>
        /// <returns> A new <see cref="Models.PrivateLinkResourceProperties"/> instance for mocking. </returns>
        public static PrivateLinkResourceProperties PrivateLinkResourceProperties(string groupId = default, IEnumerable<string> requiredMembers = default, IEnumerable<string> requiredZoneNames = default)
        {
            requiredMembers ??= new ChangeTrackingList<string>();
            requiredZoneNames ??= new ChangeTrackingList<string>();

            return new PrivateLinkResourceProperties(groupId, requiredMembers?.ToList(), requiredZoneNames?.ToList(), additionalBinaryDataProperties: null);
        }

        /// <summary> The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location. </summary>
        /// <returns> A new <see cref="Models.ProxyResource"/> instance for mocking. </returns>
        public static ProxyResource ProxyResource()
        {

            return new ProxyResource(additionalBinaryDataProperties: null);
        }

        /// <summary> Start SAP instance(s) request body. </summary>
        /// <param name="startVm"> The boolean value indicates whether to start the virtual machines before starting the SAP instances. </param>
        /// <returns> A new <see cref="Models.StartRequest"/> instance for mocking. </returns>
        public static StartRequest StartRequest(bool? startVm = default)
        {

            return new StartRequest(startVm, additionalBinaryDataProperties: null);
        }
    }
}
