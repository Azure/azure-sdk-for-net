// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Property.AdditionalProperties
{
    /// <summary> The model spread Record&lt;string | float32&gt;. </summary>
    public partial class SpreadRecordForUnion
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;
        private IDictionary<string, string> _additionalStringProperties;
        private IDictionary<string, float> _additionalSingleProperties;

        /// <summary> Initializes a new instance of <see cref="SpreadRecordForUnion"/>. </summary>
        /// <param name="flag"> The name property. </param>
        public SpreadRecordForUnion(bool flag)
        {
            Flag = flag;
            _additionalStringProperties = new ChangeTrackingDictionary<string, string>();
            _additionalSingleProperties = new ChangeTrackingDictionary<string, float>();
        }

        /// <summary> Initializes a new instance of <see cref="SpreadRecordForUnion"/>. </summary>
        /// <param name="flag"> The name property. </param>
        /// <param name="additionalProperties"></param>
        /// <param name="additionalSingleProperties"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal SpreadRecordForUnion(bool flag, IDictionary<string, string> additionalProperties, IDictionary<string, float> additionalSingleProperties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Flag = flag;
            _additionalStringProperties = additionalProperties;
            _additionalSingleProperties = additionalSingleProperties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> The name property. </summary>
        public bool Flag { get; set; }

        /// <summary> Gets the AdditionalProperties. </summary>
        public IDictionary<string, string> AdditionalProperties => _additionalStringProperties;

        /// <summary> Gets the AdditionalSingleProperties. </summary>
        public IDictionary<string, float> AdditionalSingleProperties => _additionalSingleProperties;
    }
}
