// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Property.AdditionalProperties
{
    /// <summary>
    /// The model extends from Record&lt;unknown&gt; with a discriminator.
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="ExtendsUnknownAdditionalPropertiesDiscriminatedDerived"/>.
    /// </summary>
    public abstract partial class ExtendsUnknownAdditionalPropertiesDiscriminated
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ExtendsUnknownAdditionalPropertiesDiscriminated"/>. </summary>
        /// <param name="name"> The name property. </param>
        /// <param name="kind"> The discriminator. </param>
        private protected ExtendsUnknownAdditionalPropertiesDiscriminated(string name, string kind)
        {
            Name = name;
            Kind = kind;
            _additionalBinaryDataProperties = new ChangeTrackingDictionary<string, BinaryData>();
        }

        /// <summary> Initializes a new instance of <see cref="ExtendsUnknownAdditionalPropertiesDiscriminated"/>. </summary>
        /// <param name="name"> The name property. </param>
        /// <param name="kind"> The discriminator. </param>
        /// <param name="additionalProperties"></param>
        internal ExtendsUnknownAdditionalPropertiesDiscriminated(string name, string kind, IDictionary<string, BinaryData> additionalProperties)
        {
            Name = name;
            Kind = kind;
            _additionalBinaryDataProperties = additionalProperties;
        }

        /// <summary> The name property. </summary>
        public string Name { get; set; }

        /// <summary> The discriminator. </summary>
        internal string Kind { get; set; }

        /// <summary> Gets the AdditionalProperties. </summary>
        public IDictionary<string, BinaryData> AdditionalProperties => _additionalBinaryDataProperties;
    }
}
