// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Type.Property.Optional
{
    public partial class PlainDate
    {
        protected PlainDate() => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response GetAll(RequestContext context) => throw null;

        public virtual Task<Response> GetAllAsync(RequestContext context) => throw null;

        public virtual Response<PlainDateProperty> GetAll(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<PlainDateProperty>> GetAllAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetDefault(RequestContext context) => throw null;

        public virtual Task<Response> GetDefaultAsync(RequestContext context) => throw null;

        public virtual Response<PlainDateProperty> GetDefault(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<PlainDateProperty>> GetDefaultAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutAll(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutAllAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutAll(PlainDateProperty body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutAllAsync(PlainDateProperty body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutDefault(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutDefaultAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutDefault(PlainDateProperty body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutDefaultAsync(PlainDateProperty body, CancellationToken cancellationToken = default) => throw null;
    }
}
