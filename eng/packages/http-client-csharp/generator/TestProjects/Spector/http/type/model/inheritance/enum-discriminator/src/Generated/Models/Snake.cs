// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Model.Inheritance.EnumDiscriminator
{
    /// <summary>
    /// Test fixed enum type for discriminator
    /// Please note this is the abstract base class. The derived classes available for instantiation are: <see cref="Cobra"/>.
    /// </summary>
    public abstract partial class Snake
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="Snake"/>. </summary>
        /// <param name="kind"> discriminator property. </param>
        /// <param name="length"> Length of the snake. </param>
        private protected Snake(SnakeKind kind, int length)
        {
            Kind = kind;
            Length = length;
        }

        /// <summary> Initializes a new instance of <see cref="Snake"/>. </summary>
        /// <param name="kind"> discriminator property. </param>
        /// <param name="length"> Length of the snake. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal Snake(SnakeKind kind, int length, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Kind = kind;
            Length = length;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> discriminator property. </summary>
        internal SnakeKind Kind { get; set; }

        /// <summary> Length of the snake. </summary>
        public int Length { get; set; }
    }
}
