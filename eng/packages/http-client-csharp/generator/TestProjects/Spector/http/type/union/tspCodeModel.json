{
 "$id": "1",
 "name": "Type.Union",
 "apiVersions": [],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "GetResponseProp",
   "crossLanguageDefinitionId": "Type.Union.get.Response.prop.anonymous",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "a",
     "value": "a",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "b",
     "value": "b",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "c",
     "value": "c",
     "valueType": {
      "$id": "9",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "10",
   "kind": "enum",
   "name": "GetResponseProp1",
   "crossLanguageDefinitionId": "Type.Union.get.Response.prop.anonymous",
   "valueType": {
    "$id": "11",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "b",
     "value": "b",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "decorators": []
    },
    {
     "$id": "14",
     "kind": "enumvalue",
     "name": "c",
     "value": "c",
     "valueType": {
      "$id": "15",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "10"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "16",
   "kind": "enum",
   "name": "StringExtensibleNamedUnion",
   "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamedUnion",
   "valueType": {
    "$id": "17",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "18",
     "kind": "enumvalue",
     "name": "OptionB",
     "value": "b",
     "valueType": {
      "$id": "19",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "16"
     },
     "decorators": []
    },
    {
     "$id": "20",
     "kind": "enumvalue",
     "name": "c",
     "value": "c",
     "valueType": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "16"
     },
     "decorators": []
    }
   ],
   "namespace": "Type.Union",
   "isFixed": false,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "22",
   "kind": "enum",
   "name": "GetResponseProp2",
   "crossLanguageDefinitionId": "Type.Union.get.Response.prop.anonymous",
   "valueType": {
    "$id": "23",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "values": [
    {
     "$id": "24",
     "kind": "enumvalue",
     "name": "1",
     "value": 1,
     "valueType": {
      "$id": "25",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "22"
     },
     "decorators": []
    },
    {
     "$id": "26",
     "kind": "enumvalue",
     "name": "2",
     "value": 2,
     "valueType": {
      "$id": "27",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "22"
     },
     "decorators": []
    },
    {
     "$id": "28",
     "kind": "enumvalue",
     "name": "3",
     "value": 3,
     "valueType": {
      "$id": "29",
      "kind": "int32",
      "name": "int32",
      "crossLanguageDefinitionId": "TypeSpec.int32",
      "decorators": []
     },
     "enumType": {
      "$ref": "22"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "30",
   "kind": "enum",
   "name": "GetResponseProp3",
   "crossLanguageDefinitionId": "Type.Union.get.Response.prop.anonymous",
   "valueType": {
    "$id": "31",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "values": [
    {
     "$id": "32",
     "kind": "enumvalue",
     "name": "1.1",
     "value": 1.1,
     "valueType": {
      "$id": "33",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "30"
     },
     "decorators": []
    },
    {
     "$id": "34",
     "kind": "enumvalue",
     "name": "2.2",
     "value": 2.2,
     "valueType": {
      "$id": "35",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "30"
     },
     "decorators": []
    },
    {
     "$id": "36",
     "kind": "enumvalue",
     "name": "3.3",
     "value": 3.3,
     "valueType": {
      "$id": "37",
      "kind": "float32",
      "name": "float32",
      "crossLanguageDefinitionId": "TypeSpec.float32",
      "decorators": []
     },
     "enumType": {
      "$ref": "30"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "38",
   "kind": "enum",
   "name": "EnumsOnlyCasesLr",
   "crossLanguageDefinitionId": "Type.Union.EnumsOnlyCases.lr.anonymous",
   "valueType": {
    "$id": "39",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "40",
     "kind": "enumvalue",
     "name": "left",
     "value": "left",
     "valueType": {
      "$id": "41",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "42",
     "kind": "enumvalue",
     "name": "right",
     "value": "right",
     "valueType": {
      "$id": "43",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "44",
     "kind": "enumvalue",
     "name": "up",
     "value": "up",
     "valueType": {
      "$id": "45",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    },
    {
     "$id": "46",
     "kind": "enumvalue",
     "name": "down",
     "value": "down",
     "valueType": {
      "$id": "47",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "38"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  },
  {
   "$id": "48",
   "kind": "enum",
   "name": "EnumsOnlyCasesUd",
   "crossLanguageDefinitionId": "Type.Union.EnumsOnlyCases.ud.anonymous",
   "valueType": {
    "$id": "49",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "50",
     "kind": "enumvalue",
     "name": "up",
     "value": "up",
     "valueType": {
      "$id": "51",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "decorators": []
    },
    {
     "$id": "52",
     "kind": "enumvalue",
     "name": "down",
     "value": "down",
     "valueType": {
      "$id": "53",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "48"
     },
     "decorators": []
    }
   ],
   "namespace": "",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input,Output,Json",
   "decorators": []
  }
 ],
 "constants": [
  {
   "$id": "54",
   "kind": "constant",
   "name": "MixedLiteralsCasesStringLiteral1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "55",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "a",
   "decorators": []
  },
  {
   "$id": "56",
   "kind": "constant",
   "name": "MixedLiteralsCasesStringLiteral2",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "57",
    "kind": "int32",
    "name": "int32",
    "crossLanguageDefinitionId": "TypeSpec.int32",
    "decorators": []
   },
   "value": 2,
   "decorators": []
  },
  {
   "$id": "58",
   "kind": "constant",
   "name": "MixedLiteralsCasesStringLiteral3",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "59",
    "kind": "float32",
    "name": "float32",
    "crossLanguageDefinitionId": "TypeSpec.float32",
    "decorators": []
   },
   "value": 3.3,
   "decorators": []
  },
  {
   "$id": "60",
   "kind": "constant",
   "name": "MixedLiteralsCasesStringLiteral4",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "61",
    "kind": "boolean",
    "name": "boolean",
    "crossLanguageDefinitionId": "TypeSpec.boolean",
    "decorators": []
   },
   "value": true,
   "decorators": []
  },
  {
   "$id": "62",
   "kind": "constant",
   "name": "MixedLiteralsCasesStringLiteral11",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "63",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "a",
   "decorators": []
  },
  {
   "$id": "64",
   "kind": "constant",
   "name": "getContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "65",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "66",
   "kind": "constant",
   "name": "sendContentType",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "67",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "68",
   "kind": "constant",
   "name": "getContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "69",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "70",
   "kind": "constant",
   "name": "sendContentType1",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "71",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "72",
   "kind": "constant",
   "name": "getContentType2",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "73",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "74",
   "kind": "constant",
   "name": "sendContentType2",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "75",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "76",
   "kind": "constant",
   "name": "getContentType3",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "77",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "78",
   "kind": "constant",
   "name": "sendContentType3",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "79",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "80",
   "kind": "constant",
   "name": "getContentType4",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "81",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "82",
   "kind": "constant",
   "name": "sendContentType4",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "83",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "84",
   "kind": "constant",
   "name": "getContentType5",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "85",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "86",
   "kind": "constant",
   "name": "sendContentType5",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "87",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "88",
   "kind": "constant",
   "name": "getContentType6",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "89",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "90",
   "kind": "constant",
   "name": "sendContentType6",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "91",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "92",
   "kind": "constant",
   "name": "getContentType7",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "93",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "94",
   "kind": "constant",
   "name": "sendContentType7",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "95",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "96",
   "kind": "constant",
   "name": "getContentType8",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "97",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "98",
   "kind": "constant",
   "name": "sendContentType8",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "99",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "100",
   "kind": "constant",
   "name": "getContentType9",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "101",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  },
  {
   "$id": "102",
   "kind": "constant",
   "name": "sendContentType9",
   "namespace": "",
   "usage": "None",
   "valueType": {
    "$id": "103",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "value": "application/json",
   "decorators": []
  }
 ],
 "models": [
  {
   "$id": "104",
   "kind": "model",
   "name": "GetResponse",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "105",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "2"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "106",
      "json": {
       "$id": "107",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "108",
   "kind": "model",
   "name": "SendRequest",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "109",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "2"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringsOnly.send.prop",
     "serializationOptions": {
      "$id": "110",
      "json": {
       "$id": "111",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "112",
   "kind": "model",
   "name": "GetResponse1",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "113",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "10"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "114",
      "json": {
       "$id": "115",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "116",
   "kind": "model",
   "name": "SendRequest1",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "117",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "10"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringExtensible.send.prop",
     "serializationOptions": {
      "$id": "118",
      "json": {
       "$id": "119",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "120",
   "kind": "model",
   "name": "GetResponse2",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "121",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "16"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "122",
      "json": {
       "$id": "123",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "124",
   "kind": "model",
   "name": "SendRequest2",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "125",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "16"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed.send.prop",
     "serializationOptions": {
      "$id": "126",
      "json": {
       "$id": "127",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "128",
   "kind": "model",
   "name": "GetResponse3",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "129",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "22"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "130",
      "json": {
       "$id": "131",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "132",
   "kind": "model",
   "name": "SendRequest3",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "133",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "22"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.IntsOnly.send.prop",
     "serializationOptions": {
      "$id": "134",
      "json": {
       "$id": "135",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "136",
   "kind": "model",
   "name": "GetResponse4",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "137",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "30"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "138",
      "json": {
       "$id": "139",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "140",
   "kind": "model",
   "name": "SendRequest4",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "141",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "30"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.FloatsOnly.send.prop",
     "serializationOptions": {
      "$id": "142",
      "json": {
       "$id": "143",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "144",
   "kind": "model",
   "name": "GetResponse5",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "145",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$id": "146",
      "kind": "union",
      "name": "GetResponseProp4",
      "variantTypes": [
       {
        "$id": "147",
        "kind": "model",
        "name": "Cat",
        "namespace": "Type.Union",
        "crossLanguageDefinitionId": "Type.Union.Cat",
        "usage": "Input,Output,Json",
        "decorators": [],
        "properties": [
         {
          "$id": "148",
          "kind": "property",
          "name": "name",
          "serializedName": "name",
          "type": {
           "$id": "149",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Type.Union.Cat.name",
          "serializationOptions": {
           "$id": "150",
           "json": {
            "$id": "151",
            "name": "name"
           }
          }
         }
        ]
       },
       {
        "$id": "152",
        "kind": "model",
        "name": "Dog",
        "namespace": "Type.Union",
        "crossLanguageDefinitionId": "Type.Union.Dog",
        "usage": "Input,Output,Json",
        "decorators": [],
        "properties": [
         {
          "$id": "153",
          "kind": "property",
          "name": "bark",
          "serializedName": "bark",
          "type": {
           "$id": "154",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          "optional": false,
          "readOnly": false,
          "discriminator": false,
          "flatten": false,
          "decorators": [],
          "crossLanguageDefinitionId": "Type.Union.Dog.bark",
          "serializationOptions": {
           "$id": "155",
           "json": {
            "$id": "156",
            "name": "bark"
           }
          }
         }
        ]
       }
      ],
      "namespace": "",
      "decorators": []
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "157",
      "json": {
       "$id": "158",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$ref": "147"
  },
  {
   "$ref": "152"
  },
  {
   "$id": "159",
   "kind": "model",
   "name": "SendRequest5",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "160",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "146"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.ModelsOnly.send.prop",
     "serializationOptions": {
      "$id": "161",
      "json": {
       "$id": "162",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "163",
   "kind": "model",
   "name": "GetResponse6",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "164",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$id": "165",
      "kind": "model",
      "name": "EnumsOnlyCases",
      "namespace": "Type.Union",
      "crossLanguageDefinitionId": "Type.Union.EnumsOnlyCases",
      "usage": "Input,Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "166",
        "kind": "property",
        "name": "lr",
        "serializedName": "lr",
        "doc": "This should be receive/send the left variant",
        "type": {
         "$ref": "38"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.EnumsOnlyCases.lr",
        "serializationOptions": {
         "$id": "167",
         "json": {
          "$id": "168",
          "name": "lr"
         }
        }
       },
       {
        "$id": "169",
        "kind": "property",
        "name": "ud",
        "serializedName": "ud",
        "doc": "This should be receive/send the up variant",
        "type": {
         "$ref": "48"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.EnumsOnlyCases.ud",
        "serializationOptions": {
         "$id": "170",
         "json": {
          "$id": "171",
          "name": "ud"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "172",
      "json": {
       "$id": "173",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$ref": "165"
  },
  {
   "$id": "174",
   "kind": "model",
   "name": "SendRequest6",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "175",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "165"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.EnumsOnly.send.prop",
     "serializationOptions": {
      "$id": "176",
      "json": {
       "$id": "177",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "178",
   "kind": "model",
   "name": "GetResponse7",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "179",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$id": "180",
      "kind": "model",
      "name": "StringAndArrayCases",
      "namespace": "Type.Union",
      "crossLanguageDefinitionId": "Type.Union.StringAndArrayCases",
      "usage": "Input,Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "181",
        "kind": "property",
        "name": "string",
        "serializedName": "string",
        "doc": "This should be receive/send the string variant",
        "type": {
         "$id": "182",
         "kind": "union",
         "name": "StringAndArrayCasesString",
         "variantTypes": [
          {
           "$id": "183",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          {
           "$id": "184",
           "kind": "array",
           "name": "Array",
           "valueType": {
            "$id": "185",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "crossLanguageDefinitionId": "TypeSpec.Array",
           "decorators": []
          }
         ],
         "namespace": "",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.StringAndArrayCases.string",
        "serializationOptions": {
         "$id": "186",
         "json": {
          "$id": "187",
          "name": "string"
         }
        }
       },
       {
        "$id": "188",
        "kind": "property",
        "name": "array",
        "serializedName": "array",
        "doc": "This should be receive/send the array variant",
        "type": {
         "$id": "189",
         "kind": "union",
         "name": "StringAndArrayCasesArray",
         "variantTypes": [
          {
           "$id": "190",
           "kind": "string",
           "name": "string",
           "crossLanguageDefinitionId": "TypeSpec.string",
           "decorators": []
          },
          {
           "$id": "191",
           "kind": "array",
           "name": "Array",
           "valueType": {
            "$id": "192",
            "kind": "string",
            "name": "string",
            "crossLanguageDefinitionId": "TypeSpec.string",
            "decorators": []
           },
           "crossLanguageDefinitionId": "TypeSpec.Array",
           "decorators": []
          }
         ],
         "namespace": "",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.StringAndArrayCases.array",
        "serializationOptions": {
         "$id": "193",
         "json": {
          "$id": "194",
          "name": "array"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "195",
      "json": {
       "$id": "196",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$ref": "180"
  },
  {
   "$id": "197",
   "kind": "model",
   "name": "SendRequest7",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "198",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "180"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringAndArray.send.prop",
     "serializationOptions": {
      "$id": "199",
      "json": {
       "$id": "200",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "201",
   "kind": "model",
   "name": "GetResponse8",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "202",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$id": "203",
      "kind": "model",
      "name": "MixedLiteralsCases",
      "namespace": "Type.Union",
      "crossLanguageDefinitionId": "Type.Union.MixedLiteralsCases",
      "usage": "Input,Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "204",
        "kind": "property",
        "name": "stringLiteral",
        "serializedName": "stringLiteral",
        "doc": "This should be receive/send the \"a\" variant",
        "type": {
         "$id": "205",
         "kind": "union",
         "name": "MixedLiteralsCasesStringLiteral",
         "variantTypes": [
          {
           "$ref": "54"
          },
          {
           "$ref": "56"
          },
          {
           "$ref": "58"
          },
          {
           "$ref": "60"
          }
         ],
         "namespace": "",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedLiteralsCases.stringLiteral",
        "serializationOptions": {
         "$id": "206",
         "json": {
          "$id": "207",
          "name": "stringLiteral"
         }
        }
       },
       {
        "$id": "208",
        "kind": "property",
        "name": "intLiteral",
        "serializedName": "intLiteral",
        "doc": "This should be receive/send the 2 variant",
        "type": {
         "$ref": "205"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedLiteralsCases.intLiteral",
        "serializationOptions": {
         "$id": "209",
         "json": {
          "$id": "210",
          "name": "intLiteral"
         }
        }
       },
       {
        "$id": "211",
        "kind": "property",
        "name": "floatLiteral",
        "serializedName": "floatLiteral",
        "doc": "This should be receive/send the 3.3 variant",
        "type": {
         "$ref": "205"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedLiteralsCases.floatLiteral",
        "serializationOptions": {
         "$id": "212",
         "json": {
          "$id": "213",
          "name": "floatLiteral"
         }
        }
       },
       {
        "$id": "214",
        "kind": "property",
        "name": "booleanLiteral",
        "serializedName": "booleanLiteral",
        "doc": "This should be receive/send the true variant",
        "type": {
         "$ref": "205"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedLiteralsCases.booleanLiteral",
        "serializationOptions": {
         "$id": "215",
         "json": {
          "$id": "216",
          "name": "booleanLiteral"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "217",
      "json": {
       "$id": "218",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$ref": "203"
  },
  {
   "$id": "219",
   "kind": "model",
   "name": "SendRequest8",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "220",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "203"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.MixedLiterals.send.prop",
     "serializationOptions": {
      "$id": "221",
      "json": {
       "$id": "222",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$id": "223",
   "kind": "model",
   "name": "GetResponse9",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous",
   "usage": "Output,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "224",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$id": "225",
      "kind": "model",
      "name": "MixedTypesCases",
      "namespace": "Type.Union",
      "crossLanguageDefinitionId": "Type.Union.MixedTypesCases",
      "usage": "Input,Output,Json",
      "decorators": [],
      "properties": [
       {
        "$id": "226",
        "kind": "property",
        "name": "model",
        "serializedName": "model",
        "doc": "This should be receive/send the Cat variant",
        "type": {
         "$id": "227",
         "kind": "union",
         "name": "MixedTypesCasesModel",
         "variantTypes": [
          {
           "$ref": "147"
          },
          {
           "$ref": "62"
          },
          {
           "$id": "228",
           "kind": "int32",
           "name": "int32",
           "crossLanguageDefinitionId": "TypeSpec.int32",
           "decorators": []
          },
          {
           "$id": "229",
           "kind": "boolean",
           "name": "boolean",
           "crossLanguageDefinitionId": "TypeSpec.boolean",
           "decorators": []
          }
         ],
         "namespace": "",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedTypesCases.model",
        "serializationOptions": {
         "$id": "230",
         "json": {
          "$id": "231",
          "name": "model"
         }
        }
       },
       {
        "$id": "232",
        "kind": "property",
        "name": "literal",
        "serializedName": "literal",
        "doc": "This should be receive/send the \"a\" variant",
        "type": {
         "$ref": "227"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedTypesCases.literal",
        "serializationOptions": {
         "$id": "233",
         "json": {
          "$id": "234",
          "name": "literal"
         }
        }
       },
       {
        "$id": "235",
        "kind": "property",
        "name": "int",
        "serializedName": "int",
        "doc": "This should be receive/send the int variant",
        "type": {
         "$ref": "227"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedTypesCases.int",
        "serializationOptions": {
         "$id": "236",
         "json": {
          "$id": "237",
          "name": "int"
         }
        }
       },
       {
        "$id": "238",
        "kind": "property",
        "name": "boolean",
        "serializedName": "boolean",
        "doc": "This should be receive/send the boolean variant",
        "type": {
         "$ref": "227"
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedTypesCases.boolean",
        "serializationOptions": {
         "$id": "239",
         "json": {
          "$id": "240",
          "name": "boolean"
         }
        }
       },
       {
        "$id": "241",
        "kind": "property",
        "name": "array",
        "serializedName": "array",
        "doc": "This should be receive/send 4 element with Cat, \"a\", int, and boolean",
        "type": {
         "$id": "242",
         "kind": "array",
         "name": "Array1",
         "valueType": {
          "$ref": "227"
         },
         "crossLanguageDefinitionId": "TypeSpec.Array",
         "decorators": []
        },
        "optional": false,
        "readOnly": false,
        "discriminator": false,
        "flatten": false,
        "decorators": [],
        "crossLanguageDefinitionId": "Type.Union.MixedTypesCases.array",
        "serializationOptions": {
         "$id": "243",
         "json": {
          "$id": "244",
          "name": "array"
         }
        }
       }
      ]
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.get.Response.anonymous.prop",
     "serializationOptions": {
      "$id": "245",
      "json": {
       "$id": "246",
       "name": "prop"
      }
     }
    }
   ]
  },
  {
   "$ref": "225"
  },
  {
   "$id": "247",
   "kind": "model",
   "name": "SendRequest9",
   "namespace": "Type.Union",
   "crossLanguageDefinitionId": "Type.Union.send.Request.anonymous",
   "usage": "Spread,Json",
   "decorators": [],
   "properties": [
    {
     "$id": "248",
     "kind": "property",
     "name": "prop",
     "serializedName": "prop",
     "type": {
      "$ref": "225"
     },
     "optional": false,
     "readOnly": false,
     "discriminator": false,
     "flatten": false,
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.MixedTypes.send.prop",
     "serializationOptions": {
      "$id": "249",
      "json": {
       "$id": "250",
       "name": "prop"
      }
     }
    }
   ]
  }
 ],
 "clients": [
  {
   "$id": "251",
   "kind": "client",
   "name": "UnionClient",
   "namespace": "Type.Union",
   "doc": "Describe scenarios for various combinations of unions.",
   "methods": [],
   "parameters": [
    {
     "$id": "252",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Service host",
     "type": {
      "$id": "253",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client",
     "defaultValue": {
      "$id": "254",
      "type": {
       "$id": "255",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "value": "http://localhost:3000"
     }
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Type.Union",
   "apiVersions": [],
   "children": [
    {
     "$id": "256",
     "kind": "client",
     "name": "StringsOnly",
     "namespace": "Type.Union",
     "doc": "Describe union of string \"a\" | \"b\" | \"c\"",
     "methods": [
      {
       "$id": "257",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "258",
        "name": "get",
        "resourceName": "StringsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "259",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "64"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "260",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "104"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/strings-only",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringsOnly.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "261",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "64"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "262",
        "type": {
         "$ref": "104"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringsOnly.get"
      },
      {
       "$id": "263",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "264",
        "name": "send",
        "resourceName": "StringsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "265",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "66"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "266",
          "name": "sendRequest",
          "nameInRequest": "sendRequest",
          "type": {
           "$ref": "108"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "267",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/strings-only",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringsOnly.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "268",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "2"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "269",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "66"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "270"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringsOnly.send"
      }
     ],
     "parameters": [
      {
       "$id": "271",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "272",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "273",
        "type": {
         "$id": "274",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringsOnly",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "275",
     "kind": "client",
     "name": "StringExtensible",
     "namespace": "Type.Union",
     "doc": "Describe union of string string | \"b\" | \"c\"",
     "methods": [
      {
       "$id": "276",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "277",
        "name": "get",
        "resourceName": "StringExtensible",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "278",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "68"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "279",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "112"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/string-extensible",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringExtensible.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "280",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "68"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "281",
        "type": {
         "$ref": "112"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringExtensible.get"
      },
      {
       "$id": "282",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "283",
        "name": "send",
        "resourceName": "StringExtensible",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "284",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "70"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "285",
          "name": "sendRequest1",
          "nameInRequest": "sendRequest1",
          "type": {
           "$ref": "116"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "286",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/string-extensible",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringExtensible.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "287",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "10"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "288",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "70"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "289"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringExtensible.send"
      }
     ],
     "parameters": [
      {
       "$id": "290",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "291",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "292",
        "type": {
         "$id": "293",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringExtensible",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "294",
     "kind": "client",
     "name": "StringExtensibleNamed",
     "namespace": "Type.Union",
     "doc": "Describe union of string string | \"b\" | \"c\" but where the union is named and some of the variants are named",
     "methods": [
      {
       "$id": "295",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "296",
        "name": "get",
        "resourceName": "StringExtensibleNamed",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "297",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "72"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "298",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "120"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/string-extensible-named",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "299",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "72"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "300",
        "type": {
         "$ref": "120"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed.get"
      },
      {
       "$id": "301",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "302",
        "name": "send",
        "resourceName": "StringExtensibleNamed",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "303",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "74"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "304",
          "name": "sendRequest2",
          "nameInRequest": "sendRequest2",
          "type": {
           "$ref": "124"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "305",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/string-extensible-named",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "306",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "16"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "307",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "74"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "308"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed.send"
      }
     ],
     "parameters": [
      {
       "$id": "309",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "310",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "311",
        "type": {
         "$id": "312",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringExtensibleNamed",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "313",
     "kind": "client",
     "name": "IntsOnly",
     "namespace": "Type.Union",
     "doc": "Describe union of integer 1 | 2 | 3",
     "methods": [
      {
       "$id": "314",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "315",
        "name": "get",
        "resourceName": "IntsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "316",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "76"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "317",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "128"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/ints-only",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.IntsOnly.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "318",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "76"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "319",
        "type": {
         "$ref": "128"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.IntsOnly.get"
      },
      {
       "$id": "320",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "321",
        "name": "send",
        "resourceName": "IntsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "322",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "78"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "323",
          "name": "sendRequest3",
          "nameInRequest": "sendRequest3",
          "type": {
           "$ref": "132"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "324",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/ints-only",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.IntsOnly.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "325",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "22"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "326",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "78"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "327"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.IntsOnly.send"
      }
     ],
     "parameters": [
      {
       "$id": "328",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "329",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "330",
        "type": {
         "$id": "331",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.IntsOnly",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "332",
     "kind": "client",
     "name": "FloatsOnly",
     "namespace": "Type.Union",
     "doc": "Describe union of floats 1.1 | 2.2 | 3.3",
     "methods": [
      {
       "$id": "333",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "334",
        "name": "get",
        "resourceName": "FloatsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "335",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "80"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "336",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "136"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/floats-only",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.FloatsOnly.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "337",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "80"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "338",
        "type": {
         "$ref": "136"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.FloatsOnly.get"
      },
      {
       "$id": "339",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "340",
        "name": "send",
        "resourceName": "FloatsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "341",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "82"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "342",
          "name": "sendRequest4",
          "nameInRequest": "sendRequest4",
          "type": {
           "$ref": "140"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "343",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/floats-only",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.FloatsOnly.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "344",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "30"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "345",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "82"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "346"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.FloatsOnly.send"
      }
     ],
     "parameters": [
      {
       "$id": "347",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "348",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "349",
        "type": {
         "$id": "350",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.FloatsOnly",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "351",
     "kind": "client",
     "name": "ModelsOnly",
     "namespace": "Type.Union",
     "doc": "Describe union of models",
     "methods": [
      {
       "$id": "352",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "353",
        "name": "get",
        "resourceName": "ModelsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "354",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "84"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "355",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "144"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/models-only",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.ModelsOnly.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "356",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "84"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "357",
        "type": {
         "$ref": "144"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.ModelsOnly.get"
      },
      {
       "$id": "358",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "359",
        "name": "send",
        "resourceName": "ModelsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "360",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "86"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "361",
          "name": "sendRequest5",
          "nameInRequest": "sendRequest5",
          "type": {
           "$ref": "159"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "362",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/models-only",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.ModelsOnly.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "363",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "146"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "364",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "86"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "365"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.ModelsOnly.send"
      }
     ],
     "parameters": [
      {
       "$id": "366",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "367",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "368",
        "type": {
         "$id": "369",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.ModelsOnly",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "370",
     "kind": "client",
     "name": "EnumsOnly",
     "namespace": "Type.Union",
     "doc": "Describe union of 2 different enums",
     "methods": [
      {
       "$id": "371",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "372",
        "name": "get",
        "resourceName": "EnumsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "373",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "88"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "374",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "163"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/enums-only",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.EnumsOnly.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "375",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "88"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "376",
        "type": {
         "$ref": "163"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.EnumsOnly.get"
      },
      {
       "$id": "377",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "378",
        "name": "send",
        "resourceName": "EnumsOnly",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "379",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "90"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "380",
          "name": "sendRequest6",
          "nameInRequest": "sendRequest6",
          "type": {
           "$ref": "174"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "381",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/enums-only",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.EnumsOnly.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "382",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "165"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "383",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "90"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "384"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.EnumsOnly.send"
      }
     ],
     "parameters": [
      {
       "$id": "385",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "386",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "387",
        "type": {
         "$id": "388",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.EnumsOnly",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "389",
     "kind": "client",
     "name": "StringAndArray",
     "namespace": "Type.Union",
     "doc": "Describe union of a string and an array of strings",
     "methods": [
      {
       "$id": "390",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "391",
        "name": "get",
        "resourceName": "StringAndArray",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "392",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "92"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "393",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "178"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/string-and-array",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringAndArray.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "394",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "92"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "395",
        "type": {
         "$ref": "178"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringAndArray.get"
      },
      {
       "$id": "396",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "397",
        "name": "send",
        "resourceName": "StringAndArray",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "398",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "94"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "399",
          "name": "sendRequest7",
          "nameInRequest": "sendRequest7",
          "type": {
           "$ref": "197"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "400",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/string-and-array",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.StringAndArray.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "401",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "180"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "402",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "94"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "403"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.StringAndArray.send"
      }
     ],
     "parameters": [
      {
       "$id": "404",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "405",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "406",
        "type": {
         "$id": "407",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.StringAndArray",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "408",
     "kind": "client",
     "name": "MixedLiterals",
     "namespace": "Type.Union",
     "doc": "Describe union of floats \"a\" | 2 | 3.3",
     "methods": [
      {
       "$id": "409",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "410",
        "name": "get",
        "resourceName": "MixedLiterals",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "411",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "96"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "412",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "201"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/mixed-literals",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.MixedLiterals.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "413",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "96"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "414",
        "type": {
         "$ref": "201"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.MixedLiterals.get"
      },
      {
       "$id": "415",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "416",
        "name": "send",
        "resourceName": "MixedLiterals",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "417",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "98"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "418",
          "name": "sendRequest8",
          "nameInRequest": "sendRequest8",
          "type": {
           "$ref": "219"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "419",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/mixed-literals",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.MixedLiterals.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "420",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "203"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "421",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "98"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "422"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.MixedLiterals.send"
      }
     ],
     "parameters": [
      {
       "$id": "423",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "424",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "425",
        "type": {
         "$id": "426",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.MixedLiterals",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    },
    {
     "$id": "427",
     "kind": "client",
     "name": "MixedTypes",
     "namespace": "Type.Union",
     "doc": "Describe union of floats \"a\" | 2 | 3.3",
     "methods": [
      {
       "$id": "428",
       "kind": "basic",
       "name": "get",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "429",
        "name": "get",
        "resourceName": "MixedTypes",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "430",
          "name": "accept",
          "nameInRequest": "Accept",
          "type": {
           "$ref": "100"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "431",
          "statusCodes": [
           200
          ],
          "bodyType": {
           "$ref": "223"
          },
          "headers": [],
          "isErrorResponse": false,
          "contentTypes": [
           "application/json"
          ]
         }
        ],
        "httpMethod": "GET",
        "uri": "{endpoint}",
        "path": "/type/union/mixed-types",
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.MixedTypes.get",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "432",
         "name": "accept",
         "nameInRequest": "accept",
         "type": {
          "$ref": "100"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "433",
        "type": {
         "$ref": "223"
        }
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.MixedTypes.get"
      },
      {
       "$id": "434",
       "kind": "basic",
       "name": "send",
       "accessibility": "public",
       "apiVersions": [],
       "operation": {
        "$id": "435",
        "name": "send",
        "resourceName": "MixedTypes",
        "accessibility": "public",
        "parameters": [
         {
          "$id": "436",
          "name": "contentType",
          "nameInRequest": "Content-Type",
          "doc": "Body parameter's content type. Known values are application/json",
          "type": {
           "$ref": "102"
          },
          "location": "Header",
          "isApiVersion": false,
          "isContentType": true,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Constant",
          "decorators": [],
          "skipUrlEncoding": false
         },
         {
          "$id": "437",
          "name": "sendRequest9",
          "nameInRequest": "sendRequest9",
          "type": {
           "$ref": "247"
          },
          "location": "Body",
          "isApiVersion": false,
          "isContentType": false,
          "isEndpoint": false,
          "explode": false,
          "isRequired": true,
          "kind": "Spread",
          "decorators": [],
          "skipUrlEncoding": false
         }
        ],
        "responses": [
         {
          "$id": "438",
          "statusCodes": [
           204
          ],
          "headers": [],
          "isErrorResponse": false
         }
        ],
        "httpMethod": "POST",
        "uri": "{endpoint}",
        "path": "/type/union/mixed-types",
        "requestMediaTypes": [
         "application/json"
        ],
        "bufferResponse": true,
        "generateProtocolMethod": true,
        "generateConvenienceMethod": true,
        "crossLanguageDefinitionId": "Type.Union.MixedTypes.send",
        "decorators": []
       },
       "parameters": [
        {
         "$id": "439",
         "name": "prop",
         "nameInRequest": "prop",
         "type": {
          "$ref": "225"
         },
         "location": "Body",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Method",
         "decorators": [],
         "skipUrlEncoding": false
        },
        {
         "$id": "440",
         "name": "contentType",
         "nameInRequest": "contentType",
         "doc": "Body parameter's content type. Known values are application/json",
         "type": {
          "$ref": "102"
         },
         "location": "Header",
         "isApiVersion": false,
         "isContentType": false,
         "isEndpoint": false,
         "explode": false,
         "isRequired": true,
         "kind": "Constant",
         "decorators": [],
         "skipUrlEncoding": false
        }
       ],
       "response": {
        "$id": "441"
       },
       "isOverride": false,
       "generateConvenient": true,
       "generateProtocol": true,
       "crossLanguageDefinitionId": "Type.Union.MixedTypes.send"
      }
     ],
     "parameters": [
      {
       "$id": "442",
       "name": "endpoint",
       "nameInRequest": "endpoint",
       "doc": "Service host",
       "type": {
        "$id": "443",
        "kind": "url",
        "name": "url",
        "crossLanguageDefinitionId": "TypeSpec.url"
       },
       "location": "Uri",
       "isApiVersion": false,
       "isContentType": false,
       "isRequired": true,
       "isEndpoint": true,
       "skipUrlEncoding": false,
       "explode": false,
       "kind": "Client",
       "defaultValue": {
        "$id": "444",
        "type": {
         "$id": "445",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string"
        },
        "value": "http://localhost:3000"
       }
      }
     ],
     "decorators": [],
     "crossLanguageDefinitionId": "Type.Union.MixedTypes",
     "apiVersions": [],
     "parent": {
      "$ref": "251"
     }
    }
   ]
  }
 ]
}
