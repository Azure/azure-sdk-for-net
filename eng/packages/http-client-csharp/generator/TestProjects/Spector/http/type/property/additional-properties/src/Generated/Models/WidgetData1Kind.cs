// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace _Type.Property.AdditionalProperties
{
    public readonly partial struct WidgetData1Kind : IEquatable<WidgetData1Kind>
    {
        public WidgetData1Kind(string value) => throw null;

        public static WidgetData1Kind Kind1 => throw null;

        public static bool operator ==(WidgetData1Kind left, WidgetData1Kind right) => throw null;

        public static bool operator !=(WidgetData1Kind left, WidgetData1Kind right) => throw null;

        /// <summary> Converts a string to a <see cref="WidgetData1Kind"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator WidgetData1Kind(string value) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => throw null;

        public bool Equals(WidgetData1Kind other) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => throw null;

        public override string ToString() => throw null;
    }
}
