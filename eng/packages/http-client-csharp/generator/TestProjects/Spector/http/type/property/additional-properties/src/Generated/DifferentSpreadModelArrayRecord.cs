// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Property.AdditionalProperties
{
    /// <summary> The model spread Record&lt;ModelForRecord[]&gt; with the different known property type. </summary>
    public partial class DifferentSpreadModelArrayRecord
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;
        private IDictionary<string, IList<BinaryData>> _additionalIListBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="DifferentSpreadModelArrayRecord"/>. </summary>
        /// <param name="knownProp"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="knownProp"/> is null. </exception>
        public DifferentSpreadModelArrayRecord(string knownProp)
        {
            Argument.AssertNotNull(knownProp, nameof(knownProp));

            KnownProp = knownProp;
            _additionalIListBinaryDataProperties = new ChangeTrackingDictionary<string, IList<BinaryData>>();
        }

        /// <summary> Initializes a new instance of <see cref="DifferentSpreadModelArrayRecord"/>. </summary>
        /// <param name="knownProp"></param>
        /// <param name="additionalProperties"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal DifferentSpreadModelArrayRecord(string knownProp, IDictionary<string, IList<BinaryData>> additionalProperties, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            KnownProp = knownProp;
            _additionalIListBinaryDataProperties = additionalProperties;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the KnownProp. </summary>
        public string KnownProp { get; set; }

        /// <summary> Gets the AdditionalProperties. </summary>
        public IDictionary<string, IList<BinaryData>> AdditionalProperties => _additionalIListBinaryDataProperties;
    }
}
