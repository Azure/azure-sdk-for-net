// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Type.Union.Discriminated._NoEnvelope
{
    public partial class NoEnvelopeDefault
    {
        protected NoEnvelopeDefault() => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response Get(string kind, RequestContext context) => throw null;

        public virtual Task<Response> GetAsync(string kind, RequestContext context) => throw null;

        public virtual Response<BinaryData> Get(string kind = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<BinaryData>> GetAsync(string kind = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Put(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<BinaryData> Put(BinaryData input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<BinaryData>> PutAsync(BinaryData input, CancellationToken cancellationToken = default) => throw null;
    }
}
