// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Model.Inheritance.Recursive
{
    /// <summary> element. </summary>
    public partial class Element
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="Element"/>. </summary>
        public Element()
        {
            Extension = new ChangeTrackingList<Extension>();
        }

        /// <summary> Initializes a new instance of <see cref="Element"/>. </summary>
        /// <param name="extension"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal Element(IList<Extension> extension, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Extension = extension;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the Extension. </summary>
        public IList<Extension> Extension { get; }
    }
}
