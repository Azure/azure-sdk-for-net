// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Type.Union
{
    public static partial class TypeUnionModelFactory
    {
        public static GetResponse GetResponse(GetResponseProp prop = default) => throw null;

        public static GetResponse1 GetResponse1(GetResponseProp1 prop = default) => throw null;

        public static GetResponse2 GetResponse2(StringExtensibleNamedUnion prop = default) => throw null;

        public static GetResponse3 GetResponse3(GetResponseProp2 prop = default) => throw null;

        public static GetResponse4 GetResponse4(GetResponseProp3 prop = default) => throw null;

        public static GetResponse5 GetResponse5(BinaryData prop = default) => throw null;

        public static Cat Cat(string name = default) => throw null;

        public static Dog Dog(string bark = default) => throw null;

        public static GetResponse6 GetResponse6(EnumsOnlyCases prop = default) => throw null;

        public static EnumsOnlyCases EnumsOnlyCases(EnumsOnlyCasesLr lr = default, EnumsOnlyCasesUd ud = default) => throw null;

        public static GetResponse7 GetResponse7(StringAndArrayCases prop = default) => throw null;

        public static StringAndArrayCases StringAndArrayCases(BinaryData @string = default, BinaryData array = default) => throw null;

        public static GetResponse8 GetResponse8(MixedLiteralsCases prop = default) => throw null;

        public static MixedLiteralsCases MixedLiteralsCases(BinaryData stringLiteral = default, BinaryData intLiteral = default, BinaryData floatLiteral = default, BinaryData booleanLiteral = default) => throw null;

        public static GetResponse9 GetResponse9(MixedTypesCases prop = default) => throw null;

        public static MixedTypesCases MixedTypesCases(BinaryData model = default, BinaryData literal = default, BinaryData @int = default, BinaryData boolean = default, IEnumerable<BinaryData> array = default) => throw null;
    }
}
