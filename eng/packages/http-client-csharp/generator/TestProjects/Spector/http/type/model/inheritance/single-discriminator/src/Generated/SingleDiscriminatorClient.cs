// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using _Type.Model.Inheritance.SingleDiscriminator.Models;

namespace _Type.Model.Inheritance.SingleDiscriminator
{
    public partial class SingleDiscriminatorClient
    {
        public SingleDiscriminatorClient() : this(new Uri("http://localhost:3000"), new SingleDiscriminatorClientOptions()) => throw null;

        public SingleDiscriminatorClient(Uri endpoint, SingleDiscriminatorClientOptions options) => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response GetModel(RequestContext context) => throw null;

        public virtual Task<Response> GetModelAsync(RequestContext context) => throw null;

        public virtual Response<Bird> GetModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Bird>> GetModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutModel(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutModelAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutModel(Bird input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutModelAsync(Bird input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetRecursiveModel(RequestContext context) => throw null;

        public virtual Task<Response> GetRecursiveModelAsync(RequestContext context) => throw null;

        public virtual Response<Bird> GetRecursiveModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Bird>> GetRecursiveModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutRecursiveModel(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutRecursiveModelAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutRecursiveModel(Bird input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutRecursiveModelAsync(Bird input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetMissingDiscriminator(RequestContext context) => throw null;

        public virtual Task<Response> GetMissingDiscriminatorAsync(RequestContext context) => throw null;

        public virtual Response<Bird> GetMissingDiscriminator(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Bird>> GetMissingDiscriminatorAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetWrongDiscriminator(RequestContext context) => throw null;

        public virtual Task<Response> GetWrongDiscriminatorAsync(RequestContext context) => throw null;

        public virtual Response<Bird> GetWrongDiscriminator(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Bird>> GetWrongDiscriminatorAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetLegacyModel(RequestContext context) => throw null;

        public virtual Task<Response> GetLegacyModelAsync(RequestContext context) => throw null;

        public virtual Response<Dinosaur> GetLegacyModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Dinosaur>> GetLegacyModelAsync(CancellationToken cancellationToken = default) => throw null;
    }
}
