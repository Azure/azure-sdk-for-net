// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace _Type.Property.Nullable
{
    /// <summary> Model with collection models properties. </summary>
    public partial class CollectionsModelProperty
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="CollectionsModelProperty"/>. </summary>
        /// <param name="requiredProperty"> Required property. </param>
        /// <param name="nullableProperty"> Property. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="requiredProperty"/> is null. </exception>
        public CollectionsModelProperty(string requiredProperty, IEnumerable<InnerModel> nullableProperty)
        {
            Argument.AssertNotNull(requiredProperty, nameof(requiredProperty));

            RequiredProperty = requiredProperty;
            NullableProperty = nullableProperty?.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="CollectionsModelProperty"/>. </summary>
        /// <param name="requiredProperty"> Required property. </param>
        /// <param name="nullableProperty"> Property. </param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal CollectionsModelProperty(string requiredProperty, IList<InnerModel> nullableProperty, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            RequiredProperty = requiredProperty;
            NullableProperty = nullableProperty;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Required property. </summary>
        public string RequiredProperty { get; set; }

        /// <summary> Property. </summary>
        public IList<InnerModel> NullableProperty { get; set; }
    }
}
