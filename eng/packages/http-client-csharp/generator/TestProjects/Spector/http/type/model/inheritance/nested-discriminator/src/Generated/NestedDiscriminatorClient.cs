// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using _Type.Model.Inheritance.NestedDiscriminator.Models;

namespace _Type.Model.Inheritance.NestedDiscriminator
{
    public partial class NestedDiscriminatorClient
    {
        public NestedDiscriminatorClient() : this(new Uri("http://localhost:3000"), new NestedDiscriminatorClientOptions()) => throw null;

        public NestedDiscriminatorClient(Uri endpoint, NestedDiscriminatorClientOptions options) => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response GetModel(RequestContext context) => throw null;

        public virtual Task<Response> GetModelAsync(RequestContext context) => throw null;

        public virtual Response<Fish> GetModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Fish>> GetModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutModel(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutModelAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutModel(Fish input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutModelAsync(Fish input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetRecursiveModel(RequestContext context) => throw null;

        public virtual Task<Response> GetRecursiveModelAsync(RequestContext context) => throw null;

        public virtual Response<Fish> GetRecursiveModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Fish>> GetRecursiveModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutRecursiveModel(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutRecursiveModelAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutRecursiveModel(Fish input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutRecursiveModelAsync(Fish input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetMissingDiscriminator(RequestContext context) => throw null;

        public virtual Task<Response> GetMissingDiscriminatorAsync(RequestContext context) => throw null;

        public virtual Response<Fish> GetMissingDiscriminator(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Fish>> GetMissingDiscriminatorAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetWrongDiscriminator(RequestContext context) => throw null;

        public virtual Task<Response> GetWrongDiscriminatorAsync(RequestContext context) => throw null;

        public virtual Response<Fish> GetWrongDiscriminator(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Fish>> GetWrongDiscriminatorAsync(CancellationToken cancellationToken = default) => throw null;
    }
}
