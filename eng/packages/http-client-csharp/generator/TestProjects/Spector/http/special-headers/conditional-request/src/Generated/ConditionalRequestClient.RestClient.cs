// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core;

namespace SpecialHeaders.ConditionalRequest
{
    /// <summary></summary>
    public partial class ConditionalRequestClient
    {
        private static ResponseClassifier _pipelineMessageClassifier204;

        private static ResponseClassifier PipelineMessageClassifier204 => _pipelineMessageClassifier204 = new StatusCodeClassifier(stackalloc ushort[] { 204 });

        internal HttpMessage CreatePostIfMatchRequest(ETag? ifMatch, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Post;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/special-headers/conditional-request/if-match", false);
            request.Uri = uri;
            if (ifMatch != null)
            {
                request.Headers.Add("If-Match", ifMatch.Value);
            }
            return message;
        }

        internal HttpMessage CreatePostIfNoneMatchRequest(ETag? ifNoneMatch, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Post;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/special-headers/conditional-request/if-none-match", false);
            request.Uri = uri;
            if (ifNoneMatch != null)
            {
                request.Headers.Add("If-None-Match", ifNoneMatch.Value);
            }
            return message;
        }

        internal HttpMessage CreateHeadIfModifiedSinceRequest(DateTimeOffset? ifModifiedSince, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Head;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/special-headers/conditional-request/if-modified-since", false);
            request.Uri = uri;
            if (ifModifiedSince != null)
            {
                request.Headers.SetValue("If-Modified-Since", TypeFormatters.ConvertToString(ifModifiedSince, "R"));
            }
            return message;
        }

        internal HttpMessage CreatePostIfUnmodifiedSinceRequest(DateTimeOffset? ifUnmodifiedSince, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Post;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/special-headers/conditional-request/if-unmodified-since", false);
            request.Uri = uri;
            if (ifUnmodifiedSince != null)
            {
                request.Headers.SetValue("If-Unmodified-Since", TypeFormatters.ConvertToString(ifUnmodifiedSince, "R"));
            }
            return message;
        }
    }
}
