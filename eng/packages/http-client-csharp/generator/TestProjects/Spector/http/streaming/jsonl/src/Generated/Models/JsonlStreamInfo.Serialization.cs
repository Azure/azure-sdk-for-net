// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace TypeSpec.Http.Streams
{
    public partial class JsonlStreamInfo : IJsonModel<JsonlStreamInfo>
    {
        void IJsonModel<JsonlStreamInfo>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        protected virtual void JsonModelWriteCore(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        JsonlStreamInfo IJsonModel<JsonlStreamInfo>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        protected virtual JsonlStreamInfo JsonModelCreateCore(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        BinaryData IPersistableModel<JsonlStreamInfo>.Write(ModelReaderWriterOptions options) => throw null;

        protected virtual BinaryData PersistableModelWriteCore(ModelReaderWriterOptions options) => throw null;

        JsonlStreamInfo IPersistableModel<JsonlStreamInfo>.Create(BinaryData data, ModelReaderWriterOptions options) => throw null;

        protected virtual JsonlStreamInfo PersistableModelCreateCore(BinaryData data, ModelReaderWriterOptions options) => throw null;

        string IPersistableModel<JsonlStreamInfo>.GetFormatFromOptions(ModelReaderWriterOptions options) => throw null;

        /// <param name="jsonlStreamInfo"> The <see cref="JsonlStreamInfo"/> to serialize into <see cref="RequestContent"/>. </param>
        public static implicit operator RequestContent(JsonlStreamInfo jsonlStreamInfo) => throw null;

        public static explicit operator JsonlStreamInfo(Response result) => throw null;
    }
}
