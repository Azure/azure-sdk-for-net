// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Parameters.Spread.Models;

namespace Parameters.Spread
{
    public partial class Model
    {
        protected Model() => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response SpreadAsRequestBody(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> SpreadAsRequestBodyAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response SpreadAsRequestBody(string name, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> SpreadAsRequestBodyAsync(string name, CancellationToken cancellationToken = default) => throw null;

        public virtual Response SpreadCompositeRequestOnlyWithBody(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> SpreadCompositeRequestOnlyWithBodyAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response SpreadCompositeRequestOnlyWithBody(BodyParameter body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> SpreadCompositeRequestOnlyWithBodyAsync(BodyParameter body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response SpreadCompositeRequestWithoutBody(string name, string testHeader, RequestContext context) => throw null;

        public virtual Task<Response> SpreadCompositeRequestWithoutBodyAsync(string name, string testHeader, RequestContext context) => throw null;

        public virtual Response SpreadCompositeRequestWithoutBody(string name, string testHeader, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> SpreadCompositeRequestWithoutBodyAsync(string name, string testHeader, CancellationToken cancellationToken = default) => throw null;

        public virtual Response SpreadCompositeRequest(string name, string testHeader, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> SpreadCompositeRequestAsync(string name, string testHeader, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response SpreadCompositeRequest(string name, string testHeader, BodyParameter body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> SpreadCompositeRequestAsync(string name, string testHeader, BodyParameter body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response SpreadCompositeRequestMix(string name, string testHeader, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> SpreadCompositeRequestMixAsync(string name, string testHeader, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response SpreadCompositeRequestMix(string name, string testHeader, string prop, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> SpreadCompositeRequestMixAsync(string name, string testHeader, string prop, CancellationToken cancellationToken = default) => throw null;
    }
}
