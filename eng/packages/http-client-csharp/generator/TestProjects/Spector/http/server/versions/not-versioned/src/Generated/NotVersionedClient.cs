// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;

namespace Server.Versions.NotVersioned
{
    public partial class NotVersionedClient
    {
        protected NotVersionedClient() => throw null;

        public NotVersionedClient(Uri endpoint) : this(endpoint, new NotVersionedClientOptions()) => throw null;

        public NotVersionedClient(Uri endpoint, NotVersionedClientOptions options) => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response WithoutApiVersion(RequestContext context) => throw null;

        public virtual Task<Response> WithoutApiVersionAsync(RequestContext context) => throw null;

        public virtual Response WithoutApiVersion(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> WithoutApiVersionAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response WithQueryApiVersion(string apiVersion, RequestContext context) => throw null;

        public virtual Task<Response> WithQueryApiVersionAsync(string apiVersion, RequestContext context) => throw null;

        public virtual Response WithQueryApiVersion(string apiVersion, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> WithQueryApiVersionAsync(string apiVersion, CancellationToken cancellationToken = default) => throw null;

        public virtual Response WithPathApiVersion(string apiVersion, RequestContext context) => throw null;

        public virtual Task<Response> WithPathApiVersionAsync(string apiVersion, RequestContext context) => throw null;

        public virtual Response WithPathApiVersion(string apiVersion, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> WithPathApiVersionAsync(string apiVersion, CancellationToken cancellationToken = default) => throw null;
    }
}
