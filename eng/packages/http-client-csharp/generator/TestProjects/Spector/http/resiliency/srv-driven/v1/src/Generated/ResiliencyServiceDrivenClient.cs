// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;

namespace Resiliency.ServiceDriven
{
    public partial class ResiliencyServiceDrivenClient
    {
        protected ResiliencyServiceDrivenClient() => throw null;

        public ResiliencyServiceDrivenClient(Uri endpoint, string serviceDeploymentVersion) : this(endpoint, serviceDeploymentVersion, new ResiliencyServiceDrivenClientOptions()) => throw null;

        public ResiliencyServiceDrivenClient(Uri endpoint, string serviceDeploymentVersion, ResiliencyServiceDrivenClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response FromNone(RequestContext context) => throw null;

        public virtual Task<Response> FromNoneAsync(RequestContext context) => throw null;

        public virtual Response FromNone(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> FromNoneAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response FromOneRequired(string parameter, RequestContext context) => throw null;

        public virtual Task<Response> FromOneRequiredAsync(string parameter, RequestContext context) => throw null;

        public virtual Response FromOneRequired(string parameter, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> FromOneRequiredAsync(string parameter, CancellationToken cancellationToken = default) => throw null;

        public virtual Response FromOneOptional(string parameter, RequestContext context) => throw null;

        public virtual Task<Response> FromOneOptionalAsync(string parameter, RequestContext context) => throw null;

        public virtual Response FromOneOptional(string parameter = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> FromOneOptionalAsync(string parameter = default, CancellationToken cancellationToken = default) => throw null;
    }
}
