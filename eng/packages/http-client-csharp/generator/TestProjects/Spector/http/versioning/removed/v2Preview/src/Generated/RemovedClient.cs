// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Versioning.Removed
{
    public partial class RemovedClient
    {
        protected RemovedClient() => throw null;

        public RemovedClient(Uri endpoint) : this(endpoint, new RemovedClientOptions()) => throw null;

        public RemovedClient(Uri endpoint, RemovedClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response V1(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> V1Async(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<ModelV1> V1(ModelV1 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelV1>> V1Async(ModelV1 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response V2(string @param, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> V2Async(string @param, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<ModelV2> V2(string @param, ModelV2 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelV2>> V2Async(string @param, ModelV2 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response ModelV3(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> ModelV3Async(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<ModelV3> ModelV3(ModelV3 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelV3>> ModelV3Async(ModelV3 body, CancellationToken cancellationToken = default) => throw null;

        public virtual InterfaceV1 GetInterfaceV1Client() => throw null;
    }
}
