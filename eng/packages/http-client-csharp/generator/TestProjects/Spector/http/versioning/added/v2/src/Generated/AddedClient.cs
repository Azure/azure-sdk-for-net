// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace Versioning.Added
{
    public partial class AddedClient
    {
        protected AddedClient() => throw null;

        public AddedClient(Uri endpoint) : this(endpoint, new AddedClientOptions()) => throw null;

        public AddedClient(Uri endpoint, AddedClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response V1(string headerV2, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> V1Async(string headerV2, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<ModelV1> V1(string headerV2, ModelV1 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelV1>> V1Async(string headerV2, ModelV1 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response V2(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> V2Async(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<ModelV2> V2(ModelV2 body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelV2>> V2Async(ModelV2 body, CancellationToken cancellationToken = default) => throw null;

        public virtual InterfaceV2 GetInterfaceV2Client() => throw null;
    }
}
