// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Text.Json;
using Azure;
using Azure.Core;

namespace Encode.Duration._Property
{
    public partial class FloatMillisecondsDurationArrayProperty : IJsonModel<FloatMillisecondsDurationArrayProperty>
    {
        internal FloatMillisecondsDurationArrayProperty() => throw null;

        void IJsonModel<FloatMillisecondsDurationArrayProperty>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        protected virtual void JsonModelWriteCore(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        FloatMillisecondsDurationArrayProperty IJsonModel<FloatMillisecondsDurationArrayProperty>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        protected virtual FloatMillisecondsDurationArrayProperty JsonModelCreateCore(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        BinaryData IPersistableModel<FloatMillisecondsDurationArrayProperty>.Write(ModelReaderWriterOptions options) => throw null;

        protected virtual BinaryData PersistableModelWriteCore(ModelReaderWriterOptions options) => throw null;

        FloatMillisecondsDurationArrayProperty IPersistableModel<FloatMillisecondsDurationArrayProperty>.Create(BinaryData data, ModelReaderWriterOptions options) => throw null;

        protected virtual FloatMillisecondsDurationArrayProperty PersistableModelCreateCore(BinaryData data, ModelReaderWriterOptions options) => throw null;

        string IPersistableModel<FloatMillisecondsDurationArrayProperty>.GetFormatFromOptions(ModelReaderWriterOptions options) => throw null;

        /// <param name="floatMillisecondsDurationArrayProperty"> The <see cref="FloatMillisecondsDurationArrayProperty"/> to serialize into <see cref="RequestContent"/>. </param>
        public static implicit operator RequestContent(FloatMillisecondsDurationArrayProperty floatMillisecondsDurationArrayProperty) => throw null;

        public static explicit operator FloatMillisecondsDurationArrayProperty(Response result) => throw null;
    }
}
