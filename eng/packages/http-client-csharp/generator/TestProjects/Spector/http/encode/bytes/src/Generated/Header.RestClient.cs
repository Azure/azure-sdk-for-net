// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure;
using Azure.Core;

namespace Encode.Bytes
{
    /// <summary></summary>
    public partial class Header
    {
        private static ResponseClassifier _pipelineMessageClassifier204;

        private static ResponseClassifier PipelineMessageClassifier204 => _pipelineMessageClassifier204 = new StatusCodeClassifier(stackalloc ushort[] { 204 });

        internal HttpMessage CreateDefaultRequest(BinaryData value, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Get;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/encode/bytes/header/default", false);
            request.Uri = uri;
            request.Headers.SetValue("value", TypeFormatters.ConvertToString(value, "D"));
            return message;
        }

        internal HttpMessage CreateBase64Request(BinaryData value, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Get;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/encode/bytes/header/base64", false);
            request.Uri = uri;
            request.Headers.SetValue("value", TypeFormatters.ConvertToString(value, "D"));
            return message;
        }

        internal HttpMessage CreateBase64urlRequest(BinaryData value, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Get;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/encode/bytes/header/base64url", false);
            request.Uri = uri;
            request.Headers.SetValue("value", TypeFormatters.ConvertToString(value, "U"));
            return message;
        }

        internal HttpMessage CreateBase64urlArrayRequest(IEnumerable<BinaryData> value, RequestContext context)
        {
            HttpMessage message = Pipeline.CreateMessage(context, PipelineMessageClassifier204);
            Request request = message.Request;
            request.Method = RequestMethod.Get;
            RawRequestUriBuilder uri = new RawRequestUriBuilder();
            uri.Reset(_endpoint);
            uri.AppendPath("/encode/bytes/header/base64url-array", false);
            request.Uri = uri;
            request.Headers.SetDelimited("value", value, ",", "U");
            return message;
        }
    }
}
