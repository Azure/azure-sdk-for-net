// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;

namespace Encode.Datetime
{
    public partial class Header
    {
        protected Header() => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response Default(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Task<Response> DefaultAsync(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Response Default(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> DefaultAsync(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Rfc3339(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Task<Response> Rfc3339Async(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Response Rfc3339(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Rfc3339Async(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Rfc7231(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Task<Response> Rfc7231Async(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Response Rfc7231(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Rfc7231Async(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Response UnixTimestamp(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Task<Response> UnixTimestampAsync(DateTimeOffset value, RequestContext context) => throw null;

        public virtual Response UnixTimestamp(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> UnixTimestampAsync(DateTimeOffset value, CancellationToken cancellationToken = default) => throw null;

        public virtual Response UnixTimestampArray(IEnumerable<DateTimeOffset> value, RequestContext context) => throw null;

        public virtual Task<Response> UnixTimestampArrayAsync(IEnumerable<DateTimeOffset> value, RequestContext context) => throw null;

        public virtual Response UnixTimestampArray(IEnumerable<DateTimeOffset> value, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> UnixTimestampArrayAsync(IEnumerable<DateTimeOffset> value, CancellationToken cancellationToken = default) => throw null;
    }
}
