// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;

namespace Encode.Duration
{
    public partial class Query
    {
        protected Query() => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response Default(TimeSpan input, RequestContext context) => throw null;

        public virtual Task<Response> DefaultAsync(TimeSpan input, RequestContext context) => throw null;

        public virtual Response Default(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> DefaultAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Iso8601(TimeSpan input, RequestContext context) => throw null;

        public virtual Task<Response> Iso8601Async(TimeSpan input, RequestContext context) => throw null;

        public virtual Response Iso8601(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Iso8601Async(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Int32Seconds(TimeSpan input, RequestContext context) => throw null;

        public virtual Task<Response> Int32SecondsAsync(TimeSpan input, RequestContext context) => throw null;

        public virtual Response Int32Seconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Int32SecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response FloatSeconds(TimeSpan input, RequestContext context) => throw null;

        public virtual Task<Response> FloatSecondsAsync(TimeSpan input, RequestContext context) => throw null;

        public virtual Response FloatSeconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> FloatSecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Float64Seconds(TimeSpan input, RequestContext context) => throw null;

        public virtual Task<Response> Float64SecondsAsync(TimeSpan input, RequestContext context) => throw null;

        public virtual Response Float64Seconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Float64SecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Int32SecondsArray(IEnumerable<TimeSpan> input, RequestContext context) => throw null;

        public virtual Task<Response> Int32SecondsArrayAsync(IEnumerable<TimeSpan> input, RequestContext context) => throw null;

        public virtual Response Int32SecondsArray(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Int32SecondsArrayAsync(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;
    }
}
