// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core.Pipeline;

namespace Encode.Duration
{
    public partial class Header
    {
        protected Header() => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response Default(TimeSpan duration, RequestContext context) => throw null;

        public virtual Task<Response> DefaultAsync(TimeSpan duration, RequestContext context) => throw null;

        public virtual Response Default(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> DefaultAsync(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Iso8601(TimeSpan duration, RequestContext context) => throw null;

        public virtual Task<Response> Iso8601Async(TimeSpan duration, RequestContext context) => throw null;

        public virtual Response Iso8601(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Iso8601Async(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Iso8601Array(IEnumerable<TimeSpan> duration, RequestContext context) => throw null;

        public virtual Task<Response> Iso8601ArrayAsync(IEnumerable<TimeSpan> duration, RequestContext context) => throw null;

        public virtual Response Iso8601Array(IEnumerable<TimeSpan> duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Iso8601ArrayAsync(IEnumerable<TimeSpan> duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Int32Seconds(TimeSpan duration, RequestContext context) => throw null;

        public virtual Task<Response> Int32SecondsAsync(TimeSpan duration, RequestContext context) => throw null;

        public virtual Response Int32Seconds(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Int32SecondsAsync(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Response FloatSeconds(TimeSpan duration, RequestContext context) => throw null;

        public virtual Task<Response> FloatSecondsAsync(TimeSpan duration, RequestContext context) => throw null;

        public virtual Response FloatSeconds(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> FloatSecondsAsync(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Float64Seconds(TimeSpan duration, RequestContext context) => throw null;

        public virtual Task<Response> Float64SecondsAsync(TimeSpan duration, RequestContext context) => throw null;

        public virtual Response Float64Seconds(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> Float64SecondsAsync(TimeSpan duration, CancellationToken cancellationToken = default) => throw null;
    }
}
