// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure;
using Azure.Core;

namespace _Specs_.Azure.Core.Page
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class _Specs_AzureCorePageModelFactory
    {

        /// <summary> Details about a user. </summary>
        /// <param name="id"> The user's id. </param>
        /// <param name="name"> The user's name. </param>
        /// <param name="orders"> The user's order list. </param>
        /// <param name="etag"> The entity tag for this resource. </param>
        /// <returns> A new <see cref="Page.User"/> instance for mocking. </returns>
        public static User User(int id = default, string name = default, IEnumerable<UserOrder> orders = default, ETag etag = default)
        {
            orders ??= new ChangeTrackingList<UserOrder>();

            return new User(id, name, orders?.ToList(), etag, additionalBinaryDataProperties: null);
        }

        /// <summary> UserOrder for testing list with expand. </summary>
        /// <param name="id"> The user's id. </param>
        /// <param name="userId"> The user's id. </param>
        /// <param name="detail"> The user's order detail. </param>
        /// <returns> A new <see cref="Page.UserOrder"/> instance for mocking. </returns>
        public static UserOrder UserOrder(int id = default, int userId = default, string detail = default)
        {
            return new UserOrder(id, userId, detail, additionalBinaryDataProperties: null);
        }

        /// <summary> The body of the input. </summary>
        /// <param name="inputName"> The name of the input. </param>
        /// <returns> A new <see cref="Page.ListItemInputBody"/> instance for mocking. </returns>
        public static ListItemInputBody ListItemInputBody(string inputName = default)
        {
            return new ListItemInputBody(inputName, additionalBinaryDataProperties: null);
        }

        /// <summary> First item. </summary>
        /// <param name="id"> The id of the item. </param>
        /// <returns> A new <see cref="Page.FirstItem"/> instance for mocking. </returns>
        public static FirstItem FirstItem(int id = default)
        {
            return new FirstItem(id, additionalBinaryDataProperties: null);
        }

        /// <summary> Second item. </summary>
        /// <param name="name"> The name of the item. </param>
        /// <returns> A new <see cref="Page.SecondItem"/> instance for mocking. </returns>
        public static SecondItem SecondItem(string name = default)
        {
            return new SecondItem(name, additionalBinaryDataProperties: null);
        }
    }
}
