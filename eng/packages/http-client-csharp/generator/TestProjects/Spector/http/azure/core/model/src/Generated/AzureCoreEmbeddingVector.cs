// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Specs_.Azure.Core.Model
{
    public partial class AzureCoreEmbeddingVector
    {
        protected AzureCoreEmbeddingVector() => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response Get(RequestContext context) => throw null;

        public virtual Task<Response> GetAsync(RequestContext context) => throw null;

        public virtual Response<ReadOnlyMemory<int>> Get(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ReadOnlyMemory<int>>> GetAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response Put(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response Put(ReadOnlyMemory<int> body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutAsync(ReadOnlyMemory<int> body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Post(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PostAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<AzureEmbeddingModel> Post(AzureEmbeddingModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<AzureEmbeddingModel>> PostAsync(AzureEmbeddingModel body, CancellationToken cancellationToken = default) => throw null;
    }
}
