// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Specs_.Azure.ClientGenerator.Core.AlternateType._ExternalType
{
    public partial class ExternalType
    {
        protected ExternalType() => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response GetModel(RequestContext context) => throw null;

        public virtual Task<Response> GetModelAsync(RequestContext context) => throw null;

        public virtual Response<Feature> GetModel(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Feature>> GetModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutModel(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutModelAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutModel(Feature body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutModelAsync(Feature body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetProperty(RequestContext context) => throw null;

        public virtual Task<Response> GetPropertyAsync(RequestContext context) => throw null;

        public virtual Response<ModelWithFeatureProperty> GetProperty(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ModelWithFeatureProperty>> GetPropertyAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutProperty(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutPropertyAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PutProperty(ModelWithFeatureProperty body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PutPropertyAsync(ModelWithFeatureProperty body, CancellationToken cancellationToken = default) => throw null;
    }
}
