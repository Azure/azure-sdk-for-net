// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Specs_.Azure.Versioning.PreviewVersion
{
    public partial class PreviewVersionClient
    {
        public PreviewVersionClient() : this(new Uri("http://localhost:3000"), new PreviewVersionClientOptions()) => throw null;

        public PreviewVersionClient(Uri endpoint, PreviewVersionClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response GetWidget(string id, RequestContext context) => throw null;

        public virtual Task<Response> GetWidgetAsync(string id, RequestContext context) => throw null;

        public virtual Response<Widget> GetWidget(string id, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Widget>> GetWidgetAsync(string id, CancellationToken cancellationToken = default) => throw null;

        public virtual Response UpdateWidgetColor(string id, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> UpdateWidgetColorAsync(string id, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response GetWidgets(string name, string color, RequestContext context) => throw null;

        public virtual Task<Response> GetWidgetsAsync(string name, string color, RequestContext context) => throw null;

        public virtual Response<ListWidgetsResponse> GetWidgets(string name = default, string color = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<ListWidgetsResponse>> GetWidgetsAsync(string name = default, string color = default, CancellationToken cancellationToken = default) => throw null;
    }
}
