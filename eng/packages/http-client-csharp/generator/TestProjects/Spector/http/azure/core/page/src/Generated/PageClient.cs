// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Specs_.Azure.Core.Page
{
    public partial class PageClient
    {
        public PageClient() : this(new Uri("http://localhost:3000"), new PageClientOptions()) => throw null;

        public PageClient(Uri endpoint, PageClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Pageable<BinaryData> GetWithPage(RequestContext context) => throw null;

        public virtual AsyncPageable<BinaryData> GetWithPageAsync(RequestContext context) => throw null;

        public virtual Pageable<User> GetWithPage(CancellationToken cancellationToken = default) => throw null;

        public virtual AsyncPageable<User> GetWithPageAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Pageable<BinaryData> GetWithParameters(RequestContent content, string another = default, RequestContext context = null) => throw null;

        public virtual AsyncPageable<BinaryData> GetWithParametersAsync(RequestContent content, string another = default, RequestContext context = null) => throw null;

        public virtual Pageable<User> GetWithParameters(ListItemInputBody bodyInput, ListItemInputExtensibleEnum? another = default, CancellationToken cancellationToken = default) => throw null;

        public virtual AsyncPageable<User> GetWithParametersAsync(ListItemInputBody bodyInput, ListItemInputExtensibleEnum? another = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Pageable<BinaryData> GetWithCustomPageModel(RequestContext context) => throw null;

        public virtual AsyncPageable<BinaryData> GetWithCustomPageModelAsync(RequestContext context) => throw null;

        public virtual Pageable<User> GetWithCustomPageModel(CancellationToken cancellationToken = default) => throw null;

        public virtual AsyncPageable<User> GetWithCustomPageModelAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Pageable<BinaryData> WithParameterizedNextLink(string @select, bool? includePending, RequestContext context) => throw null;

        public virtual AsyncPageable<BinaryData> WithParameterizedNextLinkAsync(string @select, bool? includePending, RequestContext context) => throw null;

        public virtual Pageable<User> WithParameterizedNextLink(string @select, bool? includePending = default, CancellationToken cancellationToken = default) => throw null;

        public virtual AsyncPageable<User> WithParameterizedNextLinkAsync(string @select, bool? includePending = default, CancellationToken cancellationToken = default) => throw null;

        public virtual TwoModelsAsPageItem GetTwoModelsAsPageItemClient() => throw null;
    }
}
