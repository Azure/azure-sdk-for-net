// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Specs_.Azure.Core.Traits
{
    public partial class TraitsClient
    {
        public TraitsClient() : this(new Uri("http://localhost:3000"), new TraitsClientOptions()) => throw null;

        public TraitsClient(Uri endpoint, TraitsClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response SmokeTest(int id, string foo, RequestConditions requestConditions, RequestContext context) => throw null;

        public virtual Task<Response> SmokeTestAsync(int id, string foo, RequestConditions requestConditions, RequestContext context) => throw null;

        public virtual Response<User> SmokeTest(int id, string foo, RequestConditions requestConditions = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<User>> SmokeTestAsync(int id, string foo, RequestConditions requestConditions = default, CancellationToken cancellationToken = default) => throw null;

        public virtual Response RepeatableAction(int id, RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> RepeatableActionAsync(int id, RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<UserActionResponse> RepeatableAction(int id, UserActionParam body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<UserActionResponse>> RepeatableActionAsync(int id, UserActionParam body, CancellationToken cancellationToken = default) => throw null;
    }
}
