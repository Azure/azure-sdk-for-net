// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace _Specs_.Azure.Example.Basic
{
    /// <summary> The ActionRequest. </summary>
    public partial class ActionRequest
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="ActionRequest"/>. </summary>
        /// <param name="stringProperty"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="stringProperty"/> is null. </exception>
        public ActionRequest(string stringProperty)
        {
            Argument.AssertNotNull(stringProperty, nameof(stringProperty));

            StringProperty = stringProperty;
            ArrayProperty = new ChangeTrackingList<string>();
            RecordProperty = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of <see cref="ActionRequest"/>. </summary>
        /// <param name="stringProperty"></param>
        /// <param name="modelProperty"></param>
        /// <param name="arrayProperty"></param>
        /// <param name="recordProperty"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal ActionRequest(string stringProperty, Model modelProperty, IList<string> arrayProperty, IDictionary<string, string> recordProperty, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            StringProperty = stringProperty;
            ModelProperty = modelProperty;
            ArrayProperty = arrayProperty;
            RecordProperty = recordProperty;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets the StringProperty. </summary>
        public string StringProperty { get; }

        /// <summary> Gets or sets the ModelProperty. </summary>
        public Model ModelProperty { get; set; }

        /// <summary> Gets the ArrayProperty. </summary>
        public IList<string> ArrayProperty { get; }

        /// <summary> Gets the RecordProperty. </summary>
        public IDictionary<string, string> RecordProperty { get; }
    }
}
