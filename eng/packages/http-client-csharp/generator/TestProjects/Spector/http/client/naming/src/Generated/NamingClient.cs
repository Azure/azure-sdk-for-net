// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using Client.Naming.Model;
using Client.Naming.Property;
using Client.Naming._UnionEnum;

namespace Client.Naming
{
    public partial class NamingClient
    {
        public NamingClient() : this(new Uri("http://localhost:3000"), new NamingClientOptions()) => throw null;

        public NamingClient(Uri endpoint, NamingClientOptions options) => throw null;

        public virtual HttpPipeline Pipeline => throw null;

        public virtual Response ClientName(RequestContext context) => throw null;

        public virtual Task<Response> ClientNameAsync(RequestContext context) => throw null;

        public virtual Response ClientName(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> ClientNameAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response Parameter(string clientName, RequestContext context) => throw null;

        public virtual Task<Response> ParameterAsync(string clientName, RequestContext context) => throw null;

        public virtual Response Parameter(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> ParameterAsync(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Client(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> ClientAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response Client(ClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> ClientAsync(ClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Language(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> LanguageAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response Language(LanguageClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> LanguageAsync(LanguageClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response CompatibleWithEncodedName(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> CompatibleWithEncodedNameAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response CompatibleWithEncodedName(ClientNameAndJsonEncodedNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> CompatibleWithEncodedNameAsync(ClientNameAndJsonEncodedNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Request(string clientName, RequestContext context) => throw null;

        public virtual Task<Response> RequestAsync(string clientName, RequestContext context) => throw null;

        public virtual Response Request(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> RequestAsync(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual Response Response(RequestContext context) => throw null;

        public virtual Task<Response> ResponseAsync(RequestContext context) => throw null;

        public virtual Response Response(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> ResponseAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual ModelClient GetModelClient() => throw null;

        public virtual UnionEnum GetUnionEnumClient() => throw null;
    }
}
