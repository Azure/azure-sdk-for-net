// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Client.Naming._UnionEnum
{
    public readonly partial struct ExtensibleEnum : IEquatable<ExtensibleEnum>
    {
        public ExtensibleEnum(string value) => throw null;

        public static ExtensibleEnum ClientEnumValue1 => throw null;

        public static ExtensibleEnum ClientEnumValue2 => throw null;

        public static bool operator ==(ExtensibleEnum left, ExtensibleEnum right) => throw null;

        public static bool operator !=(ExtensibleEnum left, ExtensibleEnum right) => throw null;

        /// <summary> Converts a string to a <see cref="ExtensibleEnum"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator ExtensibleEnum(string value) => throw null;

        /// <summary> Converts a string to a <see cref="ExtensibleEnum"/>. </summary>
        /// <param name="value"> The value. </param>
        public static implicit operator ExtensibleEnum?(string value) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => throw null;

        public bool Equals(ExtensibleEnum other) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => throw null;

        public override string ToString() => throw null;
    }
}
