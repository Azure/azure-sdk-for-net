{
 "$id": "1",
 "name": "Client.Structure.Service",
 "apiVersions": [],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "ClientType",
   "crossLanguageDefinitionId": "Client.Structure.Service.ClientType",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "Default",
     "value": "default",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "MultiClient",
     "value": "multi-client",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "8",
     "kind": "enumvalue",
     "name": "RenamedOperation",
     "value": "renamed-operation",
     "valueType": {
      "$id": "9",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "10",
     "kind": "enumvalue",
     "name": "TwoOperationGroup",
     "value": "two-operation-group",
     "valueType": {
      "$id": "11",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    },
    {
     "$id": "12",
     "kind": "enumvalue",
     "name": "ClientOperationGroup",
     "value": "client-operation-group",
     "valueType": {
      "$id": "13",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "decorators": []
    }
   ],
   "namespace": "Client.Structure.Service",
   "isFixed": true,
   "isFlags": false,
   "usage": "Input",
   "decorators": []
  }
 ],
 "models": [],
 "clients": [
  {
   "$id": "14",
   "name": "ServiceClient",
   "namespace": "Client.Structure.Service",
   "doc": "Test that we can use @client and @operationGroup decorators to customize client side code structure, such as:\n1. have everything as default.\n2. to rename client or operation group\n3. one client can have more than one operations groups\n4. split one interface into two clients\n5. have two clients with operations come from different interfaces\n6. have two clients with a hierarchy relation.",
   "operations": [
    {
     "$id": "15",
     "name": "one",
     "resourceName": "Service",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "16",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/one",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.one",
     "decorators": []
    },
    {
     "$id": "17",
     "name": "two",
     "resourceName": "Service",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "18",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/two",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.two",
     "decorators": []
    }
   ],
   "parameters": [
    {
     "$id": "19",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "20",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "21",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service"
  },
  {
   "$id": "22",
   "name": "Baz",
   "namespace": "Client.Structure.Service.Baz",
   "operations": [],
   "parent": "ServiceClient",
   "parameters": [
    {
     "$id": "23",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "24",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "25",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Baz"
  },
  {
   "$id": "26",
   "name": "BazFoo",
   "namespace": "Client.Structure.Service.Baz",
   "operations": [
    {
     "$id": "27",
     "name": "seven",
     "resourceName": "Foo",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "28",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/seven",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Baz.Foo.seven",
     "decorators": []
    }
   ],
   "parent": "Baz",
   "parameters": [
    {
     "$id": "29",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "30",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "31",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Baz.Foo"
  },
  {
   "$id": "32",
   "name": "Qux",
   "namespace": "Client.Structure.Service.Qux",
   "operations": [
    {
     "$id": "33",
     "name": "eight",
     "resourceName": "Qux",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "34",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/eight",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Qux.eight",
     "decorators": []
    }
   ],
   "parent": "ServiceClient",
   "parameters": [
    {
     "$id": "35",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "36",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "37",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Qux"
  },
  {
   "$id": "38",
   "name": "QuxBar",
   "namespace": "Client.Structure.Service.Qux",
   "operations": [
    {
     "$id": "39",
     "name": "nine",
     "resourceName": "Bar",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "40",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/nine",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Qux.Bar.nine",
     "decorators": []
    }
   ],
   "parent": "Qux",
   "parameters": [
    {
     "$id": "41",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "42",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "43",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Qux.Bar"
  },
  {
   "$id": "44",
   "name": "Foo",
   "namespace": "Client.Structure.Service",
   "operations": [
    {
     "$id": "45",
     "name": "three",
     "resourceName": "Foo",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "46",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/three",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Foo.three",
     "decorators": []
    },
    {
     "$id": "47",
     "name": "four",
     "resourceName": "Foo",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "48",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/four",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Foo.four",
     "decorators": []
    }
   ],
   "parent": "ServiceClient",
   "parameters": [
    {
     "$id": "49",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "50",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "51",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Foo"
  },
  {
   "$id": "52",
   "name": "Bar",
   "namespace": "Client.Structure.Service",
   "operations": [
    {
     "$id": "53",
     "name": "five",
     "resourceName": "Bar",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "54",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/five",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Bar.five",
     "decorators": []
    },
    {
     "$id": "55",
     "name": "six",
     "resourceName": "Bar",
     "accessibility": "public",
     "parameters": [],
     "responses": [
      {
       "$id": "56",
       "statusCodes": [
        204
       ],
       "headers": [],
       "isErrorResponse": false
      }
     ],
     "httpMethod": "POST",
     "uri": "{endpoint}/client/structure/{client}",
     "path": "/six",
     "bufferResponse": true,
     "generateProtocolMethod": true,
     "generateConvenienceMethod": true,
     "crossLanguageDefinitionId": "Client.Structure.Service.Bar.six",
     "decorators": []
    }
   ],
   "parent": "ServiceClient",
   "parameters": [
    {
     "$id": "57",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "58",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "59",
     "name": "client",
     "nameInRequest": "client",
     "doc": "Need to be set as 'default', 'multi-client', 'renamed-operation', 'two-operation-group' in client.",
     "type": {
      "$ref": "2"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Client.Structure.Service.Bar"
  }
 ]
}
