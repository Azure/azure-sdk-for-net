// <auto-generated/>

#nullable disable

using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Parameters.CollectionFormat
{
    public partial class Query
    {
        protected Query() => throw null;

        public ClientPipeline Pipeline => throw null;

        public virtual ClientResult Multi(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual Task<ClientResult> MultiAsync(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual ClientResult Multi(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> MultiAsync(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Ssv(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual Task<ClientResult> SsvAsync(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual ClientResult Ssv(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> SsvAsync(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Tsv(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual Task<ClientResult> TsvAsync(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual ClientResult Tsv(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> TsvAsync(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Pipes(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual Task<ClientResult> PipesAsync(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual ClientResult Pipes(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> PipesAsync(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Csv(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual Task<ClientResult> CsvAsync(IEnumerable<string> colors, RequestOptions options) => throw null;

        public virtual ClientResult Csv(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> CsvAsync(IEnumerable<string> colors, CancellationToken cancellationToken = default) => throw null;
    }
}
