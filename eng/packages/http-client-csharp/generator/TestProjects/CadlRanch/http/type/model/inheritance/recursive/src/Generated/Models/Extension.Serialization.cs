// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Text.Json;

namespace _Type.Model.Inheritance.Recursive.Models
{
    /// <summary></summary>
    public partial class Extension : IJsonModel<Extension>
    {
        void IJsonModel<Extension>.Write(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        /// <param name="writer"> The JSON writer. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override void JsonModelWriteCore(Utf8JsonWriter writer, ModelReaderWriterOptions options) => throw null;

        Extension IJsonModel<Extension>.Create(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        /// <param name="reader"> The JSON reader. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override Element JsonModelCreateCore(ref Utf8JsonReader reader, ModelReaderWriterOptions options) => throw null;

        BinaryData IPersistableModel<Extension>.Write(ModelReaderWriterOptions options) => throw null;

        /// <param name="options"> The client options for reading and writing models. </param>
        protected override BinaryData PersistableModelWriteCore(ModelReaderWriterOptions options) => throw null;

        Extension IPersistableModel<Extension>.Create(BinaryData data, ModelReaderWriterOptions options) => throw null;

        /// <param name="data"> The data to parse. </param>
        /// <param name="options"> The client options for reading and writing models. </param>
        protected override Element PersistableModelCreateCore(BinaryData data, ModelReaderWriterOptions options) => throw null;

        string IPersistableModel<Extension>.GetFormatFromOptions(ModelReaderWriterOptions options) => throw null;

        /// <param name="extension"> The <see cref="Extension"/> to serialize into <see cref="BinaryContent"/>. </param>
        public static implicit operator BinaryContent(Extension extension) => throw null;

        /// <param name="result"> The <see cref="ClientResult"/> to deserialize the <see cref="Extension"/> from. </param>
        public static explicit operator Extension(ClientResult result) => throw null;
    }
}
