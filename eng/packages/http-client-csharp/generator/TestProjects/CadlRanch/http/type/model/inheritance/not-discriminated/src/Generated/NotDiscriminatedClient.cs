// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Core.Pipeline;
using _Type.Model.Inheritance.NotDiscriminated.Models;

namespace _Type.Model.Inheritance.NotDiscriminated
{
    public partial class NotDiscriminatedClient
    {
        public NotDiscriminatedClient() : this(new Uri("http://localhost:3000"), new NotDiscriminatedClientOptions()) => throw null;

        public NotDiscriminatedClient(Uri endpoint, NotDiscriminatedClientOptions options) => throw null;

        public HttpPipeline Pipeline => throw null;

        public virtual Response PostValid(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PostValidAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response PostValid(Siamese input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response> PostValidAsync(Siamese input, CancellationToken cancellationToken = default) => throw null;

        public virtual Response GetValid(RequestContext context) => throw null;

        public virtual Task<Response> GetValidAsync(RequestContext context) => throw null;

        public virtual Response<Siamese> GetValid(CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Siamese>> GetValidAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual Response PutValid(RequestContent content, RequestContext context = null) => throw null;

        public virtual Task<Response> PutValidAsync(RequestContent content, RequestContext context = null) => throw null;

        public virtual Response<Siamese> PutValid(Siamese input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<Response<Siamese>> PutValidAsync(Siamese input, CancellationToken cancellationToken = default) => throw null;
    }
}
