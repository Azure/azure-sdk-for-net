// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace Encode.Bytes.Models
{
    /// <summary> A factory class for creating instances of the models for mocking. </summary>
    public static partial class EncodeBytesModelFactory
    {
        /// <summary> The DefaultBytesProperty. </summary>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.DefaultBytesProperty"/> instance for mocking. </returns>
        public static DefaultBytesProperty DefaultBytesProperty(BinaryData value = default) => throw null;

        /// <summary> The Base64BytesProperty. </summary>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.Base64BytesProperty"/> instance for mocking. </returns>
        public static Base64BytesProperty Base64BytesProperty(BinaryData value = default) => throw null;

        /// <summary> The Base64urlBytesProperty. </summary>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.Base64urlBytesProperty"/> instance for mocking. </returns>
        public static Base64urlBytesProperty Base64urlBytesProperty(BinaryData value = default) => throw null;

        /// <summary> The Base64urlArrayBytesProperty. </summary>
        /// <param name="value"></param>
        /// <returns> A new <see cref="Models.Base64urlArrayBytesProperty"/> instance for mocking. </returns>
        public static Base64urlArrayBytesProperty Base64urlArrayBytesProperty(IEnumerable<BinaryData> value = default) => throw null;
    }
}
