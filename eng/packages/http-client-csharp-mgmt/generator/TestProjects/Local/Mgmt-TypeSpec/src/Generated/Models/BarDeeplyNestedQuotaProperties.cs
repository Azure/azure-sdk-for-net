// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using MgmtTypeSpec;

namespace MgmtTypeSpec.Models
{
    /// <summary> The BarDeeplyNestedQuotaProperties. </summary>
    public partial class BarDeeplyNestedQuotaProperties
    {
        /// <summary> Keeps track of any properties unknown to the library. </summary>
        private protected readonly IDictionary<string, BinaryData> _additionalBinaryDataProperties;

        /// <summary> Initializes a new instance of <see cref="BarDeeplyNestedQuotaProperties"/>. </summary>
        /// <param name="prop1"></param>
        /// <param name="prop2"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="prop1"/> is null. </exception>
        public BarDeeplyNestedQuotaProperties(string prop1, int prop2)
        {
            Argument.AssertNotNull(prop1, nameof(prop1));

            Prop1 = prop1;
            Prop2 = prop2;
        }

        /// <summary> Initializes a new instance of <see cref="BarDeeplyNestedQuotaProperties"/>. </summary>
        /// <param name="prop1"></param>
        /// <param name="prop2"></param>
        /// <param name="additionalBinaryDataProperties"> Keeps track of any properties unknown to the library. </param>
        internal BarDeeplyNestedQuotaProperties(string prop1, int prop2, IDictionary<string, BinaryData> additionalBinaryDataProperties)
        {
            Prop1 = prop1;
            Prop2 = prop2;
            _additionalBinaryDataProperties = additionalBinaryDataProperties;
        }

        /// <summary> Gets or sets the Prop1. </summary>
        public string Prop1 { get; set; }

        /// <summary> Gets or sets the Prop2. </summary>
        public int Prop2 { get; set; }
    }
}
