// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Diagnostics;
using Azure.Core;
using Azure.Core.Pipeline;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace MgmtTypeSpec
{
    /// <summary></summary>
    public partial class FooCollection : ArmCollection
    {
        private ClientDiagnostics _fooClientDiagnostics;
        private Foos _fooRestClient;

        /// <summary> Initializes a new instance of FooCollection for mocking. </summary>
        protected FooCollection()
        {
        }

        internal FooCollection(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
            _fooClientDiagnostics = new ClientDiagnostics("MgmtTypeSpec", FooResource.ResourceType.Namespace, Diagnostics);
            TryGetApiVersion(FooResource.ResourceType, out string fooApiVersion);
            _fooRestClient = new Foos(Pipeline, Endpoint, fooApiVersion);
            ValidateResourceId(id);
        }

        [Conditional("DEBUG")]
        internal static void ValidateResourceId(ResourceIdentifier id)
        {
            if (id != ResourceGroupResource.ResourceType)
            {
                throw new ArgumentException(string.Format("Invalid resource type {0} expected {1}", id.ResourceType, FooResource.ResourceType), id);
            }
        }
    }
}
