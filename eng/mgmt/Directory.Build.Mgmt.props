<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PkgVersion>0.12.0-dev.20220216.1</PkgVersion>
    <PkgLocalDir>$(NuGetPackageRoot)\microsoft.internal.netsdkbuild.mgmt.tools\$(PkgVersion)\Sdk</PkgLocalDir>
    <SymbolPackageFormat>symbols.nupkg</SymbolPackageFormat>
    <NoWarn>$(NoWarn);NETSDK1138</NoWarn>
  </PropertyGroup>

  <!-- during execution of tasks tests, this conditional import will satisfy the import resolution. And you will have to manually execute a target to restore the package
  Again this is strickly for build tools tests that will be run against this repo -->
  <Import Condition="Exists($(PkgLocalDir))" Project="$(PkgLocalDir)\CI.Bootstrap.targets" />
  <Import Condition="!Exists($(PkgLocalDir))" Project="CI.Bootstrap.targets" Sdk="Microsoft.Internal.NetSdkBuild.Mgmt.Tools" Version="$(PkgVersion)" />
  <Import Project="$(RepoRoot)\tools\bootstrapTools\bootstrap.targets" />
  <PropertyGroup>
    <SignAssembly>true</SignAssembly>
    <!--
      In order to be able to run our tests on .NET Framework we should use public signing by default so
      we don't have to disable strong name validation for things that are delay signed.
    -->
    <PublicSign Condition="'$(PublicSign)' == ''">true</PublicSign>
    <DelaySign Condition="'$(PublicSign)' == 'true'">false</DelaySign>
    <DelaySign Condition="'$(PublicSign)' != 'true'">true</DelaySign>
    <AssemblyOriginatorKeyFile>$(RepoEngPath)\MSSharedLibKey.snk</AssemblyOriginatorKeyFile>
  </PropertyGroup>
</Project>
