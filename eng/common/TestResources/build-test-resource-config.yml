parameters:
  - name: SubscriptionConfiguration
    type: string
    default: $(sub-config-azure-cloud-test-resources)
  - name: SubscriptionConfigurations
    type: object
    default: null
  # EnvVars is used to help diagnose variable conflict issues early
  - name: EnvVars
    type: object
    default: null
  - name: SubscriptionConfigurationFilePaths
    type: object
    default: null

steps:
  - pwsh: |
      . ./eng/common/TestResources/SubConfig-Helpers.ps1

      $finalConfig = @{}
      $baseSubConfigRaw = @'
        ${{ parameters.SubscriptionConfiguration }}
      '@.Trim()
      if ($baseSubConfigRaw) {
        $baseSubConfig = $baseSubConfigRaw | ConvertFrom-Json -AsHashtable

        Write-Host "Setting base sub config"
        $finalConfig = SetSubscriptionConfiguration $baseSubConfig
      }

      $subConfigJsonsRaw = @'
        ${{ convertToJson(parameters.SubscriptionConfigurations) }}
      '@.Trim() -replace '"{', '{' -replace '}"', '}'

      if ($subConfigJsonsRaw) {
        $subConfigs = $subConfigJsonsRaw | ConvertFrom-Json -AsHashtable

        foreach ($subConfig in $subConfigs) {
          Write-Host "Merging sub config from list"
          $finalConfig = UpdateSubscriptionConfiguration $finalConfig $subConfig
        }
      }

      $subConfigFilesRaw = @'
        ${{ convertToJson(parameters.SubscriptionConfigurationFilePaths) }}
      '@.Trim()

      if ($subConfigFilesRaw) {
        $subConfigFiles = $subConfigFilesRaw | ConvertFrom-Json -AsHashtable
        foreach ($file in $subConfigFiles) {
          Write-Host "Merging sub config from file: $file"
          $subConfig = Get-Content $file | ConvertFrom-Json -AsHashtable
          $finalConfig = UpdateSubscriptionConfiguration $finalConfig $subConfig
        }
      }

      Write-Host ($finalConfig | ConvertTo-Json)
      $serialized = $finalConfig | ConvertTo-Json -Compress
      Write-Host "##vso[task.setvariable variable=SubscriptionConfiguration;]$serialized"
    displayName: Merge subscription configurations
