parameters:
    rootFolder: '$(Build.SourcesDirectory)'

steps:
  - pwsh: |
        $(Build.SourcesDirectory)/eng/common/scripts/trust-proxy-certificate.ps1
    displayName: 'Language Specific Certificate Trust'

  # windows has a startup bug where the service is unavailable. See Azure/azure-sdk-tools#2122
  - pwsh: |
      docker info

      # if info failed, we need to restart the service and start docker desktop
      if($LASTEXITCODE -ne 0)
      {
        # Ensure the service is running
        Get-Service com.docker.service | Restart-Service

        # Start docker desktop
        $dockerExeLocation = (Get-Command docker).Source

        # on windows, docker.exe is shipped here:
        # C:\Program Files\Docker\Docker\resources\bin\docker.exe
        # Docker desktop lives in the same base path, just up a couple levels:
        # C:\Program Files\Docker\Docker\Docker Desktop.exe
        $dockerDesktopLocation = Resolve-Path (Join-Path -Path $dockerExeLocation -ChildPath "../../../Docker Desktop.exe")
        &$dockerDesktopLocation
      }
    condition: and(succeededOrFailed(), eq(variables['Agent.OS'],'Windows_NT'))

  - pwsh: |
      $(Build.SourcesDirectory)/eng/common/testproxy/docker-start-proxy.ps1 -Mode start -TargetFolder "${{ parameters.rootFolder }}"
    displayName: 'Run the docker container'

  - pwsh: |
      docker container ls -a
    displayName: Check running container