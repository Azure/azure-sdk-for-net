variables:
  - template: /eng/pipelines/templates/variables/globals.yml

stages:
  - stage:
    displayName: Invoke Proxy Shutdown Test
    jobs:
      - job: Test
        strategy:
          matrix:
            Windows:
              Pool: azsdk-pool-mms-win-2022-general
              Image: windows-2022
            Linux:
              Pool: azsdk-pool-mms-ubuntu-2204-general
              Image: ubuntu-22.04
            Mac:
              Pool: Azure Pipelines
              Image: macos-11

        pool:
          name: $(Pool)
          vmImage: $(Image)

        steps:
          - template: /eng/common/testproxy/test-proxy-tool.yml

          - pwsh: |
              $(Build.BinariesDirectory)/test-proxy/test-proxy.exe restore -a .
            displayName: Generate some proxy logs windows
            continueOnError: true
            condition: and(succeeded(), eq(variables['Agent.OS'],'Windows_NT'))

          - pwsh: |
              $(Build.BinariesDirectory)/test-proxy/test-proxy restore -a .
            displayName: Generate some proxy logs linux
            continueOnError: true
            condition: and(succeeded(), ne(variables['Agent.OS'],'Windows_NT'))

          - template: /eng/common/testproxy/test-proxy-tool-shutdown.yml

          - template: /eng/common/testproxy/publish-proxy-logs.yml

          - pwsh: |
              for ($i = 0; $i -lt 2; $i++) {
                  try {
                      Invoke-WebRequest -Uri "http://localhost:5000/Admin/IsAlive" | Out-Null
                      exit 0
                  } catch {
                      Write-Warning "Failed to successfully connect to test proxy. Retrying..."
                      Start-Sleep 6
                  }
              }
              Write-Error "Could not connect to test proxy."
              exit 1
            displayName: Test Proxy IsAlive