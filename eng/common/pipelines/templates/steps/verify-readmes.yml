parameters:
- name: PackagePropertiesFolder
  type: string
- name: RepoRoot
  type: string
  default: $(Build.SourcesDirectory)
- name: SettingsPath
  type: string
  default: '$(Build.SourcesDirectory)/eng/.docsettings.yml'
- name: DocWardenVersion
  type: string
  default: ''
- name: Condition
  type: string
  default: succeeded()

steps:
- pwsh: |
    $packageProperties = Get-ChildItem -Recurse -Force "${{ parameters.PackagePropertiesFolder }}" `
      | Where-Object { $_.Extension -eq '.json' } `

    $paths = @()

    foreach($propertiesFile in $packageProperties) {
      $PackageProp = Get-Content -Path $propertiesFile | ConvertFrom-Json

      $paths += (Join-Path "$(Build.SourcesDirectory)" $PackageProp.DirectoryPath)
    }

    $scanPaths = $paths -join ","
    Write-Host "##vso[task.setvariable variable=ScanPathArgument;]$scanPaths"
  displayName: Populate Scan Paths

- task: PowerShell@2
  displayName: "Verify Readmes"
  condition: ${{ parameters.Condition }}
  # todo: fix this continueOnError
  continueOnError: true
  inputs:
    filePath: "eng/common/scripts/Verify-Readme.ps1"
    arguments: >
      -DocWardenVersion '${{ parameters.DocWardenVersion }}'
      -ScanPaths '$(ScanPathArgument)'
      -RepoRoot ${{ parameters.RepoRoot }}
      -SettingsPath ${{ parameters.SettingsPath }}
    pwsh: true