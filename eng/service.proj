<Project Sdk="Microsoft.Build.Traversal">
  <PropertyGroup>
    <SDKType Condition="'$(SDKType)' == ''">all</SDKType>
    <ServiceDirectory Condition="'$(ServiceDirectory)' == '' and '$(Scope)' != ''">$(Scope)</ServiceDirectory>
    <ServiceDirectory Condition="'$(ServiceDirectory)' == ''">*</ServiceDirectory>
    <Project Condition="'$(Project)' == ''">**</Project>
    <IncludeTests Condition="'$(IncludeTests)' == ''">true</IncludeTests>
    <IncludeSrc Condition="'$(IncludeSrc)' == ''">true</IncludeSrc>
    <IncludeSamples Condition="'$(IncludeSamples)' == ''">true</IncludeSamples>
    <IncludePerf Condition="'$(IncludePerf)' == ''">true</IncludePerf>
    <IncludeStress Condition="'$(IncludeStress)' == ''">true</IncludeStress>
    <IncludeSamplesApplications Condition="'$(IncludeSamplesApplications)' == ''">true</IncludeSamplesApplications>
    <IncludeSamplesApplications Condition="'$(ServiceDirectory)' != '*' or '$(IncludeSamples)' == 'false'">false</IncludeSamplesApplications>
  </PropertyGroup>

  <ItemGroup>
    <MgmtExcludePaths Include="$(MSBuildThisFileDirectory)..\sdk\*\Microsoft.*.Management.*\**\*.csproj;$(MSBuildThisFileDirectory)..\sdk\*mgmt*\**\*.csproj" />
    <TestProjects Include="..\sdk\$(ServiceDirectory)\$(Project)\tests\**\*.csproj" />
    <SamplesProjects Include="..\sdk\$(ServiceDirectory)\$(Project)\samples\**\*.csproj" />
    <PerfProjects Include="..\sdk\$(ServiceDirectory)\$(Project)\perf\**\*.csproj" />
    <StressProjects Include="..\sdk\$(ServiceDirectory)\$(Project)\stress\**\*.csproj" />
    <SampleApplications Include="..\samples\**\*.csproj" />
    <SrcProjects Include="..\sdk\$(ServiceDirectory)\$(Project)\*.csproj" Exclude="@(TestProjects);@(SamplesProjects)"/>
    <ProjectReference Include="@(TestProjects)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludeTests)' == 'true'" />
    <ProjectReference Include="@(SamplesProjects)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludeSamples)' == 'true'" />
    <ProjectReference Include="@(PerfProjects)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludePerf)' == 'true'" />
    <ProjectReference Include="@(StressProjects)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludeStress)' == 'true'" />
    <ProjectReference Include="@(SampleApplications)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludeSamplesApplications)' == 'true'"/>
    <ProjectReference Include="@(SrcProjects)" Exclude="@(MgmtExcludePaths)" Condition="'$(IncludeSrc)' == 'true'" />
  </ItemGroup>

  <Import Project="..\sdk\$(ServiceDirectory)\*.projects" />

  <!-- Remove all projects except the ones included by the SDKType filter -->
  <ItemGroup Condition="'$(SDKType)' != 'all'">
    <ProjectsToRemove Include="@(ProjectReference)" Exclude="@(ProjectsToIncludeBySDKType)" />
    <ProjectReference Remove="@(ProjectsToRemove)" />
  </ItemGroup>

  <Target Name="CheckProjects" AfterTargets="Build">
    <!-- If scope is set this likely came from a call to build.proj and in cases where there is only mgmt projects we don't want to error so skip this extra check -->
    <Error Condition="'$(Scope)' == '' and '@(ProjectReference)' == ''"
        Text="No Projects found with patttern [..\sdk\$(ServiceDirectory)\$(Project)\*.csproj], please make sure you have passed in the correct ServiceDirectory." />
  </Target>

  <Target Name="GenerateCode">
    <MSBuild Projects="@(ProjectReference)"
             Targets="GenerateCode"
             BuildInParallel="$(BuildInParallel)"
             SkipNonexistentProjects="false"
             SkipNonexistentTargets="true" />
  </Target>

  <Target Name="ExportApi">
    <MSBuild Projects="@(ProjectReference)"
             Targets="ExportApi"
             BuildInParallel="$(BuildInParallel)"
             SkipNonexistentProjects="false"
             SkipNonexistentTargets="true" />
  </Target>

  <Target Name="FinalBuildReferencesOutput" BeforeTargets="Build" Condition="'$(SDKType)' != 'all'">
    <Message Text="Final Build References:" Importance="high"/>
    <Message Text="  %(ProjectReference.Identity)" Importance="high"/>
  </Target>

  <Target Name="GetPackageInfo">
    <MSBuild Projects="@(ProjectReference)"
            Targets="GetPackageInfo"
            BuildInParallel="$(BuildInParallel)"
            SkipNonexistentProjects="false"
            SkipNonexistentTargets="true" />
  </Target>
</Project>