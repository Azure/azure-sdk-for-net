trigger:
  - master
jobs:
  - job: CreateDocs
    variables:
      skipComponentGovernanceDetection: true
    pool:
      vmImage: vs2017-win2016
    steps:
      - pwsh: |
          Invoke-WebRequest -MaximumRetryCount 10 -Uri "https://github.com/mono/api-doc-tools/releases/download/mdoc-5.7.4.9/mdoc-5.7.4.9.zip" `
          -OutFile "mdoc.zip" | Wait-Process; Expand-Archive -Path "mdoc.zip" -DestinationPath "./mdoc/"
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Download and Extract mdoc Zip
      - pwsh: |
          Invoke-WebRequest -MaximumRetryCount 10 -Uri "https://github.com/dotnet/docfx/releases/download/v2.43.2/docfx.zip" `
          -OutFile "docfx.zip" | Wait-Process; Expand-Archive -Path "docfx.zip" -DestinationPath "./docfx/"
        workingDirectory: $(Build.BinariesDirectory)
        displayName: Download and Extract DocFX
      - pwsh: |
          dotnet restore "$(Build.SourcesDirectory)\eng\docgeneration\assets\docgen.csproj"
          dotnet restore "$(Build.SourcesDirectory)\eng\service.proj"
        displayName: Restore Nuget Packages Needed
      - pwsh: |
          New-Item -Type dir dll-docs/my-api
          New-Item -Type dir dll-docs/dependencies/my-api
          New-Item -Type dir dll-xml-output
          New-Item -Type dir dll-yaml-output
          New-Item -Type dir docfx-output
        displayName: Create Directories for Doc Generation
        workingDirectory: $(Build.BinariesDirectory)
      - task: DotNetCoreInstaller@2
        displayName: "Use .NET Core sdk 3.0.100-preview5-011568"
        inputs:
          version: 3.0.100-preview5-011568
      - pwsh: dotnet build eng/service.proj /p:IncludeTests=false /p:IncludeSamples=false /p:OutputPath=$(Build.ArtifactStagingDirectory)/dll-output /p:TargetFramework=netstandard2.0
        displayName: Build Packages
      - task: CopyFiles@2
        displayName: 'Copy over Dlls'
        inputs:
          SourceFolder: '$(Build.ArtifactStagingDirectory)/dll-output'
          TargetFolder: '$(Build.BinariesDirectory)/dll-docs/my-api'
          contents: |
            *.dll
            *.xml 
      - task: CopyFiles@2
        displayName: 'Copy over Api Dependencies'
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)/restoredPackages/netstandard.library/2.0.0/build/netstandard2.0/ref'
          TargetFolder: '$(Build.BinariesDirectory)/dll-docs/dependencies/my-api'
      - task: CmdLine@2
        displayName: Initialize Frameworks File
        inputs:
          script: mdoc.exe fx-bootstrap ../dll-docs
          workingDirectory: $(Build.BinariesDirectory)/mdoc
          failOnStderr: true
      - pwsh: |
          Copy-Item -Path "$(Build.SourcesDirectory)/restoredPackages/microsoft.bcl.asyncinterfaces/1.0.0-preview6.19303.8/ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll" `
           -Destination "$(Build.BinariesDirectory)/dll-docs/dependencies/my-api"
          & "$(Build.SourcesDirectory)/restoredPackages/popimport/1.0.0/Release/popimport.exe" -f "./dll-docs/"
        displayName: Include XML Files
      - task: CmdLine@2
        displayName: Produce ECMAXML
        inputs:
          script: |
            mdoc.exe update -fx ../dll-docs -o ../dll-xml-output --debug -lang docid -lang vb.net -lang fsharp --delete
          workingDirectory: $(Build.BinariesDirectory)/mdoc
          failOnStderr: true
      - task: CmdLine@2
        displayName: Generate YAML
        inputs:
          script: |
            "$(Build.SourcesDirectory)/restoredPackages/microsoft.docascode.ecma2yaml/1.0.644-alpha/tools/ECMA2Yaml.exe" -s "./dll-xml-output" -o "./dll-yaml-output"
          workingDirectory: $(Build.BinariesDirectory)
          failOnStderr: true
      - task: CmdLine@2
        displayName: Provision DocFX Directory
        inputs:
          script: $(Build.BinariesDirectory)/docfx/docfx.exe init -q
          workingDirectory: $(Build.BinariesDirectory)/docfx-output
          failOnStderr: true
      - pwsh: |
          Copy-Item "$(Build.BinariesDirectory)/dll-yaml-output/*" -Destination "$(Build.BinariesDirectory)/docfx-output/docfx_project/api/" -Recurse
          Copy-Item "$(Build.SourcesDirectory)/README.md" -Destination "$(Build.BinariesDirectory)/docfx-output/docfx_project/index.md" -Recurse -Force
          Copy-Item "$(Build.SourcesDirectory)/README.md" -Destination "$(Build.BinariesDirectory)/docfx-output/docfx_project/api/index.md" -Recurse -Force
          Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/assets/docfx.json" -Destination "$(Build.BinariesDirectory)/docfx-output/docfx_project" -Recurse -Force
          Remove-Item -Path "$(Build.BinariesDirectory)/docfx-output/docfx_project/toc.yml" -Force
          New-Item -Path "$(Build.BinariesDirectory)/docfx-output/docfx_project" -Name "toc.yml"
          Add-Content -Path "$(Build.BinariesDirectory)/docfx-output/docfx_project/toc.yml" -Value "- name: Api Documentation"
          Add-Content -Path "$(Build.BinariesDirectory)/docfx-output/docfx_project/toc.yml" -Value "  href: api/"
          Add-Content -Path "$(Build.BinariesDirectory)/docfx-output/docfx_project/toc.yml" -Value "  homepage: api/index.md"
        displayName: Copy over Yaml and Md files
      - task: CmdLine@2
        displayName: Build Doc Content
        inputs:
          script: $(Build.BinariesDirectory)/docfx/docfx.exe build
          workingDirectory: $(Build.BinariesDirectory)/docfx-output/docfx_project/
          failOnStderr: true
      - pwsh: |
          Copy-Item "$(Build.SourcesDirectory)/eng/docgeneration/assets/logo.svg" -Destination `
          "$(Build.BinariesDirectory)/docfx-output/docfx_project/_site" -Recurse -Force
        displayName: 'Copy over site logo'
      - task: CopyFiles@2
        displayName: Copy HTML to Artificats Directory
        inputs:
          sourceFolder: $(Build.BinariesDirectory)/docfx-output/docfx_project/
          content: '**\*'
          targetFolder: $(Build.ArtifactStagingDirectory)/docfx_project
          overWrite: true
      - task: PublishPipelineArtifact@0
        condition: succeeded()
        inputs:
          artifactName: docfx_project
          targetPath: $(Build.ArtifactStagingDirectory)/docfx_project/_site
