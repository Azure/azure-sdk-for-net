variables:
  - template: ./templates/variables/globals.yml

jobs:
  - job: SmokeTest

    strategy:
      matrix:
        Linux (Public):
          OSName: "Linux"
          OSVmImage: "ubuntu-16.04"
          TestTargetFramework: netcoreapp2.1
          CloudType: public
        Windows_NetCoreApp (Public):
          OSName: "Windows"
          OSVmImage: "windows-2019"
          TestTargetFramework: netcoreapp2.1
          CloudType: public
        Windows_NetFramework (Public):
          OSName: "Windows"
          OSVmImage: "windows-2019"
          TestTargetFramework: net461
          CloudType: public
        MacOs (Public):
          OSName: "MacOS"
          OSVmImage: "macOS-10.15"
          TestTargetFramework: netcoreapp2.1
          CloudType: public
        Windows_NetCoreApp (Gov):
          OSName: "Windows"
          OSVmImage: "windows-2019"
          TestTargetFramework: netcoreapp2.1
          CloudType: gov
        Windows_NetFramework (Gov):
          OSName: "Windows"
          OSVmImage: "windows-2019"
          TestTargetFramework: net461
          CloudType: gov
    pool:
      vmImage: $(OSVmImage)

    steps:
      - task: DotNetCoreInstaller@2
        displayName: "Use .NET Core runtime $(DotNetCoreRuntimeVersion)"
        inputs:
          packageType: runtime
          version: "$(DotNetCoreRuntimeVersion)"

      - task: DotNetCoreInstaller@2
        displayName: "Use .NET Core sdk $(DotNetCoreSDKVersion)"
        inputs:
          packageType: sdk
          version: "$(DotNetCoreSDKVersion)"

      - task: PowerShell@2
        inputs:
          targetType: filePath
          filePath: ./common/SmokeTests/SmokeTest/Update-Dependencies.ps1
          arguments: -CI
          workingDirectory: common/SmokeTests/SmokeTest
          pwsh: true
        displayName: Use latest dev feed package versions

      - pwsh: Get-Content ./common/SmokeTests/SmokeTest/SmokeTest.csproj
        displayName: Show SmokeTest.csproj

      - pwsh: dotnet restore ./common/SmokeTests/SmokeTest/SmokeTest.csproj
        displayName: dotnet restore

      - template: ../common/TestResources/deploy-test-resources.yml
        parameters:
          ServiceDirectory: '$(Build.SourcesDirectory)/common/SmokeTests/'
          TenantId: $(aad-azure-sdk-test-tenant-id)
          TestApplicationId: $(aad-azure-sdk-test-client-id)
          TestApplicationSecret: $(aad-azure-sdk-test-client-secret)
          TestApplicationObjectId: $(aad-azure-sdk-test-client-oid)
          ProvisionerApplicationId: $(provisioner-aad-id)
          ProvisionerApplicationSecret: $(provisioner-aad-secret)
          AdditionalParameters: "@{ storageEndpointSuffix = 'core.windows.net'; authorityHost = 'https://login.microsoftonline.com' }"
          Condition: and(succeeded(), eq(variables['CloudType'], 'public'))

      - template: ../common/TestResources/deploy-test-resources.yml
        parameters:
          ServiceDirectory: $(Build.SourcesDirectory)/common/SmokeTests/
          TenantId: $(aad-azure-sdk-test-tenant-id-gov)
          TestApplicationId: $(aad-azure-sdk-test-client-id-gov)
          TestApplicationSecret: $(aad-azure-sdk-test-client-secret-gov)
          TestApplicationObjectId: $(aad-azure-sdk-test-client-oid-gov)
          ProvisionerApplicationId: $(provisioner-aad-id-gov)
          ProvisionerApplicationSecret: $(provisioner-aad-secret-gov)
          AdditionalParameters: "@{ storageEndpointSuffix = 'core.usgovcloudapi.net'; authorityHost = 'https://login.microsoftonline.us/' }"
          Location: usgovvirginia
          Environment: AzureUSGovernment
          Condition: and(succeeded(), eq(variables['CloudType'], 'gov'))

      - pwsh: dotnet run -p .\common\SmokeTests\SmokeTest\SmokeTest.csproj --framework $(TestTargetFramework)
        displayName: "Run Smoke Tests"

      - template: ../common/TestResources/remove-test-resources.yml
        parameters:
          TenantId: $(aad-azure-sdk-test-tenant-id)
          ProvisionerApplicationId: $(provisioner-aad-id)
          ProvisionerApplicationSecret: $(provisioner-aad-secret)
          Condition: eq(variables['CloudType'], 'public')

      - template: ../common/TestResources/remove-test-resources.yml
        parameters:
          TenantId: $(aad-azure-sdk-test-tenant-id-gov)
          ProvisionerApplicationId: $(provisioner-aad-id-gov)
          ProvisionerApplicationSecret: $(provisioner-aad-secret-gov)
          Environment: AzureUSGovernment
          Condition: eq(variables['CloudType'], 'gov')
