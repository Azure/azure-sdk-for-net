parameters:
- name: SDKType
  type: string
  default: all
- name: TestSetupSteps
  type: stepList
  default: []
- name: TestTimeoutInMinutes
  type: number
- name: Matrix
  type: string
- name: DependsOn
  type: string
  default: ''
- name: UsePlatformContainer
  type: boolean
  default: false
- name: CloudConfig
  type: object
  default: {}
- name: ProjectListOverrideFilePropertyName
  type: string
  default: ''
- name: ServiceDirectory
  type: string
  default: ''

jobs:
  - job:
    displayName: "Analyze"
    dependsOn: ${{ parameters.DependsOn }}
    timeoutInMinutes: ${{ parameters.TestTimeoutInMinutes }}
    condition: and(succeededOrFailed(), ne(variables['Skip.CodeGen'], true), ne(${{ parameters.Matrix }}, '{}'), ne('${{ parameters.ProjectListOverrideFilePropertyName }}', ''))
    strategy:
      matrix: $[ ${{ parameters.Matrix }} ]
    pool:
      vmImage: $(OSVmImage)
      name: $(Pool)
    ${{ if eq(parameters.UsePlatformContainer, 'true') }}:
      # Add a default so the job doesn't fail when the matrix is empty
      container: $[ variables['Container'] ]
    steps:
      - ${{ if not(contains(variables['Build.DefinitionName'], '-pr - ')) }}:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            Paths:
            - "/*"
            - "!SessionRecords"
            - "!/sdk/*/**/SessionRecords"
            - "${{ convertToJson(variables['ServiceDirectories']) }}"
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: DependencyTestProjectReferences
          patterns: "**/$(${{ parameters.ProjectListOverrideFilePropertyName }})"
          path: $(Build.SourcesDirectory)

      - template: /eng/pipelines/templates/steps/install-dotnet.yml    
        parameters:
          EnableNuGetCache: false
      - task: PowerShell@2
        displayName: "Verify generated code"
        env:
          EnableSourceLink: false
        inputs:
          filePath: "eng/scripts/CodeChecks.ps1"
          arguments: >
           -ServiceDirectory ${{ parameters.ServiceDirectory }}
           -ProjectListOverrideFileName '$(${{ parameters.ProjectListOverrideFilePropertyName }})'
           -SDKType ${{ parameters.SDKType }}
           -SpellCheckPublicApiSurface
          pwsh: true
          failOnStderr: false
