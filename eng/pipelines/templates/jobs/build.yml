parameters:
  - name: Artifacts
    type: object
    default: []
  - name: TestPipeline
    type: boolean
    default: false
  - name: ServiceDirectory
    type: string
    default: not-specified
  - name: SDKType
    type: string
    default: all
  - name: CheckAOTCompat
    type: boolean
    default: false
  - name: AOTTestInputs
    type: object
    default: []
  - name: BuildSnippets
    type: boolean
    default: true

  - name: DependsOn
    type: string
    default: ''
  - name: CloudConfig
    type: object
    default: {}
  - name: Matrix
    type: string
  - name: UsePlatformContainer
    type: boolean
    default: false
  - name: OSName
    type: string

jobs:
  - job:
    displayName: "Build"
    dependsOn: ${{ parameters.DependsOn }}
    condition: and(succeededOrFailed(), ne(${{ parameters.Matrix }}, '{}'))
    strategy:
      matrix: $[ ${{ parameters.Matrix }} ]

    variables:
      Codeql.Enabled: true
      Codeql.BuildIdentifier: ${{ parameters.ServiceDirectory }}
      Codeql.SkipTaskAutoInjection: false
      SDKType: ${{ parameters.SDKType }}

    pool:
      # 1es pipeline templates converts `image` to demands: ImageOverride under the hood
      # which is incompatible with image selection in the default non-1es hosted pools
      ${{ if eq(parameters.OSName, 'macOS') }}:
        vmImage: $(OSVmImage)
      ${{ else }}:
        image: $(OSVmImage)
      name: $(Pool)
      os: ${{ parameters.OSName }}
    ${{ if eq(parameters.UsePlatformContainer, 'true') }}:
      # Add a default so the job doesn't fail when the matrix is empty
      container: $[ variables['Container'] ]

    steps:
      - template: /eng/pipelines/templates/steps/build.yml
        parameters:
          Artifacts: ${{ parameters.Artifacts }}
          TestPipeline: ${{ parameters.TestPipeline }}
          ServiceDirectory: ${{ parameters.ServiceDirectory }}
          SDKType: ${{ parameters.SDKType }}
          CheckAOTCompat: ${{ parameters.CheckAOTCompat }}
          AOTTestInputs: ${{ parameters.AOTTestInputs }}