parameters:
- name: BuildToolsPath
  type: string
  default: '$(Build.SourcesDirectory)/azure-sdk-build-tools'
- name: NugetVersion
  type: string
  default: '5.4.x'
- name: DependsOn
  type: string
  default: Build
- name: ShouldPublishToNuget
  type: boolean
  default: false
- name: ShouldPublishToDevOps
  type: boolean
  default: false


jobs:
  - job: Release
    dependsOn: ${{ parameters.DependsOn }}
    pool:
      name: azsdk-pool-mms-win-2022-general
      vmImage: windows-2022

    steps:
      - checkout: self

      - checkout: azure-sdk-build-tools

      - download: current
        artifact: packages
        displayName: Download published Nuget Packages

      - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
        parameters:
          PackagesPath: '$(PIPELINE.WORKSPACE)/packages'
          BuildToolsPath: '${{ parameters.BuildToolsPath }}'

      - ${{ if and(eq(parameters.ShouldPublishToNuget, 'true'), eq(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-net')) }}:

        - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
          parameters:
            ArtifactLocation: '$(PIPELINE.WORKSPACE)/packages'
            PackageRepository: Nuget
            ReleaseSha: $(Build.SourceVersion)

        - template: pipelines/steps/publish-symbols.yml@azure-sdk-build-tools
          displayName: 'Upload Symbols'
          parameters:
            BuildToolsRepositoryPath: ${{ parameters.BuildToolsPath }}
            PackagesPath: $(PIPELINE.WORKSPACE)/packages
            StagingDirectory: $(Build.ArtifactStagingDirectory)/symbols

        - task: NuGetToolInstaller@1
          displayName: 'Use NuGet ${{ parameters.NugetVersion }}'
          inputs:
            versionSpec: ${{ parameters.NugetVersion }}

        - task: NuGetCommand@2
          displayName: 'Publish to Nuget'
          inputs:
            command: push
            packagesToPush: '$(PIPELINE.WORKSPACE)/packages/**/*.nupkg;!$(PIPELINE.WORKSPACE)/packages/**/*.symbols.nupkg'
            nuGetFeedType: external
            publishFeedCredentials: Nuget.org

      - ${{ if eq(parameters.ShouldPublishToDevOps, 'true') }}:

        - pwsh: |
            # For safety default to publishing to the private feed.
            # Publish to https://dev.azure.com/azure-sdk/internal/_packaging?_a=feed&feed=azure-sdk-for-net-pr
            $devopsFeedId = '590cfd2a-581c-4dcb-a12e-6568ce786175/fa8b2d77-74d9-48d7-bb96-badb2b9c6ca4'
            if ('$(Build.Repository.Name)' -eq 'Azure/azure-sdk-for-net') {
              # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
              $devopsFeedId = '29ec6040-b234-4e31-b139-33dc4287b756/fa8c16a3-dbe0-4de2-a297-03065ec1ba3f'
            }
            echo "##vso[task.setvariable variable=DevOpsFeedID]$devopsFeedId"
            echo "Using DevopsFeedId = $devopsFeedId"
          displayName: Setup DevOpsFeedId

        - task: NuGetCommand@2
          displayName: 'Publish to DevOps Feed'
          inputs:
            command: push
            packagesToPush: '$(PIPELINE.WORKSPACE)/packages/**/*.nupkg;!$(PIPELINE.WORKSPACE)/packages/**/*.symbols.nupkg'
            publishVstsFeed: $(DevOpsFeedID)

      - template: /eng/common/pipelines/templates/steps/publish-artifact.yml
        parameters:
          ArtifactPath: '$(PIPELINE.WORKSPACE)/packages'
          ArtifactName: 'packages-signed'