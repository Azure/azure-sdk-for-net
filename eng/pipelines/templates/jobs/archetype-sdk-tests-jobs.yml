parameters:
- name: Platforms
  type: object
  default: []
- name: PreSteps
  type: object
  default: []
- name: PostSteps
  type: object
  default: []
- name: EnvVars
  type: object
  default: {}
- name: MaxParallel
  type: number
  default: 0
- name: BuildInParallel
  type: boolean
  default: true
- name: TimeoutInMinutes
  type: number
  default: 60
- name: Location
  type: string
  default: ''
- name: ServiceDirectory
  type: string
  default: not-specified
- name: TestSetupSteps
  type: stepList
  default: []
- name: CloudConfigurations
  type: object
  default:
    AzureCloud:
      SubscriptionConfiguration: $(sub-config-azure-cloud-test-resources)

jobs:
  - ${{ each cloudConfig in parameters.CloudConfigurations }}:
    - ${{ each platform in parameters.Platforms }}:
      - job:
        condition: and(succeededOrFailed(), eq(eq(variables['Record'], 'true'), eq('${{ platform.TestMode }}', 'Record')))
        displayName: ${{ platform.DisplayName }}_${{ cloudConfig.key }}
        variables:
          - template: ../variables/globals.yml
          - name: OSVmImage
            value: ${{ platform.OSVmImage }}

        timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

        pool:
          vmImage: $(OSVmImage)
        ${{ if platform.Container }}:
          container: ${{ platform.Container }}

        steps:
          - ${{ if platform.PreSteps }}:
            - ${{ platform.PreSteps }}

          - ${{ parameters.PreSteps }}

          - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml

          - ${{ each step in parameters.TestSetupSteps }}:
            - ${{ each pair in step }}:
                ${{ pair.key }}: ${{ pair.value }}

          - template: /eng/common/TestResources/deploy-test-resources.yml
            parameters:
              Location: ${{ cloudConfig.value.Location }}
              ServiceDirectory: '${{ parameters.ServiceDirectory }}'
              SubscriptionConfiguration: ${{ cloudConfig.value.SubscriptionConfiguration }}
              ArmTemplateParameters: ${{ cloudConfig.value.ArmTemplateParameters }}

          - script: >
              dotnet test eng/service.proj
              --framework ${{ platform.TestTargetFramework }}
              --filter "TestCategory!=Manually"
              --logger "trx"
              --logger:"console;verbosity=normal"
              /p:ServiceDirectory=${{ parameters.ServiceDirectory }}
              /p:IncludeSrc=false /p:IncludeSamples=false
              /p:BuildInParallel=${{ parameters.BuildInParallel }}
              ${{ platform.AdditionalTestArguments }}

            displayName: "Build & Test (all tests for ${{ platform.TestTargetFramework }})"
            env:
              DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
              DOTNET_CLI_TELEMETRY_OPTOUT: 1
              DOTNET_MULTILEVEL_LOOKUP: 0
              AZURE_TEST_MODE: "${{ coalesce(platform.TestMode, 'None') }}"
              ${{ insert }}: ${{ parameters.EnvVars }}
              ${{ insert }}: ${{ cloudConfig.value.EnvVars }}

          - template: /eng/common/TestResources/remove-test-resources.yml
            parameters:
              ServiceDirectory: '${{ parameters.ServiceDirectory }}'
              SubscriptionConfiguration: ${{ cloudConfig.value.SubscriptionConfiguration }}

          - task: PublishTestResults@2
            condition: always()
            displayName: "Publish Results (${{ platform.TestTargetFramework }})"
            inputs:
              testResultsFiles: "**/*.trx"
              testRunTitle: "$(OSName) ${{ platform.TestTargetFramework }}"
              testResultsFormat: "VSTest"
              mergeTestResults: true

          - ${{ parameters.PostSteps }}

          - ${{ if platform.PostSteps }}:
            - ${{ platform.PostSteps }}
