parameters:
  - name: Daily
    type: boolean
    default: true
  - name: Artifact
    type: object
    default: {}
  - name: ArtifactName
    type: string
    default: ""
  - name: TimeoutInMinutes
    type: number
    default: 60

jobs:
  - ${{ if eq(parameters.Daily, false) }}:
    - job: smoke_test_eligibility
      pool:
        name: "azsdk-pool-mms-ubuntu-2004-general"
        vmImage: "MMSUbuntu20.04"
      displayName: Check Smoke Test Eligibility
      steps:
        # pipelines only supports template each when it generates the entire script block.
        - ${{ if and(ne(variables['Skip.Release'], 'true'), ne(parameters.Artifact.skipPublishPackage, 'true')) }}:
          - pwsh: |
              $deps = (Select-Xml -Path ./common/SmokeTests/SmokeTest/SmokeTest.csproj `
                                  -Xpath //ItemGroup/PackageReference/@Include).Node.Value
              if ($deps.Contains("${{ parameters.Artifact.name }}")) {
                Write-Host "Smoke tests will run for ${{ parameters.Artifact.name }}"
                Write-Host "##vso[task.setvariable variable=RunSmokeTests]true"
              } else {
                Write-Host "Smoke tests will NOT run for ${{ parameters.Artifact.name }}"
              }
            name: check_smoke_tests_${{ parameters.Artifact.safeName }}
            displayName: Check smoke test eligibility for ${{ parameters.Artifact.name }}
        - pwsh: |
            Write-Host "Setting RunSmokeTests to ${env:RunSmokeTests}"
            Write-Host "##vso[task.setvariable variable=RunSmokeTests;isOutput=true]${env:RunSmokeTests}"
          name: output_eligibility
          env:
            RunSmokeTests: $(RunSmokeTests)

  - job: SmokeTest
    displayName: Run Smoke Test
    ${{ if eq(parameters.Daily, false) }}:
      dependsOn: smoke_test_eligibility
      condition: and(succeeded(), eq(dependencies.smoke_test_eligibility.outputs['output_eligibility.RunSmokeTests'], true))
    strategy:
      matrix:
        Ubuntu_Net60:
          Pool: "azsdk-pool-mms-ubuntu-2004-general"
          OSVmImage: "MMSUbuntu20.04"
          TestTargetFramework: net6.0
        Windows_NetFramework:
          Pool: "azsdk-pool-mms-win-2022-general"
          OSVmImage: "windows-2022"
          TestTargetFramework: net462
        Windows_Net60:
          Pool: "azsdk-pool-mms-win-2022-general"
          OSVmImage: "windows-2022"
          TestTargetFramework: net6.0
        Windows_Net70:
          Pool: "azsdk-pool-mms-win-2022-general"
          OSVmImage: "windows-2022"
          TestTargetFramework: net7.0
    pool:
      name: $(Pool)
      vmImage: $(OSVmImage)
    timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}

    steps:
      - template: /eng/common/pipelines/templates/steps/verify-agent-os.yml
        parameters:
          AgentImage: $(OSVmImage)
      - template: /eng/pipelines/templates/steps/install-dotnet.yml
        parameters:
          EnableNuGetCache: false

      - ${{ if eq(parameters.Daily, true) }}:
        - task: PowerShell@2
          displayName: Use latest dev feed package versions
          inputs:
            targetType: filePath
            filePath: ./common/SmokeTests/SmokeTest/Update-Dependencies.ps1
            arguments: -CI -PreferDevVersion
            workingDirectory: common/SmokeTests/SmokeTest
            pwsh: true

      - ${{ if eq(parameters.Daily, false) }}:
        - download: current
          artifact: ${{ parameters.ArtifactName }}
          timeoutInMinutes: 5

      - ${{ if eq(parameters.Daily, false) }}:
        - task: PowerShell@2
          displayName: Use latest GA/Beta package versions
          inputs:
            targetType: filePath
            filePath: ./common/SmokeTests/SmokeTest/Update-Dependencies.ps1
            arguments: -CI -PreferDevVersion -ArtifactsPath "$(Pipeline.Workspace)/${{ parameters.ArtifactName }}"
            workingDirectory: common/SmokeTests/SmokeTest
            pwsh: true

      - pwsh: Get-Content ./common/SmokeTests/SmokeTest/SmokeTest.csproj
        displayName: Show SmokeTest.csproj

      - template: /eng/pipelines/templates/steps/install-dotnet.yml

      - pwsh: dotnet restore ./common/SmokeTests/SmokeTest/SmokeTest.csproj
        displayName: dotnet restore

      - pwsh: dotnet run -p .\common\SmokeTests\SmokeTest\SmokeTest.csproj --framework $(TestTargetFramework)
        displayName: "Run Smoke Tests"
