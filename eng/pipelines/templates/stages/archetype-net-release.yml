parameters:
  Artifacts: []
  TestPipeline: false
  ArtifactName: 'not-specified'
  # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
  DevOpsFeedId: '29ec6040-b234-4e31-b139-33dc4287b756/fa8c16a3-dbe0-4de2-a297-03065ec1ba3f'
  TargetDocRepoOwner: 'not-specified'
  TargetDocRepoName: 'not-specified'
  Environment: nuget
stages:
  - stage: Signing
    dependsOn: ${{parameters.DependsOn}}
    jobs:
      - deployment: SignPackage
        environment: esrp
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: windows-2022

        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - download: current
                  artifact: ${{parameters.ArtifactName}}
                  timeoutInMinutes: 5

                - template: tools/clone-buildtools/clone-buildtools.yml@azure-sdk-build-tools

                - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
                  parameters:
                    PackagesPath:  $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                    BuildToolsPath: $(AzureSDKBuildToolsPath)

                - publish: $(Pipeline.Workspace)/${{parameters.ArtifactName}}
                  artifact: ${{parameters.ArtifactName}}-signed
                  displayName: 'Store signed packages in ${{parameters.ArtifactName}}-signed artifact'

  - ${{if and(in(variables['Build.Reason'], 'Manual', ''), eq(variables['System.TeamProject'], 'internal'))}}:
    - ${{ each artifact in parameters.Artifacts }}:
      - ${{if ne(artifact.skipReleaseStage, 'true')}}:
        - stage:
          displayName: 'Release: ${{artifact.name}}'
          dependsOn: Signing
          condition: and(succeeded(), ne(variables['SetDevVersion'], 'true'), ne(variables['Skip.Release'], 'true'), ne(variables['Build.Repository.Name'], 'Azure/azure-sdk-for-net-pr'))
          jobs:
            - ${{if ne(artifact.skipTagRepository, 'true')}}:
              - deployment: TagRepository
                displayName: "Create release tag"
                condition: ne(variables['Skip.TagRepository'], 'true')
                environment: ${{parameters.Environment}}

                pool:
                  name: azsdk-pool-mms-win-2022-general
                  vmImage: windows-2022

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: self
                        - download: current
                          artifact: ${{parameters.ArtifactName}}-signed
                        - template: /eng/pipelines/templates/steps/install-dotnet.yml
                          parameters:
                            EnableNuGetCache: false
                        - template: /eng/common/pipelines/templates/steps/retain-run.yml
                        - template: /eng/common/pipelines/templates/steps/set-test-pipeline-version.yml
                          parameters:
                            PackageName: "Azure.Template"
                            ServiceDirectory: "template"
                            TestPipeline: ${{ parameters.TestPipeline }}
                        - template: /eng/common/pipelines/templates/steps/verify-changelog.yml
                          parameters:
                            PackageName: ${{artifact.name}}
                            ServiceName: ${{parameters.ServiceDirectory}}
                            ForRelease: true
                        - task: PowerShell@2
                          inputs:
                            filePath: $(System.DefaultWorkingDirectory)/eng/scripts/InstallationCheck.ps1
                            pwsh: true
                            arguments: >
                              -ArtifactsDirectory "$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed"
                              -Artifact ${{artifact.name}}
                          condition: and(succeeded(),ne('${{ artifact.skipPublishPackage }}', 'true'))
                          displayName: Verify Package Installation
                        - template: /eng/common/pipelines/templates/steps/create-tags-and-git-release.yml
                          parameters:
                            ArtifactLocation: $(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}
                            PackageRepository: Nuget
                            ReleaseSha: $(Build.SourceVersion)
                            RepoId: Azure/azure-sdk-for-net

            - ${{if ne(artifact.skipPublishPackage, 'true')}}:
              - deployment: PublishPackage
                displayName: Publish package to Nuget.org and DevOps Feed
                condition: and(succeeded(), ne(variables['Skip.PublishPackage'], 'true'))
                environment: ${{parameters.Environment}}
                dependsOn: TagRepository

                pool:
                  name: azsdk-pool-mms-ubuntu-2004-general
                  vmImage: MMSUbuntu20.04

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: none
                        - task: NuGetCommand@2
                          displayName: 'Publish ${{artifact.name}} package to NuGet.org'
                          inputs:
                            command: push
                            packagesToPush: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.nupkg;!$(Pipeline.Workspace)//${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.symbols.nupkg'
                            nuGetFeedType: external
                            publishFeedCredentials: Nuget.org
                        - task: NuGetCommand@2
                          displayName: 'Publish to DevOps Feed'
                          inputs:
                            command: push
                            packagesToPush: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.nupkg;!$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.symbols.nupkg'
                            publishVstsFeed: ${{ parameters.DevOpsFeedID }}

            - ${{if ne(artifact.skipSymbolsUpload, 'true')}}:
              - deployment: UploadSymbols
                displayName: Upload Symbols to Symbols Server
                condition: and(succeeded(), ne(variables['Skip.SymbolsUpload'], 'true'))
                environment: ${{parameters.Environment}}
                dependsOn: PublishPackage

                pool:
                  name: azsdk-pool-mms-win-2022-general
                  vmImage: windows-2022

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: none
                        - template: tools/clone-buildtools/clone-buildtools.yml@azure-sdk-build-tools
                        - task: MSBuild@1
                          displayName: 'Upload Symbols for ${{artifact.name}}'
                          inputs:
                            solution: '$(AzureSDKBuildToolsPath)/tools/symboltool/SymbolUploader.proj'
                            msbuildArguments: >-
                              /p:PackagesPath=$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}
                              /p:MSPublicSymbolsPAT=$(azuresdk-microsoftpublicsymbols-devops-pat)
                              /p:MSSymbolsPAT=$(azuresdk-microsoft-devops-pat)
                              /p:AzureSDKSymbolsPAT=$(azuresdk-azure-sdk-devops-pat)

            - ${{if ne(artifact.skipPublishDocMs, 'true')}}:
              - deployment: PublicDocsMS
                displayName: Publish to Docs.MS
                condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
                environment: ${{parameters.Environment}}
                dependsOn: PublishPackage

                pool:
                  name: azsdk-pool-mms-ubuntu-2004-general
                  vmImage: MMSUbuntu20.04

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                          parameters:
                            Paths:
                              - sdk/**/*.md
                              - .github/CODEOWNERS
                        - download: current
                        - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
                          parameters:
                            PackageInfoLocations:
                              - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
                            WorkingDirectory: $(System.DefaultWorkingDirectory)
                            TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
                            TargetDocRepoName: ${{parameters.TargetDocRepoName}}
                            Language: 'dotnet'
                            SparseCheckoutPaths:
                              - /api/overview/azure/
                              - /metadata/

            - ${{if ne(artifact.skipPublishDocGithubIo, 'true')}}:
              - deployment: PublishDocs
                displayName: Publish Docs to GitHub pages
                condition: and(succeeded(), ne(variables['Skip.PublishDocs'], 'true'))
                environment: ${{parameters.Environment}}
                dependsOn: PublishPackage

                pool:
                  name: azsdk-pool-mms-win-2022-general
                  vmImage: windows-2022

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
                        - template: /eng/common/pipelines/templates/steps/publish-blobs.yml
                          parameters:
                            FolderForUpload: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}'
                            BlobSASKey: '$(azure-sdk-docs-prod-sas)'
                            BlobName: '$(azure-sdk-docs-prod-blob-name)'
                            TargetLanguage: 'dotnet'
                            ArtifactLocation: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}/${{artifact.name}}'
                            # we override the regular script path because we have cloned the build tools repo as a separate artifact.
                            ScriptPath: 'eng/common/scripts/copy-docs-to-blobstorage.ps1'

            - ${{if ne(artifact.skipUpdatePackageVersion, 'true')}}:
              - deployment: UpdatePackageVersion
                displayName: "Update Package Version"
                condition: and(succeeded(), ne(variables['Skip.UpdatePackageVersion'], 'true'))
                environment: ${{parameters.Environment}}
                dependsOn: PublishPackage

                pool:
                  name: azsdk-pool-mms-win-2022-general
                  vmImage: windows-2022

                strategy:
                  runOnce:
                    deploy:
                      steps:
                        - checkout: self
                        - template: /eng/pipelines/templates/steps/install-dotnet.yml
                          parameters:
                            EnableNuGetCache: false
                        - pwsh: |
                            eng/scripts/Update-PkgVersion.ps1 -ServiceDirectory '${{parameters.ServiceDirectory}}' -PackageName '${{artifact.name}}'
                          displayName: Increment package version
                        - template: /eng/common/pipelines/templates/steps/create-pull-request.yml
                          parameters:
                            RepoName: azure-sdk-for-net
                            PRBranchName: increment-package-version-${{ parameters.ServiceDirectory }}-$(Build.BuildId)
                            CommitMsg: "Increment package version after release of ${{ artifact.name }}"
                            PRTitle: "Increment version for ${{ parameters.ServiceDirectory }} releases"
                            CloseAfterOpenForTesting: '${{ parameters.TestPipeline }}'

            - ${{if ne(artifact.skipSmokeTests, 'true')}}:
              - ${{if and(eq(variables['Build.Reason'], 'Manual'), eq(variables['System.TeamProject'], 'internal'))}}:
                - template: /eng/pipelines/templates/jobs/smoke.tests.yml
                  parameters:
                    Daily: false
                    Artifact: ${{ artifact }}
                    ArtifactName: ${{ parameters.ArtifactName }}

  - stage: Integration
    dependsOn: Signing
    jobs:
    - job: PublishPackages
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      displayName: Publish package to daily feed
      pool:
        name: azsdk-pool-mms-win-2022-general
        vmImage: windows-2022
      steps:
      - checkout: none
      - template: tools/clone-buildtools/clone-buildtools.yml@azure-sdk-build-tools
      - download: current
        artifact: ${{parameters.ArtifactName}}-signed
      - pwsh: |
          # For safety default to publishing to the private feed.
          # Publish to https://dev.azure.com/azure-sdk/internal/_packaging?_a=feed&feed=azure-sdk-for-net-pr
          $devopsFeedId = '590cfd2a-581c-4dcb-a12e-6568ce786175/fa8b2d77-74d9-48d7-bb96-badb2b9c6ca4'
          if ('$(Build.Repository.Name)' -eq 'Azure/azure-sdk-for-net') {
            # Publish to https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-net
            $devopsFeedId = '${{ parameters.DevOpsFeedID }}'
          }
          echo "##vso[task.setvariable variable=DevOpsFeedID]$devopsFeedId"
          echo "Using DevopsFeedId = $devopsFeedId"
        displayName: Setup DevOpsFeedId
      - ${{ each artifact in parameters.Artifacts }}:
        - task: NuGetCommand@2
          displayName: 'Publish to DevOps Feed'
          inputs:
            command: push
            packagesToPush: '$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.nupkg;!$(Pipeline.Workspace)/${{parameters.ArtifactName}}-signed/${{artifact.name}}/*.symbols.nupkg'
            publishVstsFeed: $(DevOpsFeedID)

    - job: PublishDocsToNightlyBranch
      dependsOn: PublishPackages
      condition: or(eq(variables['SetDevVersion'], 'true'), and(eq(variables['Build.Reason'],'Schedule'), eq(variables['System.TeamProject'], 'internal')))
      pool:
        name: azsdk-pool-mms-ubuntu-2004-general
        vmImage: MMSUbuntu20.04
      steps:
        - template: /eng/common/pipelines/templates/steps/sparse-checkout.yml
          parameters:
            Paths:
              - sdk/**/*.md
              - .github/CODEOWNERS
        - download: current
        - pwsh: |
            Get-ChildItem -Recurse $(Pipeline.Workspace)/${{parameters.ArtifactName}}/
          displayName: Show visible artifacts
        - template: /eng/common/pipelines/templates/steps/update-docsms-metadata.yml
          parameters:
            PackageInfoLocations:
              - ${{ each artifact in parameters.Artifacts }}:
                - $(Pipeline.Workspace)/${{parameters.ArtifactName}}/PackageInfo/${{artifact.name}}.json
            WorkingDirectory: $(System.DefaultWorkingDirectory)
            TargetDocRepoOwner: ${{parameters.TargetDocRepoOwner}}
            TargetDocRepoName: ${{parameters.TargetDocRepoName}}
            Language: 'dotnet'
            DailyDocsBuild: true
            SparseCheckoutPaths:
              - /api/overview/azure/
              - /metadata/
