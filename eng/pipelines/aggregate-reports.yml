trigger: none

pr:
  branches:
    include:
      - main
  paths:
    include:
      - eng/pipelines/aggregate-reports.yml

pool:
  name: azsdk-pool-mms-win-2022-general
  vmImage: MMS2022

variables:
  - template: templates/variables/globals.yml

stages:
  - stage: AggregateReports
    displayName: Aggregate Reports

    jobs:
      - job: GenerateReports
        timeoutInMinutes: 120
        steps:
          - template: /eng/pipelines/templates/steps/install-dotnet.yml

          - task: PowerShell@2
            displayName: Download Latest Dev Packages
            inputs:
              pwsh: true
              filePath: 'eng/scripts/DownloadDevPackages.ps1'
              arguments: >
                -WorkingDirectory '$(Build.ArtifactStagingDirectory)'
                -NupkgFilesDestination 'nupkgFiles'

          - pwsh: |
              ."eng/common/spelling/Invoke-Cspell.ps1" `
                -CSpellConfigPath "./.vscode/cspell.json" `
                -ScanGlobs "sdk/*/*/api/*.cs"
            displayName: Check spelling of public API surface
            # Spelling errors in public api surface are not blockers yet but will
            # become blockers when this is rolled out to all services. For now, turn
            # the pipeline yellow if spelling errors are detected but do not block.
            continueOnError: true

          - template: /eng/common/pipelines/templates/steps/verify-links.yml
            parameters:
              Directory: ""
              CheckLinkGuidance: $true

          - pwsh: |
              New-Item -Path '$(Build.ArtifactStagingDirectory)' -Name 'reports' -ItemType 'directory'
            displayName: Create Directory for Aggregate Reports

          - task: PowerShell@2
            displayName: Generate Dependency Report
            inputs:
              pwsh: true
              filePath: 'eng/scripts/dependencies/AnalyzeDeps.ps1'
              arguments: >
                -PackagesPath '$(Build.ArtifactStagingDirectory)/nupkgFiles'
                -LockfilePath '$(Build.SourcesDirectory)/eng/Packages.Data.props'
                -OutPath '$(Build.ArtifactStagingDirectory)/reports/dependencies.html'
                -DumpPath '$(Build.ArtifactStagingDirectory)/reports'

          - task: PowerShell@2
            displayName: 'Generate azure-sdk.deps.json'
            inputs:
              pwsh: true
              filePath: 'eng/scripts/dependencies/generate-deps.ps1'
              arguments: >
                -PackagesPath '$(Build.ArtifactStagingDirectory)/nupkgFiles'
                -DepsOutputFile '$(Build.ArtifactStagingDirectory)/reports/azure-sdk.deps.json'
                -ProjectRefPath '$(Build.ArtifactStagingDirectory)/reports'

          - task: PowerShell@2
            displayName: 'Validate dependencies with pwsh servicing'
            inputs:
              pwsh: true
              filePath: 'eng/scripts/dependencies/compare-deps-files.ps1'
              arguments: >
                -PSDepsFile 'https://aka.ms/ps-deps-servicing'
                -AzSdkDepsFile '$(Build.ArtifactStagingDirectory)/reports/azure-sdk.deps.json'

          - task: PowerShell@2
            displayName: 'Validate dependencies with pwsh stable'
            inputs:
              pwsh: true
              filePath: 'eng/scripts/dependencies/compare-deps-files.ps1'
              arguments: >
                -PSDepsFile 'https://aka.ms/ps-deps-stable'
                -AzSdkDepsFile '$(Build.ArtifactStagingDirectory)/reports/azure-sdk.deps.json'

          - task: PowerShell@2
            displayName: 'Validate dependencies with pwsh preview'
            inputs:
              pwsh: true
              filePath: 'eng/scripts/dependencies/compare-deps-files.ps1'
              arguments: >
                -PSDepsFile 'https://aka.ms/ps-deps-preview'
                -AzSdkDepsFile '$(Build.ArtifactStagingDirectory)/reports/azure-sdk.deps.json'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish Report Artifacts'
            inputs:
              artifactName: reports
              path: '$(Build.ArtifactStagingDirectory)/reports'

          - task: AzureFileCopy@4
            displayName: 'Upload Dependency Report'
            inputs:
              sourcePath: '$(Build.ArtifactStagingDirectory)/reports/*'
              azureSubscription: 'Azure SDK Artifacts'
              destination: AzureBlob
              storage: azuresdkartifacts
              containerName: 'azure-sdk-for-net'
              blobPrefix: dependencies
              AdditionalArgumentsForBlobCopy: '--exclude-pattern=*data.js*'

          - task: AzureFileCopy@4
            displayName: 'Upload Dependency Graph'
            inputs:
              sourcePath: '$(Build.ArtifactStagingDirectory)/reports/*'
              azureSubscription: 'Azure SDK Artifacts'
              destination: AzureBlob
              storage: azuresdkartifacts
              containerName: 'azure-sdk-for-net'
              blobPrefix: dependencies/dependencyGraph
              AdditionalArgumentsForBlobCopy: '--include-pattern=*data.js*'

          - task: PowerShell@2
            displayName: "Verify Repository Resource Refs"
            inputs:
              pwsh: true
              workingDirectory: $(Build.SourcesDirectory)
              filePath: eng/common/scripts/Verify-Resource-Ref.ps1

  - stage: ComplianceTools
    displayName: Compliance Tools
    dependsOn: []

    jobs:
      - job: ComplianceTools
        timeoutInMinutes: 120
        steps:
          - template: /eng/common/pipelines/templates/steps/policheck.yml
            parameters:
              ExclusionDataBaseFileName: "DotNetPoliCheckExclusion"
              PublishAnalysisLogs: false

          - template: /eng/common/pipelines/templates/steps/credscan.yml
            parameters:
              BaselineFilePath: $(Build.SourcesDirectory)\eng\dotnet.gdnbaselines

          - task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@3
            displayName: 'Publish Security Analysis Logs'
            condition: succeededOrFailed()