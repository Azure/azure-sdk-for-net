// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace OperationalInsightsManagementClient.Models
{
    /// <summary> The top level Linked service resource container. </summary>
    public partial class LinkedService : ProxyResource
    {
        /// <summary> Initializes a new instance of LinkedService. </summary>
        public LinkedService()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of LinkedService. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="resourceId"> The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access. </param>
        /// <param name="writeAccessResourceId"> The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access. </param>
        /// <param name="provisioningState"> The provisioning state of the linked service. </param>
        internal LinkedService(string id, string name, string type, IDictionary<string, string> tags, string resourceId, string writeAccessResourceId, LinkedServiceEntityStatus? provisioningState) : base(id, name, type)
        {
            Tags = tags;
            ResourceId = resourceId;
            WriteAccessResourceId = writeAccessResourceId;
            ProvisioningState = provisioningState;
        }

        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require read access. </summary>
        public string ResourceId { get; set; }
        /// <summary> The resource id of the resource that will be linked to the workspace. This should be used for linking resources which require write access. </summary>
        public string WriteAccessResourceId { get; set; }
        /// <summary> The provisioning state of the linked service. </summary>
        public LinkedServiceEntityStatus? ProvisioningState { get; set; }
    }
}
