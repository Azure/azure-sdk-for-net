// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace OperationalInsightsManagementClient.Models
{
    /// <summary> The top level storage insight resource container. </summary>
    public partial class StorageInsight : ProxyResource
    {
        /// <summary> Initializes a new instance of StorageInsight. </summary>
        public StorageInsight()
        {
            Tags = new ChangeTrackingDictionary<string, string>();
            Containers = new ChangeTrackingList<string>();
            Tables = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of StorageInsight. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="eTag"> The ETag of the storage insight. </param>
        /// <param name="tags"> Resource tags. </param>
        /// <param name="containers"> The names of the blob containers that the workspace should read. </param>
        /// <param name="tables"> The names of the Azure tables that the workspace should read. </param>
        /// <param name="storageAccount"> The storage account connection details. </param>
        /// <param name="status"> The status of the storage insight. </param>
        internal StorageInsight(string id, string name, string type, string eTag, IDictionary<string, string> tags, IList<string> containers, IList<string> tables, StorageAccount storageAccount, StorageInsightStatus status) : base(id, name, type)
        {
            ETag = eTag;
            Tags = tags;
            Containers = containers;
            Tables = tables;
            StorageAccount = storageAccount;
            Status = status;
        }

        /// <summary> The ETag of the storage insight. </summary>
        public string ETag { get; set; }
        /// <summary> Resource tags. </summary>
        public IDictionary<string, string> Tags { get; }
        /// <summary> The names of the blob containers that the workspace should read. </summary>
        public IList<string> Containers { get; }
        /// <summary> The names of the Azure tables that the workspace should read. </summary>
        public IList<string> Tables { get; }
        /// <summary> The storage account connection details. </summary>
        public StorageAccount StorageAccount { get; set; }
        /// <summary> The status of the storage insight. </summary>
        public StorageInsightStatus Status { get; }
    }
}
