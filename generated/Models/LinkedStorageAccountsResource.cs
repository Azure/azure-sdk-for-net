// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace OperationalInsightsManagementClient.Models
{
    /// <summary> Linked storage accounts top level resource container. </summary>
    public partial class LinkedStorageAccountsResource : ProxyResource
    {
        /// <summary> Initializes a new instance of LinkedStorageAccountsResource. </summary>
        public LinkedStorageAccountsResource()
        {
            StorageAccountIds = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of LinkedStorageAccountsResource. </summary>
        /// <param name="id"> Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}. </param>
        /// <param name="name"> The name of the resource. </param>
        /// <param name="type"> The type of the resource. E.g. &quot;Microsoft.Compute/virtualMachines&quot; or &quot;Microsoft.Storage/storageAccounts&quot;. </param>
        /// <param name="dataSourceType"> Linked storage accounts type. </param>
        /// <param name="storageAccountIds"> Linked storage accounts resources ids. </param>
        internal LinkedStorageAccountsResource(string id, string name, string type, DataSourceType? dataSourceType, IList<string> storageAccountIds) : base(id, name, type)
        {
            DataSourceType = dataSourceType;
            StorageAccountIds = storageAccountIds;
        }

        /// <summary> Linked storage accounts type. </summary>
        public DataSourceType? DataSourceType { get; }
        /// <summary> Linked storage accounts resources ids. </summary>
        public IList<string> StorageAccountIds { get; }
    }
}
